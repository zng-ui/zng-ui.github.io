(function() {var type_impls = {
"zng":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(\n    self,\n    other: Size2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Size2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Size2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(\n    self,\n    other: Vector2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Vector2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Vector2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Size2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Vector2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Vector2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApproxEq%3CPoint2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-ApproxEq%3CPoint2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; ApproxEq&lt;Point2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: ApproxEq&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_epsilon\" class=\"method trait-impl\"><a href=\"#method.approx_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_epsilon</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Default epsilon value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq_eps\" class=\"method trait-impl\"><a href=\"#method.approx_eq_eps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_eq_eps</a>(&amp;self, other: &amp;Point2D&lt;T, U&gt;, eps: &amp;Point2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\na provided epsilon value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq\" class=\"method trait-impl\"><a href=\"#method.approx_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\nthe <code>approx_epsilon()</code> epsilon value.</div></details></div></details>","ApproxEq<Point2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Ceil-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Ceil for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ceil</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.ceil\">Point2D::ceil()</a></p>\n</div></details></div></details>","Ceil","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Default-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Point2D&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DipToPx-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#604\">source</a><a href=\"#impl-DipToPx-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/layout/trait.DipToPx.html\" title=\"trait zng::layout::DipToPx\">DipToPx</a> for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsPx\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsPx\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/layout/trait.DipToPx.html#associatedtype.AsPx\" class=\"associatedtype\">AsPx</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\"><code>Px</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_px\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#607\">source</a><a href=\"#method.to_px\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/layout/trait.DipToPx.html#tymethod.to_px\" class=\"fn\">to_px</a>(self, scale_factor: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt; as <a class=\"trait\" href=\"zng/layout/trait.DipToPx.html\" title=\"trait zng::layout::DipToPx\">DipToPx</a>&gt;::<a class=\"associatedtype\" href=\"zng/layout/trait.DipToPx.html#associatedtype.AsPx\" title=\"type zng::layout::DipToPx::AsPx\">AsPx</a></h4></section></summary><div class='docblock'>Multiply the <a href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\"><code>Dip</code></a> self by the scale.</div></details></div></details>","DipToPx","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#303\">source</a><a href=\"#impl-Div%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#306\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#241\">source</a><a href=\"#impl-Div%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#244\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#186\">source</a><a href=\"#impl-Div%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#189\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor2d>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#161\">source</a><a href=\"#impl-Div%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#164\">source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor2d>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E\" class=\"impl\"><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Point2D&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;\n) -&gt; &lt;Point2D&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Div%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#318\">source</a><a href=\"#impl-DivAssign%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#319\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#256\">source</a><a href=\"#impl-DivAssign%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#257\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#198\">source</a><a href=\"#impl-DivAssign%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#199\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor2d>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#173\">source</a><a href=\"#impl-DivAssign%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#174\">source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor2d>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Floor-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Floor for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">floor</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.floor\">Point2D::floor()</a></p>\n</div></details></div></details>","Floor","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a>&gt; for Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a>) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a>&gt; for Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a>) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CPoint%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#impl-IntoVar%3CPoint%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/var/trait.IntoVar.html#associatedtype.Var\" class=\"associatedtype\">Var</a> = <a class=\"struct\" href=\"zng/var/struct.LocalVar.html\" title=\"struct zng::var::LocalVar\">LocalVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a href=\"zng/var/trait.IntoVar.html#associatedtype.Var\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt; as <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt;&gt;::<a class=\"associatedtype\" href=\"zng/var/trait.IntoVar.html#associatedtype.Var\" title=\"type zng::var::IntoVar::Var\">Var</a></h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_var/lib.rs.html#811-813\">source</a><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#method.into_boxed_var\" class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into <a href=\"zng/var/type.BoxedVar.html\" title=\"type zng::var::BoxedVar\"><code>BoxedVar&lt;T&gt;</code></a>. <a href=\"zng/var/trait.IntoVar.html#method.into_boxed_var\">Read more</a></div></details></div></details>","IntoVar<Point>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CPoint%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#impl-IntoVar%3CPoint%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/var/trait.IntoVar.html#associatedtype.Var\" class=\"associatedtype\">Var</a> = <a class=\"struct\" href=\"zng/var/struct.LocalVar.html\" title=\"struct zng::var::LocalVar\">LocalVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a href=\"zng/var/trait.IntoVar.html#associatedtype.Var\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt;&gt;::<a class=\"associatedtype\" href=\"zng/var/trait.IntoVar.html#associatedtype.Var\" title=\"type zng::var::IntoVar::Var\">Var</a></h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_var/lib.rs.html#811-813\">source</a><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#method.into_boxed_var\" class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into <a href=\"zng/var/type.BoxedVar.html\" title=\"type zng::var::BoxedVar\"><code>BoxedVar&lt;T&gt;</code></a>. <a href=\"zng/var/trait.IntoVar.html#method.into_boxed_var\">Read more</a></div></details></div></details>","IntoVar<Point>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MallocSizeOf-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; MallocSizeOf for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: MallocSizeOf,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut MallocSizeOfOps) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#294\">source</a><a href=\"#impl-Mul%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#297\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#232\">source</a><a href=\"#impl-Mul%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#235\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#179\">source</a><a href=\"#impl-Mul%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#182\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor2d>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#154\">source</a><a href=\"#impl-Mul%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#157\">source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor2d>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E\" class=\"impl\"><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Point2D&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;\n) -&gt; &lt;Point2D&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#312\">source</a><a href=\"#impl-MulAssign%3CFactor%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#313\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#250\">source</a><a href=\"#impl-MulAssign%3CFactor%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#251\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#193\">source</a><a href=\"#impl-MulAssign%3CFactor2d%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#194\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor2d>","zng::layout::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#168\">source</a><a href=\"#impl-MulAssign%3CFactor2d%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#169\">source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor2d>","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Point2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peek-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Peek-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Peek for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Peek,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_from\" class=\"method trait-impl\"><a href=\"#method.peek_from\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">peek_from</a>(bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.pointer.html\">*mut </a>Point2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Deserialize from the buffer pointed to by <code>bytes</code>. <a>Read more</a></div></details></div></details>","Peek","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">origin</a>() -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zero</a>() -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"#method.origin\"><code>origin()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(x: T, y: T) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values directly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_lengths</a>(x: Length&lt;T, U&gt;, y: Length&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking properly Lengths instead of scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">splat</a>(v: T) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_untyped</a>(p: Point2D&lt;T, UnknownUnit&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map</a>&lt;V, F&gt;(self, f: F) -&gt; Point2D&lt;V, U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; V,</div></h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each component of this point.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::default::Point2D;\n\n<span class=\"kw\">let </span>p = Point2D::&lt;u32&gt;::new(<span class=\"number\">5</span>, <span class=\"number\">15</span>);\n<span class=\"macro\">assert_eq!</span>(p.map(|coord| coord.saturating_sub(<span class=\"number\">10</span>)), Point2D::new(<span class=\"number\">0</span>, <span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zip</a>&lt;V, F&gt;(self, rhs: Point2D&lt;T, U&gt;, f: F) -&gt; Vector2D&lt;V, U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; V,</div></h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each pair of components of this point and <code>rhs</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{default::{Point2D, Vector2D}, point2};\n\n<span class=\"kw\">let </span>a: Point2D&lt;u32&gt; = point2(<span class=\"number\">50</span>, <span class=\"number\">200</span>);\n<span class=\"kw\">let </span>b: Point2D&lt;u32&gt; = point2(<span class=\"number\">100</span>, <span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(a.zip(b, u32::saturating_sub), Vector2D::new(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</code></pre></div>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">min</a>(self, other: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section><section id=\"method.max\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">max</a>(self, other: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clamp</a>(self, start: Point2D&lt;T, U&gt;, end: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the point each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add_size\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">add_size</a>(self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extend</a>(self, z: T) -&gt; Point3D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Create a 3d point from this one, using the specified z value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_vector</a>(self) -&gt; Vector2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast this point into a vector.</p>\n<p>Equivalent to subtracting the origin from this point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.yx\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">yx</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Swap x and y.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.yx(), point2(-<span class=\"number\">8</span>, <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_untyped</a>(self) -&gt; Point2D&lt;T, UnknownUnit&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.to_untyped().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.to_untyped().y);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; Point2D&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit, preserving the numeric value.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n<span class=\"kw\">enum </span>Cm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.cast_unit::&lt;Cm&gt;().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.cast_unit::&lt;Cm&gt;().y);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Cast into an array with x and y.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_array(), [<span class=\"number\">1</span>, -<span class=\"number\">8</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Cast into a tuple with x and y.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_tuple(), (<span class=\"number\">1</span>, -<span class=\"number\">8</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_3d\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_3d</a>(self) -&gt; Point3D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Convert into a 3d point with z-coordinate equals to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">round</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ceil</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">floor</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lerp</a>(self, other: Point2D&lt;T, U&gt;, t: T) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: One + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate between this point and another point.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::Point2D;\n\n<span class=\"kw\">let </span>from: Point2D&lt;<span class=\"kw\">_</span>&gt; = point2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Point2D&lt;<span class=\"kw\">_</span>&gt; = point2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), point2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), point2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), point2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), point2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), point2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; Point2D&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Point2D&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f64</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_usize</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>usize</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an i32 point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i64</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an i64 point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all members are finite.</p>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rem_euclid</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the least nonnegative remainder of <code>self (mod other)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::{Point2D, Size2D};\n\n<span class=\"kw\">let </span>p = Point2D::new(<span class=\"number\">7.0</span>, -<span class=\"number\">7.0</span>);\n<span class=\"kw\">let </span>s = Size2D::new(<span class=\"number\">4.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(p.rem_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>((-p).rem_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">1.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(p.rem_euclid(<span class=\"kw-2\">&amp;</span>-s), point2(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">div_euclid</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates Euclidean division, the matching method for <code>rem_euclid</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::{Point2D, Size2D};\n\n<span class=\"kw\">let </span>p = Point2D::new(<span class=\"number\">7.0</span>, -<span class=\"number\">7.0</span>);\n<span class=\"kw\">let </span>s = Size2D::new(<span class=\"number\">4.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(p.div_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>((-p).div_euclid(<span class=\"kw-2\">&amp;</span>s), point2(-<span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(p.div_euclid(<span class=\"kw-2\">&amp;</span>-s), point2(-<span class=\"number\">1.0</span>, -<span class=\"number\">2.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/real/trait.Real.html\" title=\"trait num_traits::real::Real\">Real</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.distance_to\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">distance_to</a>(self, other: Point2D&lt;T, U&gt;) -&gt; T</h4></section></div></details>",0,"zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Poke-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Poke-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Poke for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Poke,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method trait-impl\"><a href=\"#method.max_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum number of bytes that the serialized version of <code>Self</code>\nwill occupy. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poke_into\" class=\"method trait-impl\"><a href=\"#method.poke_into\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">poke_into</a>(&amp;self, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Serialize into the buffer pointed to by <code>bytes</code>. <a>Read more</a></div></details></div></details>","Poke","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PxToDip-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#596\">source</a><a href=\"#impl-PxToDip-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/layout/trait.PxToDip.html\" title=\"trait zng::layout::PxToDip\">PxToDip</a> for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsDip\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsDip\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/layout/trait.PxToDip.html#associatedtype.AsDip\" class=\"associatedtype\">AsDip</a> = Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\"><code>Dip</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_dip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#599\">source</a><a href=\"#method.to_dip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/layout/trait.PxToDip.html#tymethod.to_dip\" class=\"fn\">to_dip</a>(self, scale_factor: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng/layout/trait.PxToDip.html\" title=\"trait zng::layout::PxToDip\">PxToDip</a>&gt;::<a class=\"associatedtype\" href=\"zng/layout/trait.PxToDip.html#associatedtype.AsDip\" title=\"type zng::layout::PxToDip::AsDip\">AsDip</a></h4></section></summary><div class='docblock'>Divide the <a href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\"><code>Px</code></a> self by the scale.</div></details></div></details>","PxToDip","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PxToWr-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#63\">source</a><a href=\"#impl-PxToWr-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a> for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsDevice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsDevice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsDevice\" class=\"associatedtype\">AsDevice</a> = Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.i32.html\">i32</a>, DevicePixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <code>webrender::units::DevicePixel</code> units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsWorld\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsWorld\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsWorld\" class=\"associatedtype\">AsWorld</a> = Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, WorldPixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in `webrender::units::WorldPixel units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsLayout\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsLayout\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsLayout\" class=\"associatedtype\">AsLayout</a> = Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, LayoutPixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <code>webrender::units::LayoutPixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_device\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#68\">source</a><a href=\"#method.to_wr_device\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr_device\" class=\"fn\">to_wr_device</a>(self) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsDevice\" title=\"type zng_view::px_wr::PxToWr::AsDevice\">AsDevice</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::DevicePixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_world\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#72\">source</a><a href=\"#method.to_wr_world\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr_world\" class=\"fn\">to_wr_world</a>(self) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsWorld\" title=\"type zng_view::px_wr::PxToWr::AsWorld\">AsWorld</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::WorldPixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#76\">source</a><a href=\"#method.to_wr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr\" class=\"fn\">to_wr</a>(self) -&gt; &lt;Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsLayout\" title=\"type zng_view::px_wr::PxToWr::AsLayout\">AsLayout</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::LayoutPixel</code> units.</div></details></div></details>","PxToWr","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Round-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Round for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">round</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.round\">Point2D::round()</a></p>\n</div></details></div></details>","Round","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(\n    self,\n    other: Size2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Size2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Size2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(\n    self,\n    other: Vector2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Vector2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Vector2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Point2D&lt;T, U&gt;) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Size2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Vector2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Vector2D<T, U>>","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transitionable-for-Point2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_var/impls.rs.html#53-56\">source</a><a href=\"#impl-Transitionable-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"zng/var/animation/trait.Transitionable.html\" title=\"trait zng::var::animation::Transitionable\">Transitionable</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"zng/var/animation/trait.Transitionable.html\" title=\"trait zng::var::animation::Transitionable\">Transitionable</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_var/impls.rs.html#58\">source</a><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/animation/trait.Transitionable.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, to: &amp;Point2D&lt;T, U&gt;, step: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Sample the linear interpolation from <code>self</code> -&gt; <code>to</code> by <code>step</code>.  </div></details></div></details>","Transitionable","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zero-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zero for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></div></details>","Zero","zng::layout::DipPoint","zng::layout::PxPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zeroable-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zeroable for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.78.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","zng::layout::DipPoint","zng::layout::PxPoint"],["<section id=\"impl-Copy-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","zng::layout::DipPoint","zng::layout::PxPoint"],["<section id=\"impl-Eq-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","zng::layout::DipPoint","zng::layout::PxPoint"],["<section id=\"impl-IntoValue%3CPoint%3E-for-Point2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#impl-IntoValue%3CPoint%3E-for-Point2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section>","IntoValue<Point>","zng::layout::DipPoint"],["<section id=\"impl-IntoValue%3CPoint%3E-for-Point2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/point.rs.html#160-191\">source</a><a href=\"#impl-IntoValue%3CPoint%3E-for-Point2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Point.html\" title=\"struct zng::layout::Point\">Point</a>&gt; for Point2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section>","IntoValue<Point>","zng::layout::PxPoint"],["<section id=\"impl-Pod-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Pod-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Pod for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Pod,\n    U: 'static,</div></h3></section>","Pod","zng::layout::DipPoint","zng::layout::PxPoint"]],
"zng_unit":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(\n    self,\n    other: Size2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Size2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Size2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(\n    self,\n    other: Vector2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Vector2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<Vector2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Size2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Vector2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<Vector2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApproxEq%3CPoint2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-ApproxEq%3CPoint2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; ApproxEq&lt;Point2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: ApproxEq&lt;T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_epsilon\" class=\"method trait-impl\"><a href=\"#method.approx_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_epsilon</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Default epsilon value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq_eps\" class=\"method trait-impl\"><a href=\"#method.approx_eq_eps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_eq_eps</a>(&amp;self, other: &amp;Point2D&lt;T, U&gt;, eps: &amp;Point2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\na provided epsilon value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq\" class=\"method trait-impl\"><a href=\"#method.approx_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">approx_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\nthe <code>approx_epsilon()</code> epsilon value.</div></details></div></details>","ApproxEq<Point2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Ceil-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Ceil for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ceil</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.ceil\">Point2D::ceil()</a></p>\n</div></details></div></details>","Ceil","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.78.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.78.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Default-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.78.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Point2D&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.203/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E\" class=\"impl\"><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Point2D&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;\n) -&gt; &lt;Point2D&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Div%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Floor-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Floor for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">floor</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.floor\">Point2D::floor()</a></p>\n</div></details></div></details>","Floor","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a>&gt; for Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a>) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C(T,+T)%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a>&gt; for Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a>) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.78.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E\" class=\"impl\"><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Point2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Point2D&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;\n) -&gt; &lt;Point2D&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CT%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, scale: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Point2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.78.0/src/core/cmp.rs.html#263\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.origin\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">origin</a>() -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Constructor, setting all components to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zero</a>() -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"#method.origin\"><code>origin()</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(x: T, y: T) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values directly.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_lengths</a>(x: Length&lt;T, U&gt;, y: Length&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking properly Lengths instead of scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">splat</a>(v: T) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_untyped</a>(p: Point2D&lt;T, UnknownUnit&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">map</a>&lt;V, F&gt;(self, f: F) -&gt; Point2D&lt;V, U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T) -&gt; V,</div></h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each component of this point.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::default::Point2D;\n\n<span class=\"kw\">let </span>p = Point2D::&lt;u32&gt;::new(<span class=\"number\">5</span>, <span class=\"number\">15</span>);\n<span class=\"macro\">assert_eq!</span>(p.map(|coord| coord.saturating_sub(<span class=\"number\">10</span>)), Point2D::new(<span class=\"number\">0</span>, <span class=\"number\">5</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.zip\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zip</a>&lt;V, F&gt;(self, rhs: Point2D&lt;T, U&gt;, f: F) -&gt; Vector2D&lt;V, U&gt;<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/function/trait.FnMut.html\" title=\"trait core::ops::function::FnMut\">FnMut</a>(T, T) -&gt; V,</div></h4></section></summary><div class=\"docblock\"><p>Apply the function <code>f</code> to each pair of components of this point and <code>rhs</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<p>This may be used to perform unusual arithmetic which is not already offered as methods.</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::{default::{Point2D, Vector2D}, point2};\n\n<span class=\"kw\">let </span>a: Point2D&lt;u32&gt; = point2(<span class=\"number\">50</span>, <span class=\"number\">200</span>);\n<span class=\"kw\">let </span>b: Point2D&lt;u32&gt; = point2(<span class=\"number\">100</span>, <span class=\"number\">100</span>);\n<span class=\"macro\">assert_eq!</span>(a.zip(b, u32::saturating_sub), Vector2D::new(<span class=\"number\">0</span>, <span class=\"number\">100</span>));</code></pre></div>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.min\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">min</a>(self, other: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section><section id=\"method.max\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">max</a>(self, other: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clamp</a>(self, start: Point2D&lt;T, U&gt;, end: Point2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the point each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.add_size\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">add_size</a>(self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.extend\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">extend</a>(self, z: T) -&gt; Point3D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Create a 3d point from this one, using the specified z value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_vector</a>(self) -&gt; Vector2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast this point into a vector.</p>\n<p>Equivalent to subtracting the origin from this point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.yx\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">yx</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Swap x and y.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.yx(), point2(-<span class=\"number\">8</span>, <span class=\"number\">1</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_untyped</a>(self) -&gt; Point2D&lt;T, UnknownUnit&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.to_untyped().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.to_untyped().y);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; Point2D&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit, preserving the numeric value.</p>\n<h5 id=\"example-2\"><a class=\"doc-anchor\" href=\"#example-2\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n<span class=\"kw\">enum </span>Cm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.x, point.cast_unit::&lt;Cm&gt;().x);\n<span class=\"macro\">assert_eq!</span>(point.y, point.cast_unit::&lt;Cm&gt;().y);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Cast into an array with x and y.</p>\n<h5 id=\"example-3\"><a class=\"doc-anchor\" href=\"#example-3\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_array(), [<span class=\"number\">1</span>, -<span class=\"number\">8</span>]);</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Cast into a tuple with x and y.</p>\n<h5 id=\"example-4\"><a class=\"doc-anchor\" href=\"#example-4\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"kw\">let </span>point: Point2D&lt;<span class=\"kw\">_</span>, Mm&gt; = point2(<span class=\"number\">1</span>, -<span class=\"number\">8</span>);\n\n<span class=\"macro\">assert_eq!</span>(point.to_tuple(), (<span class=\"number\">1</span>, -<span class=\"number\">8</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_3d\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_3d</a>(self) -&gt; Point3D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Convert into a 3d point with z-coordinate equals to zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">round</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ceil</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">floor</a>(self) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), point2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lerp</a>(self, other: Point2D&lt;T, U&gt;, t: T) -&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: One + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate between this point and another point.</p>\n<h5 id=\"example-5\"><a class=\"doc-anchor\" href=\"#example-5\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::Point2D;\n\n<span class=\"kw\">let </span>from: Point2D&lt;<span class=\"kw\">_</span>&gt; = point2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Point2D&lt;<span class=\"kw\">_</span>&gt; = point2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), point2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), point2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), point2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), point2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), point2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; Point2D&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Point2D&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f64</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> point.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_usize</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>usize</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i32</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an i32 point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i64</a>(self) -&gt; Point2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an i64 point, truncating decimals if any.</p>\n<p>When casting from floating point points, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.78.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns true if all members are finite.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/ops/euclid/trait.Euclid.html\" title=\"trait num_traits::ops::euclid::Euclid\">Euclid</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.rem_euclid\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">rem_euclid</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates the least nonnegative remainder of <code>self (mod other)</code>.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::{Point2D, Size2D};\n\n<span class=\"kw\">let </span>p = Point2D::new(<span class=\"number\">7.0</span>, -<span class=\"number\">7.0</span>);\n<span class=\"kw\">let </span>s = Size2D::new(<span class=\"number\">4.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(p.rem_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>((-p).rem_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">1.0</span>, <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(p.rem_euclid(<span class=\"kw-2\">&amp;</span>-s), point2(<span class=\"number\">3.0</span>, <span class=\"number\">1.0</span>));</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_euclid\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">div_euclid</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Calculates Euclidean division, the matching method for <code>rem_euclid</code>.</p>\n<h5 id=\"example-1\"><a class=\"doc-anchor\" href=\"#example-1\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::point2;\n<span class=\"kw\">use </span>euclid::default::{Point2D, Size2D};\n\n<span class=\"kw\">let </span>p = Point2D::new(<span class=\"number\">7.0</span>, -<span class=\"number\">7.0</span>);\n<span class=\"kw\">let </span>s = Size2D::new(<span class=\"number\">4.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(p.div_euclid(<span class=\"kw-2\">&amp;</span>s), point2(<span class=\"number\">1.0</span>, <span class=\"number\">2.0</span>));\n<span class=\"macro\">assert_eq!</span>((-p).div_euclid(<span class=\"kw-2\">&amp;</span>s), point2(-<span class=\"number\">2.0</span>, -<span class=\"number\">1.0</span>));\n<span class=\"macro\">assert_eq!</span>(p.div_euclid(<span class=\"kw-2\">&amp;</span>-s), point2(-<span class=\"number\">1.0</span>, -<span class=\"number\">2.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/real/trait.Real.html\" title=\"trait num_traits::real::Real\">Real</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.distance_to\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">distance_to</a>(self, other: Point2D&lt;T, U&gt;) -&gt; T</h4></section></div></details>",0,"zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Round-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Round for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">round</a>(self) -&gt; Point2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See <a href=\"#method.round\">Point2D::round()</a></p>\n</div></details></div></details>","Round","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.78.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.203/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(\n    self,\n    other: Size2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Size2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Size2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Point2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(\n    self,\n    other: Vector2D&lt;T, U&gt;\n) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Vector2D&lt;T, U&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<Vector2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Vector2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Point2D&lt;T, U&gt;) -&gt; &lt;Point2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign%3CSize2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;Size2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Size2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign%3CVector2D%3CT,+U%3E%3E-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;Vector2D&lt;T, U&gt;&gt; for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Vector2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.78.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<Vector2D<T, U>>","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zero-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zero for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; Point2D&lt;T, U&gt;</h4></section></div></details>","Zero","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zeroable-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zeroable for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.78.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<section id=\"impl-Copy-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<section id=\"impl-Eq-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.78.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"],["<section id=\"impl-Pod-for-Point2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Pod-for-Point2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Pod for Point2D&lt;T, U&gt;<div class=\"where\">where\n    T: Pod,\n    U: 'static,</div></h3></section>","Pod","zng_unit::px_dip::PxPoint","zng_unit::px_dip::DipPoint"]],
"zng_wgt":[]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()