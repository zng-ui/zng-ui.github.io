(function() {
    var type_impls = Object.fromEntries([["zng",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;Size2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Size2D&lt;T, U&gt;) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Ceil for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ceil</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::ceil</code>].</p>\n</div></details></div></details>","Ceil","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Size2D&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DipToPx-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#653\">Source</a><a href=\"#impl-DipToPx-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/layout/trait.DipToPx.html\" title=\"trait zng::layout::DipToPx\">DipToPx</a> for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsPx\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#654\">Source</a><a href=\"#associatedtype.AsPx\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/layout/trait.DipToPx.html#associatedtype.AsPx\" class=\"associatedtype\">AsPx</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\"><code>Px</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_px\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#656\">Source</a><a href=\"#method.to_px\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/layout/trait.DipToPx.html#tymethod.to_px\" class=\"fn\">to_px</a>(self, scale_factor: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; &lt;Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt; as <a class=\"trait\" href=\"zng/layout/trait.DipToPx.html\" title=\"trait zng::layout::DipToPx\">DipToPx</a>&gt;::<a class=\"associatedtype\" href=\"zng/layout/trait.DipToPx.html#associatedtype.AsPx\" title=\"type zng::layout::DipToPx::AsPx\">AsPx</a></h4></section></summary><div class='docblock'>Multiply the <a href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\"><code>Dip</code></a> self by the scale.</div></details></div></details>","DipToPx","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#449\">Source</a><a href=\"#impl-Div%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#450\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#452\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#387\">Source</a><a href=\"#impl-Div%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#388\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#390\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#127\">Source</a><a href=\"#impl-Div%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#128\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#130\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor2d>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#120\">Source</a><a href=\"#impl-Div%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#121\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#123\">Source</a><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Factor2d>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Size2D&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;,\n) -&gt; &lt;Size2D&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#464\">Source</a><a href=\"#impl-DivAssign%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#465\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#402\">Source</a><a href=\"#impl-DivAssign%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#403\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#149\">Source</a><a href=\"#impl-DivAssign%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#150\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor2d>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#144\">Source</a><a href=\"#impl-DivAssign%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#145\">Source</a><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Factor2d>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Floor for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">floor</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::floor</code>].</p>\n</div></details></div></details>","Floor","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a>&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a>) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a>&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a>) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Vector2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: Vector2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CImageDownscale%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_view_api/image.rs.html#116-120\">Source</a><a href=\"#impl-IntoVar%3CImageDownscale%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"enum\" href=\"zng/image/enum.ImageDownscale.html\" title=\"enum zng::image::ImageDownscale\">ImageDownscale</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view_api/image.rs.html#116-120\">Source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; <a class=\"struct\" href=\"zng/var/struct.Var.html\" title=\"struct zng::var::Var\">Var</a>&lt;<a class=\"enum\" href=\"zng/image/enum.ImageDownscale.html\" title=\"enum zng::image::ImageDownscale\">ImageDownscale</a>&gt;</h4></section></div></details>","IntoVar<ImageDownscale>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CPxConstraints2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/constraints.rs.html#895-916\">Source</a><a href=\"#impl-IntoVar%3CPxConstraints2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.PxConstraints2d.html\" title=\"struct zng::layout::PxConstraints2d\">PxConstraints2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/constraints.rs.html#895-916\">Source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; <a class=\"struct\" href=\"zng/var/struct.Var.html\" title=\"struct zng::var::Var\">Var</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.PxConstraints2d.html\" title=\"struct zng::layout::PxConstraints2d\">PxConstraints2d</a>&gt;</h4></section></summary><div class=\"docblock\"><p>New exact.</p>\n</div></details></div></details>","IntoVar<PxConstraints2d>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CSize%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#impl-IntoVar%3CSize%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; <a class=\"struct\" href=\"zng/var/struct.Var.html\" title=\"struct zng::var::Var\">Var</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt;</h4></section></div></details>","IntoVar<Size>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CSize%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#impl-IntoVar%3CSize%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoVar.html\" title=\"trait zng::var::IntoVar\">IntoVar</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/trait.IntoVar.html#tymethod.into_var\" class=\"fn\">into_var</a>(self) -&gt; <a class=\"struct\" href=\"zng/var/struct.Var.html\" title=\"struct zng::var::Var\">Var</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt;</h4></section></div></details>","IntoVar<Size>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MallocSizeOf-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; MallocSizeOf for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: MallocSizeOf,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.size_of\" class=\"method trait-impl\"><a href=\"#method.size_of\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">size_of</a>(&amp;self, ops: &amp;mut MallocSizeOfOps) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Measure the heap usage of all descendant heap-allocated structures, but\nnot the space taken up by the value itself.</div></details></div></details>","MallocSizeOf","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#440\">Source</a><a href=\"#impl-Mul%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#441\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#443\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#378\">Source</a><a href=\"#impl-Mul%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#379\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#381\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#113\">Source</a><a href=\"#impl-Mul%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#114\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#116\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor2d>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#106\">Source</a><a href=\"#impl-Mul%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#107\">Source</a><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#109\">Source</a><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>) -&gt; Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Factor2d>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Size2D&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;,\n) -&gt; &lt;Size2D&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#458\">Source</a><a href=\"#impl-MulAssign%3CFactor%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#459\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#396\">Source</a><a href=\"#impl-MulAssign%3CFactor%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/factor.rs.html#397\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#139\">Source</a><a href=\"#impl-MulAssign%3CFactor2d%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#140\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor2d>","zng::layout::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#134\">Source</a><a href=\"#impl-MulAssign%3CFactor2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/factor.rs.html#135\">Source</a><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: <a class=\"struct\" href=\"zng/layout/struct.Factor2d.html\" title=\"struct zng::layout::Factor2d\">Factor2d</a>)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Factor2d>","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Peek-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Peek-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Peek for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Peek,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.peek_from\" class=\"method trait-impl\"><a href=\"#method.peek_from\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">peek_from</a>(bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>, output: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.pointer.html\">*mut </a>Size2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.pointer.html\">*const </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Deserialize from the buffer pointed to by <code>bytes</code>. <a>Read more</a></div></details></div></details>","Peek","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Poke-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Poke-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Poke for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Poke,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.max_size\" class=\"method trait-impl\"><a href=\"#method.max_size\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">max_size</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a></h4></section></summary><div class='docblock'>Return the maximum number of bytes that the serialized version of <code>Self</code>\nwill occupy. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.poke_into\" class=\"method trait-impl\"><a href=\"#method.poke_into\" class=\"anchor\">§</a><h4 class=\"code-header\">unsafe fn <a class=\"fn\">poke_into</a>(&amp;self, bytes: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.pointer.html\">*mut </a><a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u8.html\">u8</a></h4></section></summary><div class='docblock'>Serialize into the buffer pointed to by <code>bytes</code>. <a>Read more</a></div></details></div></details>","Poke","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PxToDip-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#645\">Source</a><a href=\"#impl-PxToDip-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/layout/trait.PxToDip.html\" title=\"trait zng::layout::PxToDip\">PxToDip</a> for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsDip\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#646\">Source</a><a href=\"#associatedtype.AsDip\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng/layout/trait.PxToDip.html#associatedtype.AsDip\" class=\"associatedtype\">AsDip</a> = Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\"><code>Dip</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_dip\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_unit/px_dip.rs.html#648\">Source</a><a href=\"#method.to_dip\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/layout/trait.PxToDip.html#tymethod.to_dip\" class=\"fn\">to_dip</a>(self, scale_factor: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; &lt;Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng/layout/trait.PxToDip.html\" title=\"trait zng::layout::PxToDip\">PxToDip</a>&gt;::<a class=\"associatedtype\" href=\"zng/layout/trait.PxToDip.html#associatedtype.AsDip\" title=\"type zng::layout::PxToDip::AsDip\">AsDip</a></h4></section></summary><div class='docblock'>Divide the <a href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\"><code>Px</code></a> self by the scale.</div></details></div></details>","PxToDip","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PxToWr-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#88\">Source</a><a href=\"#impl-PxToWr-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a> for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsDevice\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#89\">Source</a><a href=\"#associatedtype.AsDevice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsDevice\" class=\"associatedtype\">AsDevice</a> = Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.i32.html\">i32</a>, DevicePixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <code>webrender::units::DevicePixel</code> units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsWorld\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#90\">Source</a><a href=\"#associatedtype.AsWorld\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsWorld\" class=\"associatedtype\">AsWorld</a> = Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>, WorldPixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in `webrender::units::WorldPixel units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsLayout\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#91\">Source</a><a href=\"#associatedtype.AsLayout\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsLayout\" class=\"associatedtype\">AsLayout</a> = Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>, LayoutPixel&gt;</h4></section></summary><div class='docblock'><code>Self</code> equivalent in <code>webrender::units::LayoutPixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_device\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#93\">Source</a><a href=\"#method.to_wr_device\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr_device\" class=\"fn\">to_wr_device</a>(self) -&gt; &lt;Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsDevice\" title=\"type zng_view::px_wr::PxToWr::AsDevice\">AsDevice</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::DevicePixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_world\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#97\">Source</a><a href=\"#method.to_wr_world\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr_world\" class=\"fn\">to_wr_world</a>(self) -&gt; &lt;Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsWorld\" title=\"type zng_view::px_wr::PxToWr::AsWorld\">AsWorld</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::WorldPixel</code> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#101\">Source</a><a href=\"#method.to_wr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/px_wr/trait.PxToWr.html#tymethod.to_wr\" class=\"fn\">to_wr</a>(self) -&gt; &lt;Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt; as <a class=\"trait\" href=\"zng_view/px_wr/trait.PxToWr.html\" title=\"trait zng_view::px_wr::PxToWr\">PxToWr</a>&gt;::<a class=\"associatedtype\" href=\"zng_view/px_wr/trait.PxToWr.html#associatedtype.AsLayout\" title=\"type zng_view::px_wr::PxToWr::AsLayout\">AsLayout</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <code>webrender::units::LayoutPixel</code> units.</div></details></div></details>","PxToWr","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Round for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">round</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::round</code>].</p>\n</div></details></div></details>","Round","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zero</a>() -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"crate::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(width: T, height: T) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_lengths</a>(width: Length&lt;T, U&gt;, height: Length&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">splat</a>(v: T) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_untyped</a>(p: Size2D&lt;T, UnknownUnit&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">equal</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"zng/layout/struct.BoolVector2D.html\" title=\"struct zng::layout::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">not_equal</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"zng/layout/struct.BoolVector2D.html\" title=\"struct zng::layout::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">min</a>(self, other: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">max</a>(self, other: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clamp</a>(self, start: Size2D&lt;T, U&gt;, end: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">greater_than</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"zng/layout/struct.BoolVector2D.html\" title=\"struct zng::layout::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lower_than</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"struct\" href=\"zng/layout/struct.BoolVector2D.html\" title=\"struct zng::layout::BoolVector2D\">BoolVector2D</a></h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_vector</a>(self) -&gt; Vector2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_untyped</a>(self) -&gt; Size2D&lt;T, UnknownUnit&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; Size2D&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">round</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ceil</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">floor</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">area</a>(self) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lerp</a>(self, other: Size2D&lt;T, U&gt;, t: T) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: One + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; Size2D&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Size2D&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_usize</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">abs</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Size2D&lt;T, U&gt;) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a Size2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + Zero,\n    U: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Size2D&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + Zero,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Size2D&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transitionable-for-Size2D%3CT,+U%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_var/impls.rs.html#100-103\">Source</a><a href=\"#impl-Transitionable-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"zng/var/animation/trait.Transitionable.html\" title=\"trait zng::var::animation::Transitionable\">Transitionable</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"zng/var/animation/trait.Transitionable.html\" title=\"trait zng::var::animation::Transitionable\">Transitionable</a>,\n    U: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Send.html\" title=\"trait core::marker::Send\">Send</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sync.html\" title=\"trait core::marker::Sync\">Sync</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/any/trait.Any.html\" title=\"trait core::any::Any\">Any</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_var/impls.rs.html#105\">Source</a><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng/var/animation/trait.Transitionable.html#tymethod.lerp\" class=\"fn\">lerp</a>(self, to: &amp;Size2D&lt;T, U&gt;, step: <a class=\"struct\" href=\"zng/layout/struct.Factor.html\" title=\"struct zng::layout::Factor\">Factor</a>) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Sample the linear interpolation from <code>self</code> -&gt; <code>to</code> by <code>step</code>.</div></details></div></details>","Transitionable","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zero for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; Size2D&lt;T, U&gt;</h4></section></div></details>","Zero","zng::layout::DipSize","zng::layout::PxSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zeroable-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zeroable for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.89.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","zng::layout::DipSize","zng::layout::PxSize"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","zng::layout::DipSize","zng::layout::PxSize"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","zng::layout::DipSize","zng::layout::PxSize"],["<section id=\"impl-IntoValue%3CImageDownscale%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_view_api/image.rs.html#116-120\">Source</a><a href=\"#impl-IntoValue%3CImageDownscale%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"enum\" href=\"zng/image/enum.ImageDownscale.html\" title=\"enum zng::image::ImageDownscale\">ImageDownscale</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section>","IntoValue<ImageDownscale>","zng::layout::PxSize"],["<section id=\"impl-IntoValue%3CPxConstraints2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/constraints.rs.html#895-916\">Source</a><a href=\"#impl-IntoValue%3CPxConstraints2d%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.PxConstraints2d.html\" title=\"struct zng::layout::PxConstraints2d\">PxConstraints2d</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section>","IntoValue<PxConstraints2d>","zng::layout::PxSize"],["<section id=\"impl-IntoValue%3CSize%3E-for-Size2D%3CDip,+Dip%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#impl-IntoValue%3CSize%3E-for-Size2D%3CDip,+Dip%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>, <a class=\"struct\" href=\"zng/layout/struct.Dip.html\" title=\"struct zng::layout::Dip\">Dip</a>&gt;</h3></section>","IntoValue<Size>","zng::layout::DipSize"],["<section id=\"impl-IntoValue%3CSize%3E-for-Size2D%3CPx,+Px%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_layout/unit/size.rs.html#111-146\">Source</a><a href=\"#impl-IntoValue%3CSize%3E-for-Size2D%3CPx,+Px%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng/var/trait.IntoValue.html\" title=\"trait zng::var::IntoValue\">IntoValue</a>&lt;<a class=\"struct\" href=\"zng/layout/struct.Size.html\" title=\"struct zng::layout::Size\">Size</a>&gt; for Size2D&lt;<a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>, <a class=\"struct\" href=\"zng/layout/struct.Px.html\" title=\"struct zng::layout::Px\">Px</a>&gt;</h3></section>","IntoValue<Size>","zng::layout::PxSize"],["<section id=\"impl-Pod-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Pod-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Pod for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Pod,\n    U: 'static,</div></h3></section>","Pod","zng::layout::DipSize","zng::layout::PxSize"]]],["zng_unit",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;Size2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: &amp;Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&Size2D<T, U>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Add-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, other: Size2D&lt;T, U&gt;) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-AddAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Ceil-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Ceil for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">ceil</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::ceil</code>].</p>\n</div></details></div></details>","Ceil","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Clone-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Debug-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.89.0/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.89.0/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Default-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Returns the “default value” for a type. <a href=\"https://doc.rust-lang.org/1.89.0/core/default/trait.Default.html#tymethod.default\">Read more</a></div></details></div></details>","Default","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de, T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Size2D&lt;T, U&gt;, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Deserializes 2d size from tuple of width and height.</p>\n</div></details></div></details>","Deserialize<'de>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"impl\"><a href=\"#impl-Div%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U2%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Size2D&lt;T, U2&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U1&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;,\n) -&gt; &lt;Size2D&lt;T, U2&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<Scale<T, U1, U2>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Div%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, scale: T) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<T>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<Scale<T, U, U>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-DivAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<T>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Floor-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Floor for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">floor</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::floor</code>].</p>\n</div></details></div></details>","Floor","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C%5BT;+2%5D%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a>&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(_: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a>) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<[T; 2]>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3C(T,+T)%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a>&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(tuple: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a>) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<(T, T)>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-From%3CVector2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Vector2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(v: Vector2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Vector2D<T, U>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Hash-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;H&gt;(&amp;self, h: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.89.0/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"impl\"><a href=\"#impl-Mul%3CScale%3CT,+U1,+U2%3E%3E-for-Size2D%3CT,+U1%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U1, U2&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt; for Size2D&lt;T, U1&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U2&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(\n    self,\n    scale: Scale&lt;T, U1, U2&gt;,\n) -&gt; &lt;Size2D&lt;T, U1&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Scale&lt;T, U1, U2&gt;&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<Scale<T, U1, U2>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Mul%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, scale: T) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;T&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<T>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CScale%3CT,+U,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;Scale&lt;T, U, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: Scale&lt;T, U, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<Scale<T, U, U>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-MulAssign%3CT%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;T&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, other: T)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<T>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Neg-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-PartialEq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Size2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.89.0/src/core/cmp.rs.html#263\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Round-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Round for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">round</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>See [<code>Size2D::round</code>].</p>\n</div></details></div></details>","Round","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Serialize-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S,\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class=\"docblock\"><p>Serializes 2d size to tuple of width and height.</p>\n</div></details></div></details>","Serialize","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">zero</a>() -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>The same as <a href=\"crate::num::Zero::zero\"><code>Zero::zero</code></a> but available without importing trait.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">new</a>(width: T, height: T) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar values.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_lengths\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_lengths</a>(width: Length&lt;T, U&gt;, height: Length&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Constructor taking scalar strongly typed lengths.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.splat\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">splat</a>(v: T) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h4></section></summary><div class=\"docblock\"><p>Constructor setting all components to the same value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_untyped</a>(p: Size2D&lt;T, UnknownUnit&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Tag a unitless value with units.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.equal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">equal</a>(self, other: Size2D&lt;T, U&gt;) -&gt; BoolVector2D</h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “equal” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.not_equal\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">not_equal</a>(self, other: Size2D&lt;T, U&gt;) -&gt; BoolVector2D</h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “not equal” operation on each component.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">min</a>(self, other: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are minimum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">max</a>(self, other: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which are maximum of this size and another.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clamp</a>(self, start: Size2D&lt;T, U&gt;, end: Size2D&lt;T, U&gt;) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns the size each component of which clamped by corresponding\ncomponents of <code>start</code> and <code>end</code>.</p>\n<p>Shortcut for <code>self.max(start).min(end)</code>.</p>\n</div></details><section id=\"method.contains\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">contains</a>(self, other: Size2D&lt;T, U&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section><details class=\"toggle method-toggle\" open><summary><section id=\"method.greater_than\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">greater_than</a>(self, other: Size2D&lt;T, U&gt;) -&gt; BoolVector2D</h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “greater then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lower_than\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lower_than</a>(self, other: Size2D&lt;T, U&gt;) -&gt; BoolVector2D</h4></section></summary><div class=\"docblock\"><p>Returns vector with results of “lower then” operation on each component.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_empty\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_empty</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a><div class=\"where\">where\n    T: Zero,</div></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if any component of size is zero, negative, or NaN.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_array\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_array</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.array.html\">[T; 2]</a></h4></section></summary><div class=\"docblock\"><p>Return this size as an array of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_tuple\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_tuple</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.tuple.html\">(T, T)</a></h4></section></summary><div class=\"docblock\"><p>Return this size as a tuple of two elements (width, then height).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_vector\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_vector</a>(self) -&gt; Vector2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Return this size as a vector with width and height.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_untyped\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_untyped</a>(self) -&gt; Size2D&lt;T, UnknownUnit&gt;</h4></section></summary><div class=\"docblock\"><p>Drop the units, preserving only the numeric value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast_unit\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast_unit</a>&lt;V&gt;(self) -&gt; Size2D&lt;T, V&gt;</h4></section></summary><div class=\"docblock\"><p>Cast the unit</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">round</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Round,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the nearest integer value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).round(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">ceil</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Ceil,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the smallest integer equal or greater than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).ceil(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(<span class=\"number\">0.0</span>, <span class=\"number\">0.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">floor</a>(self) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Floor,</div></h4></section></summary><div class=\"docblock\"><p>Rounds each component to the biggest integer equal or lower than the original value.</p>\n<p>This behavior is preserved for negative values (unlike the basic cast).</p>\n\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">enum </span>Mm {}\n\n<span class=\"macro\">assert_eq!</span>(size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">0.1</span>, -<span class=\"number\">0.8</span>).floor(), size2::&lt;<span class=\"kw\">_</span>, Mm&gt;(-<span class=\"number\">1.0</span>, -<span class=\"number\">1.0</span>))</code></pre></div>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.area\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">area</a>(self) -&gt; &lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a><div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>,</div></h4></section></summary><div class=\"docblock\"><p>Returns result of multiplication of both components</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">lerp</a>(self, other: Size2D&lt;T, U&gt;, t: T) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: One + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt;,</div></h4></section></summary><div class=\"docblock\"><p>Linearly interpolate each component between this size and another size.</p>\n<h5 id=\"example\"><a class=\"doc-anchor\" href=\"#example\">§</a>Example</h5>\n<div class=\"example-wrap\"><pre class=\"rust rust-example-rendered\"><code><span class=\"kw\">use </span>euclid::size2;\n<span class=\"kw\">use </span>euclid::default::Size2D;\n\n<span class=\"kw\">let </span>from: Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">0.0</span>, <span class=\"number\">10.0</span>);\n<span class=\"kw\">let </span>to:  Size2D&lt;<span class=\"kw\">_</span>&gt; = size2(<span class=\"number\">8.0</span>, -<span class=\"number\">4.0</span>);\n\n<span class=\"macro\">assert_eq!</span>(from.lerp(to, -<span class=\"number\">1.0</span>), size2(-<span class=\"number\">8.0</span>,  <span class=\"number\">24.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.0</span>), size2( <span class=\"number\">0.0</span>,  <span class=\"number\">10.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">0.5</span>), size2( <span class=\"number\">4.0</span>,   <span class=\"number\">3.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">1.0</span>), size2( <span class=\"number\">8.0</span>,  -<span class=\"number\">4.0</span>));\n<span class=\"macro\">assert_eq!</span>(from.lerp(to,  <span class=\"number\">2.0</span>), size2(<span class=\"number\">16.0</span>, -<span class=\"number\">18.0</span>));</code></pre></div>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">cast</a>&lt;NewT&gt;(self) -&gt; Size2D&lt;NewT, U&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.try_cast\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">try_cast</a>&lt;NewT&gt;(self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.89.0/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Size2D&lt;NewT, U&gt;&gt;<div class=\"where\">where\n    NewT: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/cast/trait.NumCast.html\" title=\"trait num_traits::cast::NumCast\">NumCast</a>,</div></h4></section></summary><div class=\"docblock\"><p>Fallible cast from one numeric representation to another, preserving the units.</p>\n<p>When casting from floating point to integer coordinates, the decimals are truncated\nas one would expect from a simple cast, but this behavior does not always make sense\ngeometrically. Consider using <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before casting.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f32.html\">f32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f32</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_f64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_f64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.f64.html\">f64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>f64</code> size.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_usize\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_usize</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.usize.html\">usize</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>uint</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u32.html\">u32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_u64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_u64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.u64.html\">u64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>u64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i32</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.i32.html\">i32</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i32</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_i64\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_i64</a>(self) -&gt; Size2D&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.i64.html\">i64</a>, U&gt;</h4></section></summary><div class=\"docblock\"><p>Cast into an <code>i64</code> size, truncating decimals if any.</p>\n<p>When casting from floating point sizes, it is worth considering whether\nto <code>round()</code>, <code>ceil()</code> or <code>floor()</code> before the cast in order to obtain\nthe desired conversion behavior.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/float/trait.Float.html\" title=\"trait num_traits::float::Float\">Float</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_finite\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_finite</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if all members are finite.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://docs.rs/num-traits/0.2/num_traits/sign/trait.Signed.html\" title=\"trait num_traits::sign::Signed\">Signed</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">abs</a>(self) -&gt; Size2D&lt;T, U&gt;</h4></section></summary><div class=\"docblock\"><p>Computes the absolute value of each component.</p>\n<p>For <code>f32</code> and <code>f64</code>, <code>NaN</code> will be returned for component if the component is <code>NaN</code>.</p>\n<p>For signed integers, <code>::MIN</code> will be returned for component if the component is <code>::MIN</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_positive\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_positive</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.89.0/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>Returns <code>true</code> if both components is positive and <code>false</code> any component is zero or negative.</p>\n</div></details></div></details>",0,"zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sub-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Size2D&lt;&lt;T as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a>, U&gt;</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, other: Size2D&lt;T, U&gt;) -&gt; &lt;Size2D&lt;T, U&gt; as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-SubAssign-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, other: Size2D&lt;T, U&gt;)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sum%3C%26Size2D%3CT,+U%3E%3E-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a, T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a>&lt;&amp;'a Size2D&lt;T, U&gt;&gt; for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: 'a + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> + Zero,\n    U: 'a,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = &amp;'a Size2D&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum<&'a Size2D<T, U>>","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sum-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Sum-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html\" title=\"trait core::iter::traits::accum::Sum\">Sum</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;Output = T&gt; + Zero,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sum\" class=\"method trait-impl\"><a href=\"#method.sum\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/accum/trait.Sum.html#tymethod.sum\" class=\"fn\">sum</a>&lt;I&gt;(iter: I) -&gt; Size2D&lt;T, U&gt;<div class=\"where\">where\n    I: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/iter/traits/iterator/trait.Iterator.html\" title=\"trait core::iter::traits::iterator::Iterator\">Iterator</a>&lt;Item = Size2D&lt;T, U&gt;&gt;,</div></h4></section></summary><div class='docblock'>Takes an iterator and generates <code>Self</code> from the elements by “summing up”\nthe items.</div></details></div></details>","Sum","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zero-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zero-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zero for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zero,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.zero\" class=\"method trait-impl\"><a href=\"#method.zero\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zero</a>() -&gt; Size2D&lt;T, U&gt;</h4></section></div></details>","Zero","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Zeroable-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Zeroable-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Zeroable for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Zeroable,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zeroed\" class=\"method trait-impl\"><a href=\"#method.zeroed\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">zeroed</a>() -&gt; Self</h4></section></summary><div class='docblock'>Calls <a href=\"https://doc.rust-lang.org/1.89.0/core/mem/fn.zeroed.html\" title=\"fn core::mem::zeroed\"><code>zeroed</code></a>. <a>Read more</a></div></details></div></details>","Zeroable","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<section id=\"impl-Copy-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Copy-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<section id=\"impl-Eq-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Eq-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.89.0/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"],["<section id=\"impl-Pod-for-Size2D%3CT,+U%3E\" class=\"impl\"><a href=\"#impl-Pod-for-Size2D%3CT,+U%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T, U&gt; Pod for Size2D&lt;T, U&gt;<div class=\"where\">where\n    T: Pod,\n    U: 'static,</div></h3></section>","Pod","zng_unit::px_dip::PxSize","zng_unit::px_dip::DipSize"]]],["zng_wgt",[]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[139343,79082,15]}