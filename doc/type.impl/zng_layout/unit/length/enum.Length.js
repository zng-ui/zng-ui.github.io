(function() {var type_impls = {
"zng_ext_font":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Length\" class=\"impl\"><a href=\"#impl-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.zero\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">zero</a>() -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Length of exact zero.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.fill\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">fill</a>() -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Length that fills the available space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.half\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">half</a>() -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Length that fills 50% of the available space.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">max</a>(&amp;self, other: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Returns a length that resolves to the maximum layout length between <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">min</a>(&amp;self, other: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Returns a length that resolves to the minimum layout length between <code>self</code> and <code>other</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clamp</a>(&amp;self, min: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;, max: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Returns a length that constraints the computed layout length between <code>min</code> and <code>max</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.abs\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">abs</a>(&amp;self) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Returns a length that computes the absolute layout length of <code>self</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_zero\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_zero</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a>&gt;</h4></section></summary><div class=\"docblock\"><p>If this length is zero in any finite layout context.</p>\n<p>Returns <code>None</code> if the value depends on the default value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pt_to_px\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pt_to_px</a>(pt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>, scale_factor: Factor) -&gt; Px</h4></section></summary><div class=\"docblock\"><p>Convert a <code>pt</code> unit value to [<code>Px</code>] given a <code>scale_factor</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pt_to_px_f32\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pt_to_px_f32</a>(pt: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>, scale_factor: Factor) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Same operation as <a href=\"Self::pt_to_px\"><code>pt_to_px</code></a> but without rounding to nearest pixel.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.px_to_pt\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">px_to_pt</a>(px: Px, scale_factor: Factor) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>Convert a [<code>Px</code>] unit value to a <code>Pt</code> value given a <code>scale_factor</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.is_default\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">is_default</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class=\"docblock\"><p>If is [<code>Length::Default</code>].</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.replace_default\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">replace_default</a>(&amp;mut self, overwrite: &amp;Length)</h4></section></summary><div class=\"docblock\"><p>Replaces <code>self</code> with <code>overwrite</code> if <code>self</code> is <a href=\"Length::Default\"><code>Default</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.round_exact\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">round_exact</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Convert <a href=\"Self::PxF32\"><code>PxF32</code></a> to <a href=\"Self::Px\"><code>Px</code></a> and <a href=\"Self::DipF32\"><code>DipF32</code></a> to <a href=\"Self::Dip\"><code>Dip</code></a>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.memory_used\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">memory_used</a>(&amp;self) -&gt; ByteLength</h4></section></summary><div class=\"docblock\"><p>Gets the total memory allocated by this length.</p>\n<p>This includes the sum of all nested [<code>Length::Expr</code>] heap memory.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.heap_memory_used\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">heap_memory_used</a>(&amp;self) -&gt; ByteLength</h4></section></summary><div class=\"docblock\"><p>Sum total memory used in nested [<code>Length::Expr</code>] heap memory.</p>\n</div></details></div></details>",0,"zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CGradientRadius%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#219-271\">source</a><a href=\"#impl-IntoVar%3CGradientRadius%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"zng_color/gradient/struct.GradientRadius.html\" title=\"struct zng_color::gradient::GradientRadius\">GradientRadius</a>&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#219-271\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;<a class=\"struct\" href=\"zng_color/gradient/struct.GradientRadius.html\" title=\"struct zng_color::gradient::GradientRadius\">GradientRadius</a>&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Ellipse <a href=\"zng_color/gradient/struct.GradientRadius.html#method.farthest_corner\" title=\"associated function zng_color::gradient::GradientRadius::farthest_corner\"><code>GradientRadius::farthest_corner</code></a>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"zng_color/gradient/struct.GradientRadius.html\" title=\"struct zng_color::gradient::GradientRadius\">GradientRadius</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<GradientRadius>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CGradientStop%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#531-578\">source</a><a href=\"#impl-IntoVar%3CGradientStop%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"enum\" href=\"zng_color/gradient/enum.GradientStop.html\" title=\"enum zng_color::gradient::GradientStop\">GradientStop</a>&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"enum\" href=\"zng_color/gradient/enum.GradientStop.html\" title=\"enum zng_color::gradient::GradientStop\">GradientStop</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#531-578\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;<a class=\"enum\" href=\"zng_color/gradient/enum.GradientStop.html\" title=\"enum zng_color::gradient::GradientStop\">GradientStop</a>&gt;&gt;::Var</h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<GradientStop>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CGradientRadius%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#219-271\">source</a><a href=\"#impl-IntoValue%3CGradientRadius%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"zng_color/gradient/struct.GradientRadius.html\" title=\"struct zng_color::gradient::GradientRadius\">GradientRadius</a>&gt; for Length</h3></section>","IntoValue<GradientRadius>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CGradientStop%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_color/gradient.rs.html#531-578\">source</a><a href=\"#impl-IntoValue%3CGradientStop%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"enum\" href=\"zng_color/gradient/enum.GradientStop.html\" title=\"enum zng_color::gradient::GradientStop\">GradientStop</a>&gt; for Length</h3></section>","IntoValue<GradientStop>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CDip%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3CDip%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Dip&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(l: Dip) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::Dip</code>]</p>\n</div></details></div></details>","From<Dip>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CPx%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3CPx%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Px&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(l: Px) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::Px</code>]</p>\n</div></details></div></details>","From<Px>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFactorPercent%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3CFactorPercent%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;FactorPercent&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(percent: FactorPercent) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::Factor</code>]</p>\n</div></details></div></details>","From<FactorPercent>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Ci32%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3Ci32%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.i32.html\">i32</a>&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(i: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.i32.html\">i32</a>) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::Dip</code>]</p>\n</div></details></div></details>","From<i32>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cf32%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3Cf32%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(f: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::DipF32</code>]</p>\n</div></details></div></details>","From<f32>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CFactor%3E-for-Length\" class=\"impl\"><a href=\"#impl-From%3CFactor%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;Factor&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(norm: Factor) -&gt; Length</h4></section></summary><div class=\"docblock\"><p>Conversion to [<code>Length::Factor</code>]</p>\n</div></details></div></details>","From<Factor>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-MulAssign%3CF%3E-for-Length\" class=\"impl\"><a href=\"#impl-MulAssign%3CF%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.MulAssign.html\" title=\"trait core::ops::arith::MulAssign\">MulAssign</a>&lt;F&gt; for Length<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Factor&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul_assign\" class=\"method trait-impl\"><a href=\"#method.mul_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\" class=\"fn\">mul_assign</a>(&amp;mut self, rhs: F)</h4></section></summary><div class='docblock'>Performs the <code>*=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.MulAssign.html#tymethod.mul_assign\">Read more</a></div></details></div></details>","MulAssign<F>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Div%3CF%3E-for-Length\" class=\"impl\"><a href=\"#impl-Div%3CF%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;F&gt; for Length<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Factor&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Length</h4></section></summary><div class='docblock'>The resulting type after applying the <code>/</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.div\" class=\"method trait-impl\"><a href=\"#method.div\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html#tymethod.div\" class=\"fn\">div</a>(self, rhs: F) -&gt; &lt;Length as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html\" title=\"trait core::ops::arith::Div\">Div</a>&lt;F&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html#associatedtype.Output\" title=\"type core::ops::arith::Div::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>/</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Div.html#tymethod.div\">Read more</a></div></details></div></details>","Div<F>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-SubAssign%3CL%3E-for-Length\" class=\"impl\"><a href=\"#impl-SubAssign%3CL%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.SubAssign.html\" title=\"trait core::ops::arith::SubAssign\">SubAssign</a>&lt;L&gt; for Length<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub_assign\" class=\"method trait-impl\"><a href=\"#method.sub_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\" class=\"fn\">sub_assign</a>(&amp;mut self, rhs: L)</h4></section></summary><div class='docblock'>Performs the <code>-=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.SubAssign.html#tymethod.sub_assign\">Read more</a></div></details></div></details>","SubAssign<L>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Length\" class=\"impl\"><a href=\"#impl-Debug-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Sub%3CL%3E-for-Length\" class=\"impl\"><a href=\"#impl-Sub%3CL%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;L&gt; for Length<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Length</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.sub\" class=\"method trait-impl\"><a href=\"#method.sub\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html#tymethod.sub\" class=\"fn\">sub</a>(self, rhs: L) -&gt; &lt;Length as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;L&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html#associatedtype.Output\" title=\"type core::ops::arith::Sub::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Sub.html#tymethod.sub\">Read more</a></div></details></div></details>","Sub<L>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3CL%3E-for-Length\" class=\"impl\"><a href=\"#impl-AddAssign%3CL%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;L&gt; for Length<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: L)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<L>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Neg-for-Length\" class=\"impl\"><a href=\"#impl-Neg-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Length</h4></section></summary><div class='docblock'>The resulting type after applying the <code>-</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.neg\" class=\"method trait-impl\"><a href=\"#method.neg\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html#tymethod.neg\" class=\"fn\">neg</a>(self) -&gt; &lt;Length as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html\" title=\"trait core::ops::arith::Neg\">Neg</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html#associatedtype.Output\" title=\"type core::ops::arith::Neg::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the unary <code>-</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Neg.html#tymethod.neg\">Read more</a></div></details></div></details>","Neg","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Length\" class=\"impl\"><a href=\"#impl-Display-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Layout1d-for-Length\" class=\"impl\"><a href=\"#impl-Layout1d-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Layout1d for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_dft\" class=\"method trait-impl\"><a href=\"#method.layout_dft\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_dft</a>(&amp;self, axis: LayoutAxis, default: Px) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_dft\" class=\"method trait-impl\"><a href=\"#method.layout_f32_dft\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_dft</a>(&amp;self, axis: LayoutAxis, default: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.affect_mask\" class=\"method trait-impl\"><a href=\"#method.affect_mask\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">affect_mask</a>(&amp;self) -&gt; LayoutMask</h4></section></summary><div class='docblock'>Compute a [<code>LayoutMask</code>] that flags all contextual values that affect the result of <a href=\"Self::layout\"><code>layout</code></a>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout\" class=\"method trait-impl\"><a href=\"#method.layout\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout</a>(&amp;self, axis: LayoutAxis) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_x\" class=\"method trait-impl\"><a href=\"#method.layout_x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_x</a>(&amp;self) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>x</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_y\" class=\"method trait-impl\"><a href=\"#method.layout_y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_y</a>(&amp;self) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>y</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_z\" class=\"method trait-impl\"><a href=\"#method.layout_z\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_z</a>(&amp;self) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>z</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_dft_x\" class=\"method trait-impl\"><a href=\"#method.layout_dft_x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_dft_x</a>(&amp;self, default: Px) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>x</strong></em> axis with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_dft_y\" class=\"method trait-impl\"><a href=\"#method.layout_dft_y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_dft_y</a>(&amp;self, default: Px) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>y</strong></em> axis with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_dft_z\" class=\"method trait-impl\"><a href=\"#method.layout_dft_z\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_dft_z</a>(&amp;self, default: Px) -&gt; Px</h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>z</strong></em> axis with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32\" class=\"method trait-impl\"><a href=\"#method.layout_f32\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32</a>(&amp;self, axis: LayoutAxis) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_x\" class=\"method trait-impl\"><a href=\"#method.layout_f32_x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_x</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>x</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_y\" class=\"method trait-impl\"><a href=\"#method.layout_f32_y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_y</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>y</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_z\" class=\"method trait-impl\"><a href=\"#method.layout_f32_z\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_z</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>z</strong></em> axis.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_dft_x\" class=\"method trait-impl\"><a href=\"#method.layout_f32_dft_x\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_dft_x</a>(&amp;self, default: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>x</strong></em> axis with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_dft_y\" class=\"method trait-impl\"><a href=\"#method.layout_f32_dft_y\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_dft_y</a>(&amp;self, default: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>y</strong></em> axis with <code>default</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.layout_f32_dft_z\" class=\"method trait-impl\"><a href=\"#method.layout_f32_dft_z\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">layout_f32_dft_z</a>(&amp;self, default: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Compute the pixel value in the current <a href=\"crate::context::LAYOUT\"><code>LAYOUT</code></a> context <em><strong>z</strong></em> axis with <code>default</code>.</div></details></div></details>","Layout1d","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CGridSpacing%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoValue%3CGridSpacing%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;GridSpacing&gt; for Length</h3></section>","IntoValue<GridSpacing>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CVector%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoValue%3CVector%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;Vector&gt; for Length</h3></section>","IntoValue<Vector>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CPoint%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoValue%3CPoint%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;Point&gt; for Length</h3></section>","IntoValue<Point>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CSize%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoValue%3CSize%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;Size&gt; for Length</h3></section>","IntoValue<Size>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CSideOffsets%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoValue%3CSideOffsets%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;SideOffsets&gt; for Length</h3></section>","IntoValue<SideOffsets>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Mul%3CF%3E-for-Length\" class=\"impl\"><a href=\"#impl-Mul%3CF%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt; for Length<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Factor&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Length</h4></section></summary><div class='docblock'>The resulting type after applying the <code>*</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.mul\" class=\"method trait-impl\"><a href=\"#method.mul\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html#tymethod.mul\" class=\"fn\">mul</a>(self, rhs: F) -&gt; &lt;Length as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html\" title=\"trait core::ops::arith::Mul\">Mul</a>&lt;F&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html#associatedtype.Output\" title=\"type core::ops::arith::Mul::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>*</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Mul.html#tymethod.mul\">Read more</a></div></details></div></details>","Mul<F>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Transitionable-for-Length\" class=\"impl\"><a href=\"#impl-Transitionable-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Transitionable for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.lerp\" class=\"method trait-impl\"><a href=\"#method.lerp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">lerp</a>(self, to: &amp;Length, step: Factor) -&gt; Length</h4></section></summary><div class='docblock'>Sample the linear interpolation from <code>self</code> -&gt; <code>to</code> by <code>step</code>.  </div></details></div></details>","Transitionable","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Length\" class=\"impl\"><a href=\"#impl-Serialize-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;__S&gt;(\n    &amp;self,\n    __serializer: __S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;__S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Length\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;__D&gt;(\n    __deserializer: __D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Length, &lt;__D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    __D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Length\" class=\"impl\"><a href=\"#impl-Default-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Length</h4></section></summary><div class=\"docblock\"><p><code>Length::Default</code></p>\n</div></details></div></details>","Default","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CVector%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoVar%3CVector%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;Vector&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;Vector&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Use the length for x and y.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;Vector&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<Vector>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CPoint%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoVar%3CPoint%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;Point&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;Point&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Splat.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;Point&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<Point>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CSize%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoVar%3CSize%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;Size&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;Size&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Splat.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;Size&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<Size>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CGridSpacing%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoVar%3CGridSpacing%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;GridSpacing&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;GridSpacing&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Same spacing for both columns and rows.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;GridSpacing&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<GridSpacing>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CSideOffsets%3E-for-Length\" class=\"impl\"><a href=\"#impl-IntoVar%3CSideOffsets%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;SideOffsets&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;SideOffsets&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>All sides equal.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;SideOffsets&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<SideOffsets>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DivAssign%3CF%3E-for-Length\" class=\"impl\"><a href=\"#impl-DivAssign%3CF%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;F&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.DivAssign.html\" title=\"trait core::ops::arith::DivAssign\">DivAssign</a>&lt;F&gt; for Length<div class=\"where\">where\n    F: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Factor&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.div_assign\" class=\"method trait-impl\"><a href=\"#method.div_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\" class=\"fn\">div_assign</a>(&amp;mut self, rhs: F)</h4></section></summary><div class='docblock'>Performs the <code>/=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.DivAssign.html#tymethod.div_assign\">Read more</a></div></details></div></details>","DivAssign<F>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Length\" class=\"impl\"><a href=\"#impl-PartialEq-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Length) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3CL%3E-for-Length\" class=\"impl\"><a href=\"#impl-Add%3CL%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;L&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;L&gt; for Length<div class=\"where\">where\n    L: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.Into.html\" title=\"trait core::convert::Into\">Into</a>&lt;Length&gt;,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Length</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: L) -&gt; &lt;Length as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;L&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<L>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Length\" class=\"impl\"><a href=\"#impl-Clone-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Length</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CCornerRadius%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/widget/border.rs.html#335-374\">source</a><a href=\"#impl-IntoVar%3CCornerRadius%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"zng_app/widget/border/struct.CornerRadius.html\" title=\"struct zng_app::widget::border::CornerRadius\">CornerRadius</a>&gt; for Length</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_app/widget/border.rs.html#335-374\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Length as IntoVar&lt;<a class=\"struct\" href=\"zng_app/widget/border/struct.CornerRadius.html\" title=\"struct zng_app::widget::border::CornerRadius\">CornerRadius</a>&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>All corners same length.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"zng_app/widget/border/struct.CornerRadius.html\" title=\"struct zng_app::widget::border::CornerRadius\">CornerRadius</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<CornerRadius>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"],["<section id=\"impl-IntoValue%3CCornerRadius%3E-for-Length\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/widget/border.rs.html#335-374\">source</a><a href=\"#impl-IntoValue%3CCornerRadius%3E-for-Length\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"zng_app/widget/border/struct.CornerRadius.html\" title=\"struct zng_app::widget::border::CornerRadius\">CornerRadius</a>&gt; for Length</h3></section>","IntoValue<CornerRadius>","zng_ext_font::unit::FontSize","zng_ext_font::unit::LineHeight","zng_ext_font::unit::LetterSpacing","zng_ext_font::unit::WordSpacing","zng_ext_font::unit::LineSpacing","zng_ext_font::unit::ParagraphSpacing","zng_ext_font::unit::TabLength","zng_ext_font::unit::UnderlineThickness","zng_ext_font::unit::TextLineThickness"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()