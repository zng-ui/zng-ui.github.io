(function() {var type_impls = {
"zng_view":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Round-for-f32\" class=\"impl\"><a href=\"#impl-Round-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/webrender/euclid/num/trait.Round.html\" title=\"trait zng_view::webrender::euclid::num::Round\">Round</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.round\" class=\"method trait-impl\"><a href=\"#method.round\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/num/trait.Round.html#tymethod.round\" class=\"fn\">round</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Rounds to the nearest integer value. <a href=\"zng_view/webrender/euclid/num/trait.Round.html#tymethod.round\">Read more</a></div></details></div></details>","Round","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trig-for-f32\" class=\"impl\"><a href=\"#impl-Trig-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/webrender/euclid/trait.Trig.html\" title=\"trait zng_view::webrender::euclid::Trig\">Trig</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fast_atan2\" class=\"method trait-impl\"><a href=\"#method.fast_atan2\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.fast_atan2\" class=\"fn\">fast_atan2</a>(y: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>, x: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class=\"docblock\"><p>A slightly faster approximation of <code>atan2</code>.</p>\n<p>Note that it does not deal with the case where both x and y are 0.</p>\n</div></details><section id=\"method.sin\" class=\"method trait-impl\"><a href=\"#method.sin\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.sin\" class=\"fn\">sin</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.cos\" class=\"method trait-impl\"><a href=\"#method.cos\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.cos\" class=\"fn\">cos</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.tan\" class=\"method trait-impl\"><a href=\"#method.tan\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.tan\" class=\"fn\">tan</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.degrees_to_radians\" class=\"method trait-impl\"><a href=\"#method.degrees_to_radians\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.degrees_to_radians\" class=\"fn\">degrees_to_radians</a>(deg: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section><section id=\"method.radians_to_degrees\" class=\"method trait-impl\"><a href=\"#method.radians_to_degrees\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/trait.Trig.html#tymethod.radians_to_degrees\" class=\"fn\">radians_to_degrees</a>(rad: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></div></details>","Trig","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ceil-for-f32\" class=\"impl\"><a href=\"#impl-Ceil-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/webrender/euclid/num/trait.Ceil.html\" title=\"trait zng_view::webrender::euclid::num::Ceil\">Ceil</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.ceil\" class=\"method trait-impl\"><a href=\"#method.ceil\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/num/trait.Ceil.html#tymethod.ceil\" class=\"fn\">ceil</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Rounds to the smallest integer equal or greater than the original value. <a href=\"zng_view/webrender/euclid/num/trait.Ceil.html#tymethod.ceil\">Read more</a></div></details></div></details>","Ceil","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ApproxEq%3Cf32%3E-for-f32\" class=\"impl\"><a href=\"#impl-ApproxEq%3Cf32%3E-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/webrender/euclid/approxeq/trait.ApproxEq.html\" title=\"trait zng_view::webrender::euclid::approxeq::ApproxEq\">ApproxEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>&gt; for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_epsilon\" class=\"method trait-impl\"><a href=\"#method.approx_epsilon\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/approxeq/trait.ApproxEq.html#tymethod.approx_epsilon\" class=\"fn\">approx_epsilon</a>() -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Default epsilon value</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq_eps\" class=\"method trait-impl\"><a href=\"#method.approx_eq_eps\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/approxeq/trait.ApproxEq.html#tymethod.approx_eq_eps\" class=\"fn\">approx_eq_eps</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>, approx_epsilon: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\na provided epsilon value.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.approx_eq\" class=\"method trait-impl\"><a href=\"#method.approx_eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/approxeq/trait.ApproxEq.html#method.approx_eq\" class=\"fn\">approx_eq</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;Self</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Returns <code>true</code> is this object is approximately equal to the other one, using\nthe <code>approx_epsilon()</code> epsilon value.</div></details></div></details>","ApproxEq<f32>","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Floor-for-f32\" class=\"impl\"><a href=\"#impl-Floor-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/webrender/euclid/num/trait.Floor.html\" title=\"trait zng_view::webrender::euclid::num::Floor\">Floor</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.floor\" class=\"method trait-impl\"><a href=\"#method.floor\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/webrender/euclid/num/trait.Floor.html#tymethod.floor\" class=\"fn\">floor</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'>Rounds to the biggest integer equal or lower than the original value. <a href=\"zng_view/webrender/euclid/num/trait.Floor.html#tymethod.floor\">Read more</a></div></details></div></details>","Floor","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ReadEndian%3Cf32%3E-for-R\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#impl-ReadEndian%3Cf32%3E-for-R\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;R&gt; <a class=\"trait\" href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html\" title=\"trait lebe::io::ReadEndian\">ReadEndian</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>&gt; for R<div class=\"where\">where\n    R: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/std/io/trait.Read.html\" title=\"trait std::io::Read\">Read</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_little_endian_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#method.read_from_little_endian_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#tymethod.read_from_little_endian_into\" class=\"fn\">read_from_little_endian_into</a>(&amp;mut self, value: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read into the supplied reference. Acts the same as <code>std::io::Read::read_exact</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_big_endian_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#method.read_from_big_endian_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#tymethod.read_from_big_endian_into\" class=\"fn\">read_from_big_endian_into</a>(&amp;mut self, value: &amp;mut <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read into the supplied reference. Acts the same as <code>std::io::Read::read_exact</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_native_endian_into\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#317\">source</a><a href=\"#method.read_from_native_endian_into\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#method.read_from_native_endian_into\" class=\"fn\">read_from_native_endian_into</a>(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;mut T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Read into the supplied reference. Acts the same as <code>std::io::Read::read_exact</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_little_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#324\">source</a><a href=\"#method.read_from_little_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#method.read_from_little_endian\" class=\"fn\">read_from_little_endian</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Read the byte value of the inferred type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_big_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#332\">source</a><a href=\"#method.read_from_big_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#method.read_from_big_endian\" class=\"fn\">read_from_big_endian</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Read the byte value of the inferred type</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.read_from_native_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#340\">source</a><a href=\"#method.read_from_native_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.ReadEndian.html#method.read_from_native_endian\" class=\"fn\">read_from_native_endian</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;T, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</div></h4></section></summary><div class='docblock'>Read the byte value of the inferred type</div></details></div></details>","ReadEndian<f32>","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-WriteEndian%3Cf32%3E-for-W\" class=\"impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#impl-WriteEndian%3Cf32%3E-for-W\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;W&gt; <a class=\"trait\" href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.WriteEndian.html\" title=\"trait lebe::io::WriteEndian\">WriteEndian</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>&gt; for W<div class=\"where\">where\n    W: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.2/std/io/trait.Write.html\" title=\"trait std::io::Write\">Write</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_as_little_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#method.write_as_little_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.WriteEndian.html#tymethod.write_as_little_endian\" class=\"fn\">write_as_little_endian</a>(&amp;mut self, value: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write the byte value of the specified reference, converting it to little endianness</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_as_big_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#422-427\">source</a><a href=\"#method.write_as_big_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.WriteEndian.html#tymethod.write_as_big_endian\" class=\"fn\">write_as_big_endian</a>(&amp;mut self, value: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write the byte value of the specified reference, converting it to big endianness</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_as_native_endian\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"https://docs.rs/lebe/0.5.0/src/lebe/lib.rs.html#296\">source</a><a href=\"#method.write_as_native_endian\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/lebe/0.5.0/lebe/io/trait.WriteEndian.html#method.write_as_native_endian\" class=\"fn\">write_as_native_endian</a>(&amp;mut self, value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.reference.html\">&amp;T</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.2/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.2/std/io/error/struct.Error.html\" title=\"struct std::io::error::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Write the byte value of the specified reference, not converting it</div></details></div></details>","WriteEndian<f32>","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PxToWr-for-f32\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#276-294\">source</a><a href=\"#impl-PxToWr-for-f32\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"zng_view/extensions/trait.PxToWr.html\" title=\"trait zng_view::extensions::PxToWr\">PxToWr</a> for <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.AsDevice\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsDevice\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsDevice\" class=\"associatedtype\">AsDevice</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng_view/webrender/api/units/struct.DevicePixel.html\" title=\"struct zng_view::webrender::api::units::DevicePixel\"><code>wr::units::DevicePixel</code></a> units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsLayout\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsLayout\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsLayout\" class=\"associatedtype\">AsLayout</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng_view/webrender/api/units/struct.LayoutPixel.html\" title=\"struct zng_view::webrender::api::units::LayoutPixel\"><code>wr::units::LayoutPixel</code></a> units.</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.AsWorld\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.AsWorld\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsWorld\" class=\"associatedtype\">AsWorld</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.2/std/primitive.f32.html\">f32</a></h4></section></summary><div class='docblock'><code>Self</code> equivalent in <a href=\"zng_view/webrender/api/units/struct.WorldPixel.html\" title=\"struct zng_view::webrender::api::units::WorldPixel\"><code>wr::units::WorldPixel</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_device\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#283-285\">source</a><a href=\"#method.to_wr_device\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/extensions/trait.PxToWr.html#tymethod.to_wr_device\" class=\"fn\">to_wr_device</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsDevice\" title=\"type zng_view::extensions::PxToWr::AsDevice\">AsDevice</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <a href=\"zng_view/webrender/api/units/struct.DevicePixel.html\" title=\"struct zng_view::webrender::api::units::DevicePixel\"><code>wr::units::DevicePixel</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr_world\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#287-289\">source</a><a href=\"#method.to_wr_world\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/extensions/trait.PxToWr.html#tymethod.to_wr_world\" class=\"fn\">to_wr_world</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsWorld\" title=\"type zng_view::extensions::PxToWr::AsWorld\">AsWorld</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <a href=\"zng_view/webrender/api/units/struct.WorldPixel.html\" title=\"struct zng_view::webrender::api::units::WorldPixel\"><code>wr::units::WorldPixel</code></a> units.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_wr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_view/px_wr.rs.html#291-293\">source</a><a href=\"#method.to_wr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"zng_view/extensions/trait.PxToWr.html#tymethod.to_wr\" class=\"fn\">to_wr</a>(self) -&gt; Self::<a class=\"associatedtype\" href=\"zng_view/extensions/trait.PxToWr.html#associatedtype.AsLayout\" title=\"type zng_view::extensions::PxToWr::AsLayout\">AsLayout</a></h4></section></summary><div class='docblock'>Returns <code>self</code> in <a href=\"zng_view/webrender/api/units/struct.LayoutPixel.html\" title=\"struct zng_view::webrender::api::units::LayoutPixel\"><code>wr::units::LayoutPixel</code></a> units.</div></details></div></details>","PxToWr","zng_view::gleam::gl::GLfloat","zng_view::gleam::gl::GLclampf"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()