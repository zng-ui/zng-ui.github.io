(function() {var type_impls = {
"zng_ext_config":[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Txt\" class=\"impl\"><a href=\"#impl-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_static\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">from_static</a>(s: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New text that is a <code>&amp;'static str</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_string\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">from_string</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New text from a <a href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>String</code></a> optimized for editing.</p>\n<p>If you don’t plan to edit the text after this call consider using <a href=\"Self::from_str\"><code>from_str</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New cloned from <code>s</code>.</p>\n<p>The text will be internally optimized for sharing, if you plan to edit the text after this call\nconsider using <a href=\"Self::from_string\"><code>from_string</code></a> instead.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_arc\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_arc</a>(s: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/sync/struct.Arc.html\" title=\"struct alloc::sync::Arc\">Arc</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New from a shared arc str.</p>\n<p>Note that the text can outlive the <code>Arc</code>, by cloning the string data when modified or\nto use a more optimal representation, you cannot use the reference count of <code>s</code> to track\nthe lifetime of the text.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_char\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_char</a>(c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New text that is an inlined <code>char</code>.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_fmt\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">from_fmt</a>(args: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>New text from <a href=\"https://doc.rust-lang.org/1.77.1/core/macro.format_args.html\" title=\"macro core::format_args\"><code>format_args!</code></a>, avoids allocation if the text is static (no args) or can fit the inlined representation.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.repr\" class=\"method\"><h4 class=\"code-header\">pub const fn <a class=\"fn\">repr</a>(&amp;self) -&gt; TxtRepr</h4></section></summary><div class=\"docblock\"><p>Identifies how the text is currently stored.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">to_mut</a>(&amp;mut self) -&gt; &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Acquires a mutable reference to a <a href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>String</code></a> buffer.</p>\n<p>Converts the text to an internal representation optimized for editing, you can call <a href=\"Self::end_mut\"><code>end_mut</code></a> after\nediting to re-optimize the text for sharing.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.end_mut\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">end_mut</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Convert the inner representation of the string to not be <a href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\"><code>String</code></a>. After\nthis call the text can be cheaply cloned.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_owned\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">into_owned</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a></h4></section></summary><div class=\"docblock\"><p>Extracts the owned string.</p>\n<p>Turns the text to owned if it was borrowed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clear\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">clear</a>(&amp;mut self)</h4></section></summary><div class=\"docblock\"><p>Calls <a href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html#method.clear\" title=\"method alloc::string::String::clear\"><code>String::clear</code></a> if the text is owned, otherwise\nreplaces <code>self</code> with an empty str (<code>&quot;&quot;</code>).</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.pop\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">pop</a>(&amp;mut self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Removes the last character from the text and returns it.</p>\n<p>Returns None if this <code>Txt</code> is empty.</p>\n<p>This method only converts to [<code>TxtRepr::String</code>] if the\ninternal representation is [<code>TxtRepr::Arc</code>], other representations are reborrowed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.truncate\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">truncate</a>(&amp;mut self, new_len: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>)</h4></section></summary><div class=\"docblock\"><p>Shortens this <code>Txt</code> to the specified length.</p>\n<p>If <code>new_len</code> is greater than the text’s current length, this has no\neffect.</p>\n<p>This method only converts to [<code>TxtRepr::String</code>] if the\ninternal representation is [<code>TxtRepr::Arc</code>], other representations are reborrowed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.split_off\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">split_off</a>(&amp;mut self, at: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.usize.html\">usize</a>) -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>Splits the text into two at the given index.</p>\n<p>Returns a new <code>Txt</code>. <code>self</code> contains bytes <code>[0, at)</code>, and\nthe returned <code>Txt</code> contains bytes <code>[at, len)</code>. <code>at</code> must be on the\nboundary of a UTF-8 code point.</p>\n<p>This method only converts to [<code>TxtRepr::String</code>] if the\ninternal representation is [<code>TxtRepr::Arc</code>], other representations are reborrowed.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>)</h4></section></summary><div class=\"docblock\"><p>Push the character to the end of the text.</p>\n<p>This method avoids converting to [<code>TxtRepr::String</code>] when the current text\nplus char can fit inlined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.push_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">push_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>)</h4></section></summary><div class=\"docblock\"><p>Push the string to the end of the text.</p>\n<p>This method avoids converting to [<code>TxtRepr::String</code>] when the current text\nplus char can fit inlined.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_str</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Borrow the text as a string slice.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_static_str\" class=\"method\"><h4 class=\"code-header\">pub fn <a class=\"fn\">as_static_str</a>(&amp;self) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;</h4></section></summary><div class=\"docblock\"><p>Copy the inner static <code>str</code> if this text represents one.</p>\n</div></details></div></details>",0,"zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialOrd-for-Txt\" class=\"impl\"><a href=\"#impl-PartialOrd-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.partial_cmp\" class=\"method trait-impl\"><a href=\"#method.partial_cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\" class=\"fn\">partial_cmp</a>(&amp;self, other: &amp;Txt) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a>&gt;</h4></section></summary><div class='docblock'>This method returns an ordering between <code>self</code> and <code>other</code> values if one exists. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#tymethod.partial_cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.lt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1127\">source</a></span><a href=\"#method.lt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.lt\" class=\"fn\">lt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.lt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.le\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1144\">source</a></span><a href=\"#method.le\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.le\" class=\"fn\">le</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests less than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&lt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.le\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.gt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1160\">source</a></span><a href=\"#method.gt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.gt\" class=\"fn\">gt</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;</code> operator. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.gt\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ge\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#1177\">source</a></span><a href=\"#method.ge\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.ge\" class=\"fn\">ge</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests greater than or equal to (for <code>self</code> and <code>other</code>) and is used by the <code>&gt;=</code>\noperator. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html#method.ge\">Read more</a></div></details></div></details>","PartialOrd","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Ord-for-Txt\" class=\"impl\"><a href=\"#impl-Ord-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.cmp\" class=\"method trait-impl\"><a href=\"#method.cmp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#tymethod.cmp\" class=\"fn\">cmp</a>(&amp;self, other: &amp;Txt) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\">Ordering</a></h4></section></summary><div class='docblock'>This method returns an <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/enum.Ordering.html\" title=\"enum core::cmp::Ordering\"><code>Ordering</code></a> between <code>self</code> and <code>other</code>. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#tymethod.cmp\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.max\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#830-832\">source</a></span><a href=\"#method.max\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.max\" class=\"fn\">max</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the maximum of two values. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.max\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.min\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.21.0\">1.21.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#850-852\">source</a></span><a href=\"#method.min\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.min\" class=\"fn\">min</a>(self, other: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Compares and returns the minimum of two values. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.min\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clamp\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.50.0\">1.50.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#875-878\">source</a></span><a href=\"#method.clamp\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.clamp\" class=\"fn\">clamp</a>(self, min: Self, max: Self) -&gt; Self<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a> + <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialOrd.html\" title=\"trait core::cmp::PartialOrd\">PartialOrd</a>,</div></h4></section></summary><div class='docblock'>Restrict a value to a certain interval. <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Ord.html#method.clamp\">Read more</a></div></details></div></details>","Ord","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3Cchar%3E-for-Txt\" class=\"impl\"><a href=\"#impl-From%3Cchar%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>) -&gt; Txt</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<char>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"impl\"><a href=\"#impl-From%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;) -&gt; Txt</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<Cow<'static, str>>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3CString%3E-for-Txt\" class=\"impl\"><a href=\"#impl-From%3CString%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; Txt</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<String>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-From%3C%26str%3E-for-Txt\" class=\"impl\"><a href=\"#impl-From%3C%26str%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html\" title=\"trait core::convert::From\">From</a>&lt;&amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.from\" class=\"method trait-impl\"><a href=\"#method.from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.From.html#tymethod.from\" class=\"fn\">from</a>(value: &amp;'static <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; Txt</h4></section></summary><div class='docblock'>Converts to this type from the input type.</div></details></div></details>","From<&'static str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Txt\" class=\"impl\"><a href=\"#impl-Hash-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/hash/mod.rs.html#238-240\">source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.slice.html\">[Self]</a>, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/1.77.1/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Borrow%3Cstr%3E-for-Txt\" class=\"impl\"><a href=\"#impl-Borrow%3Cstr%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/borrow/trait.Borrow.html\" title=\"trait core::borrow::Borrow\">Borrow</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.borrow\" class=\"method trait-impl\"><a href=\"#method.borrow\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/borrow/trait.Borrow.html#tymethod.borrow\" class=\"fn\">borrow</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Immutably borrows from an owned value. <a href=\"https://doc.rust-lang.org/1.77.1/core/borrow/trait.Borrow.html#tymethod.borrow\">Read more</a></div></details></div></details>","Borrow<str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3Cstr%3E-for-Txt\" class=\"impl\"><a href=\"#impl-AsRef%3Cstr%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AsRef%3C%5Bu8%5D%3E-for-Txt\" class=\"impl\"><a href=\"#impl-AsRef%3C%5Bu8%5D%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.AsRef.html\" title=\"trait core::convert::AsRef\">AsRef</a>&lt;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>]&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method trait-impl\"><a href=\"#method.as_ref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/convert/trait.AsRef.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; &amp;[<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.u8.html\">u8</a>] <a href=\"#\" class=\"tooltip\" data-notable-ty=\"&amp;[u8]\">ⓘ</a></h4></section></summary><div class='docblock'>Converts this type into a shared reference of the (usually inferred) input type.</div></details></div></details>","AsRef<[u8]>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Write-for-Txt\" class=\"impl\"><a href=\"#impl-Write-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html\" title=\"trait core::fmt::Write\">Write</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_str\" class=\"method trait-impl\"><a href=\"#method.write_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#tymethod.write_str\" class=\"fn\">write_str</a>(&amp;mut self, s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a string slice into this writer, returning whether the write\nsucceeded. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#tymethod.write_str\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_char\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.1.0\">1.1.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#166\">source</a></span><a href=\"#method.write_char\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#method.write_char\" class=\"fn\">write_char</a>(&amp;mut self, c: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\">char</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Writes a <a href=\"https://doc.rust-lang.org/1.77.1/std/primitive.char.html\" title=\"primitive char\"><code>char</code></a> into this writer, returning whether the write succeeded. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#method.write_char\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.write_fmt\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/fmt/mod.rs.html#194\">source</a></span><a href=\"#method.write_fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#method.write_fmt\" class=\"fn\">write_fmt</a>(&amp;mut self, args: <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Arguments.html\" title=\"struct core::fmt::Arguments\">Arguments</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Glue for usage of the <a href=\"https://doc.rust-lang.org/1.77.1/core/macro.write.html\" title=\"macro core::write\"><code>write!</code></a> macro with implementors of this trait. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Write.html#method.write_fmt\">Read more</a></div></details></div></details>","Write","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Txt\" class=\"impl\"><a href=\"#impl-Debug-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","zng_ext_config::ConfigKey"],["<section id=\"impl-StructuralPartialEq-for-Txt\" class=\"impl\"><a href=\"#impl-StructuralPartialEq-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for Txt</h3></section>","StructuralPartialEq","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Default-for-Txt\" class=\"impl\"><a href=\"#impl-Default-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.default\" class=\"method trait-impl\"><a href=\"#method.default\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/default/trait.Default.html#tymethod.default\" class=\"fn\">default</a>() -&gt; Txt</h4></section></summary><div class=\"docblock\"><p>Empty.</p>\n</div></details></div></details>","Default","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AddAssign%3C%26str%3E-for-Txt\" class=\"impl\"><a href=\"#impl-AddAssign%3C%26str%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html\" title=\"trait core::ops::arith::AddAssign\">AddAssign</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.add_assign\" class=\"method trait-impl\"><a href=\"#method.add_assign\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\" class=\"fn\">add_assign</a>(&amp;mut self, rhs: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>)</h4></section></summary><div class='docblock'>Performs the <code>+=</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.AddAssign.html#tymethod.add_assign\">Read more</a></div></details></div></details>","AddAssign<&str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deserialize%3C'de%3E-for-Txt\" class=\"impl\"><a href=\"#impl-Deserialize%3C'de%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'de&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html\" title=\"trait serde::de::Deserialize\">Deserialize</a>&lt;'de&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deserialize\" class=\"method trait-impl\"><a href=\"#method.deserialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\" class=\"fn\">deserialize</a>&lt;D&gt;(\n    deserializer: D\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Txt, &lt;D as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html#associatedtype.Error\" title=\"type serde::de::Deserializer::Error\">Error</a>&gt;<div class=\"where\">where\n    D: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserializer.html\" title=\"trait serde::de::Deserializer\">Deserializer</a>&lt;'de&gt;,</div></h4></section></summary><div class='docblock'>Deserialize this value from the given Serde deserializer. <a href=\"https://docs.rs/serde/1.0.197/serde/de/trait.Deserialize.html#tymethod.deserialize\">Read more</a></div></details></div></details>","Deserialize<'de>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-Txt\" class=\"impl\"><a href=\"#impl-Display-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/1.77.1/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3Cstr%3E-for-Txt\" class=\"impl\"><a href=\"#impl-PartialEq%3Cstr%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3C%26str%3E-for-Txt\" class=\"impl\"><a href=\"#impl-PartialEq%3C%26str%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;&amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<&str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Txt\" class=\"impl\"><a href=\"#impl-PartialEq-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Txt) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq%3CString%3E-for-Txt\" class=\"impl\"><a href=\"#impl-PartialEq%3CString%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>self</code> and <code>other</code> values to be equal, and is used\nby <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/cmp.rs.html#242\">source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>This method tests for <code>!=</code>. The default implementation is almost always\nsufficient, and should not be overridden without very good reason.</div></details></div></details>","PartialEq<String>","zng_ext_config::ConfigKey"],["<section id=\"impl-Eq-for-Txt\" class=\"impl\"><a href=\"#impl-Eq-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for Txt</h3></section>","Eq","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Add%3C%26str%3E-for-Txt\" class=\"impl\"><a href=\"#impl-Add%3C%26str%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'a&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Output\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Output\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#associatedtype.Output\" class=\"associatedtype\">Output</a> = Txt</h4></section></summary><div class='docblock'>The resulting type after applying the <code>+</code> operator.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.add\" class=\"method trait-impl\"><a href=\"#method.add\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#tymethod.add\" class=\"fn\">add</a>(self, rhs: &amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; &lt;Txt as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html\" title=\"trait core::ops::arith::Add\">Add</a>&lt;&amp;'a <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#associatedtype.Output\" title=\"type core::ops::arith::Add::Output\">Output</a></h4></section></summary><div class='docblock'>Performs the <code>+</code> operation. <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/arith/trait.Add.html#tymethod.add\">Read more</a></div></details></div></details>","Add<&'a str>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-Txt\" class=\"impl\"><a href=\"#impl-Serialize-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(\n    &amp;self,\n    serializer: S\n) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;&lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, &lt;S as <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>&gt;::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.197/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Txt\" class=\"impl\"><a href=\"#impl-Clone-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for Txt</h3></section></summary><div class=\"docblock\"><p>Clones the text.</p>\n<p>If the inner representation is [<code>TxtRepr::String</code>] the returned value is in a representation optimized\nfor sharing, either a static empty, an inlined short or an <code>Arc&lt;str&gt;</code> long string.</p>\n</div><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Txt</h4></section></summary><div class='docblock'>Returns a copy of the value. <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/1.77.1/src/core/clone.rs.html#169\">source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.reference.html\">&amp;Self</a>)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/1.77.1/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FromStr-for-Txt\" class=\"impl\"><a href=\"#impl-FromStr-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Err\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Err\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" class=\"associatedtype\">Err</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.unit.html\">()</a></h4></section></summary><div class='docblock'>The associated error which can be returned from parsing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.from_str\" class=\"method trait-impl\"><a href=\"#method.from_str\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html#tymethod.from_str\" class=\"fn\">from_str</a>(s: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;Txt, &lt;Txt as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html\" title=\"trait core::str::traits::FromStr\">FromStr</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html#associatedtype.Err\" title=\"type core::str::traits::FromStr::Err\">Err</a>&gt;</h4></section></summary><div class='docblock'>Parses a string <code>s</code> to return a value of this type. <a href=\"https://doc.rust-lang.org/1.77.1/core/str/traits/trait.FromStr.html#tymethod.from_str\">Read more</a></div></details></div></details>","FromStr","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Txt\" class=\"impl\"><a href=\"#impl-Deref-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a></h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/1.77.1/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; &amp;&lt;Txt as <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a>&gt;::<a class=\"associatedtype\" href=\"https://doc.rust-lang.org/1.77.1/core/ops/deref/trait.Deref.html#associatedtype.Target\" title=\"type core::ops::deref::Deref::Target\">Target</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","zng_ext_config::ConfigKey"],["<section id=\"impl-IntoValue%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoValue%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt; for Txt</h3></section>","IntoValue<Cow<'static, str>>","zng_ext_config::ConfigKey"],["<section id=\"impl-IntoValue%3CPathBuf%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoValue%3CPathBuf%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt; for Txt</h3></section>","IntoValue<PathBuf>","zng_ext_config::ConfigKey"],["<section id=\"impl-IntoValue%3CString%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoValue%3CString%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Txt</h3></section>","IntoValue<String>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CPathBuf%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoVar%3CPathBuf%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Txt as IntoVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/std/path/struct.PathBuf.html\" title=\"struct std::path::PathBuf\">PathBuf</a>&gt;&gt;::Var</h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<PathBuf>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoVar%3CCow%3C'static,+str%3E%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Txt as IntoVar&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/1.77.1/alloc/borrow/enum.Cow.html\" title=\"enum alloc::borrow::Cow\">Cow</a>&lt;'static, <a class=\"primitive\" href=\"https://doc.rust-lang.org/1.77.1/std/primitive.str.html\">str</a>&gt;&gt;&gt;::Var</h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<Cow<'static, str>>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CString%3E-for-Txt\" class=\"impl\"><a href=\"#impl-IntoVar%3CString%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Txt as IntoVar&lt;<a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/string/struct.String.html\" title=\"struct alloc::string::String\">String</a>&gt;&gt;::Var</h4></section></summary><div class='docblock'>Converts the source value into a var.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<String>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CWindowId%3E-for-Txt\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/window.rs.html#28-51\">source</a><a href=\"#impl-IntoVar%3CWindowId%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"zng_app/window/struct.WindowId.html\" title=\"struct zng_app::window::WindowId\">WindowId</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_app/window.rs.html#28-51\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Txt as IntoVar&lt;<a class=\"struct\" href=\"zng_app/window/struct.WindowId.html\" title=\"struct zng_app::window::WindowId\">WindowId</a>&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Calls <a href=\"zng_app/window/struct.WindowId.html#method.named\" title=\"associated function zng_app::window::WindowId::named\"><code>WindowId::named</code></a>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"zng_app/window/struct.WindowId.html\" title=\"struct zng_app::window::WindowId\">WindowId</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<WindowId>","zng_ext_config::ConfigKey"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IntoVar%3CWidgetId%3E-for-Txt\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/widget.rs.html#577-603\">source</a><a href=\"#impl-IntoVar%3CWidgetId%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoVar&lt;<a class=\"struct\" href=\"zng_app/widget/struct.WidgetId.html\" title=\"struct zng_app::widget::WidgetId\">WidgetId</a>&gt; for Txt</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_var\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/zng_app/widget.rs.html#577-603\">source</a><a href=\"#method.into_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_var</a>(self) -&gt; &lt;Txt as IntoVar&lt;<a class=\"struct\" href=\"zng_app/widget/struct.WidgetId.html\" title=\"struct zng_app::widget::WidgetId\">WidgetId</a>&gt;&gt;::Var</h4></section></summary><div class=\"docblock\"><p>Calls <a href=\"zng_app/widget/struct.WidgetId.html#method.named\" title=\"associated function zng_app::widget::WidgetId::named\"><code>WidgetId::named</code></a>.</p>\n</div></details><details class=\"toggle\" open><summary><section id=\"associatedtype.Var\" class=\"associatedtype trait-impl\"><a href=\"#associatedtype.Var\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a class=\"associatedtype\">Var</a> = LocalVar&lt;<a class=\"struct\" href=\"zng_app/widget/struct.WidgetId.html\" title=\"struct zng_app::widget::WidgetId\">WidgetId</a>&gt;</h4></section></summary><div class='docblock'>Variable type that will wrap the <code>T</code> value. <a>Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.into_boxed_var\" class=\"method trait-impl\"><a href=\"#method.into_boxed_var\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">into_boxed_var</a>(self) -&gt; <a class=\"struct\" href=\"https://doc.rust-lang.org/1.77.1/alloc/boxed/struct.Box.html\" title=\"struct alloc::boxed::Box\">Box</a>&lt;dyn VarBoxed&lt;T&gt;&gt;<div class=\"where\">where\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/1.77.1/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Converts into [<code>BoxedVar&lt;T&gt;</code>]. <a>Read more</a></div></details></div></details>","IntoVar<WidgetId>","zng_ext_config::ConfigKey"],["<section id=\"impl-IntoValue%3CWidgetId%3E-for-Txt\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/widget.rs.html#577-603\">source</a><a href=\"#impl-IntoValue%3CWidgetId%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"zng_app/widget/struct.WidgetId.html\" title=\"struct zng_app::widget::WidgetId\">WidgetId</a>&gt; for Txt</h3></section>","IntoValue<WidgetId>","zng_ext_config::ConfigKey"],["<section id=\"impl-IntoValue%3CWindowId%3E-for-Txt\" class=\"impl\"><a class=\"src rightside\" href=\"src/zng_app/window.rs.html#28-51\">source</a><a href=\"#impl-IntoValue%3CWindowId%3E-for-Txt\" class=\"anchor\">§</a><h3 class=\"code-header\">impl IntoValue&lt;<a class=\"struct\" href=\"zng_app/window/struct.WindowId.html\" title=\"struct zng_app::window::WindowId\">WindowId</a>&gt; for Txt</h3></section>","IntoValue<WindowId>","zng_ext_config::ConfigKey"]]
};if (window.register_type_impls) {window.register_type_impls(type_impls);} else {window.pending_type_impls = type_impls;}})()