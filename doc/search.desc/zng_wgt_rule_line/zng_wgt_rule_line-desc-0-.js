searchState.loadedDescShard("zng_wgt_rule_line", 0, "Rule line widgets.\nW  Draws a horizontal or vertical rule line.\nc  Line color.\nc  Line color.\nReturns the argument unchanged.\nHorizontal rule line.\nCalls <code>U::from(self)</code>.\nc  Line length.\nc  Line length.\nc  Line style.\nc  Line style.\nP  Margin around the line.\nc  Line orientation.\nc  Line orientation.\nc  Line stroke thickness.\nc  Line stroke thickness.\nVertical rule line.\nStart building a new instance.\nGets the widget type info.\nLine color, inherits from <code>FONT_COLOR_VAR</code>.\nW  Draws an horizontal <code>RuleLine!</code>.\nLine style, default is <code>Solid</code>.\nMargin around line.\nLine stroke thickness, default is <code>1.dip()</code>\nP  Sets the <code>COLOR_VAR</code> that affects all horizontal rules …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nP  Sets the <code>LINE_STYLE_VAR</code> that affects all horizontal …\nP  Sets the <code>MARGIN_VAR</code> that affects all horizontal rules …\nP  Sets the <code>STROKE_THICKNESS_VAR</code> that affects all …\nStart building a new instance.\nGets the widget type info.\nLine color, inherits from <code>FONT_COLOR_VAR</code>.\nLine style, default is <code>Solid</code>.\nMargin around line.\nLine stroke thickness, default is <code>1.dip()</code>\nW  Draws a vertical <code>RuleLine!</code>.\nP  Sets the <code>COLOR_VAR</code> that affects all vertical rules …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nP  Sets the <code>LINE_STYLE_VAR</code> that affects all vertical rules …\nP  Sets the <code>MARGIN_VAR</code> that affects all vertical rules …\nP  Sets the <code>STROKE_THICKNESS_VAR</code> that affects all vertical …\nStart building a new instance.\nGets the widget type info.")