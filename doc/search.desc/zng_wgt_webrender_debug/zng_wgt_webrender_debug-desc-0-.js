searchState.loadedDescShard("zng_wgt_webrender_debug", 0, "Webrender debug flags property for use with <code>zng-view</code> …\nRender each quad with their own draw call.\nDisable various bits of the WebRender pipeline, to help …\nFlags to enable/disable various builtin debugging tools.\nPrint driver messages to stdout.\nDisplay the pipeline epochs.\nInvalidate picture tiles every frames (useful when …\nTaint the transparent area of the glyphs with a random …\nDisplay the contents of GPU cache.\nQuery the number of pixels that pass the depth test …\nDisplay GPU timing results.\nIf set, dump picture cache invalidation debug to console.\nShow picture caching debug overlay\nHighlight all primitives with colors based on kind.\nCollect and dump profiler statistics to captures.\nDisplay the frame profiler on screen.\nDisplay intermediate render targets on screen.\nRender large blobs with at a smaller size (incorrectly). …\nWebrender renderer debug flags and profiler UI.\nShow an overlay displaying overdraw amount.\nScale the debug renderer down for a smaller screen. This …\nThe profiler only displays information that is out of the …\nDisplay all texture cache pages on screen.\nClear evicted parts of the texture cache for debugging …\nDisplay window visibility on screen.\nDraw a zoom widget showing part of the framebuffer zoomed …\nGet a flags value with all known bits set.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nDisabled\nThe intersection of a source flags value with the …\nDefault mode, no debugging enabled.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nCustom flags with no UI string.\nDebug flags.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nIf no flag nor profiler UI are set.\nWhether all bits in this flags value are unset.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nEnable profiler UI rendering.\nProfiler UI rendered when <code>DebugFlags::PROFILER_DBG</code> is set.\nThe intersection of a source flags value with the …\nP  Sets the Webrender renderer debug flags and profiler UI …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.")