searchState.loadedDescShard("zng", 0, "Zng is a cross-platform GUI framework, it provides ready …\nStart and manage an app process.\nAccessibility service, events and properties.\nANSI text widget.\nApp extensions, context, events and commands API.\n Async clone move block.\n Async clone move closure.\n Async clone move closure that can only be called once.\nButton widget, styles and properties.\nCheckerboard visual widget.\nClipboard service, commands and other types.\n Clone move closure.\nColor and gradient types, functions, properties and macros.\nConfig service, sources and other types.\nContainer widget.\nData context service and properties.\nData view widget.\nApp with default extensions.\nModal dialog overlay widget and service.\nDrag&amp;drop service, types and events.\nProcess events, external directories and metadata.\nEvent and command API.\nFocus service, properties, events and other types.\nFonts service and text shaping.\nReturns the argument unchanged.\nFile system watcher service and other types.\nGesture service, properties, events, shortcuts and other …\nGrid layout widgets.\nEvent handler API.\nHot reloading instrumentation macros and service.\nIcons service, icon font widget and other types.\nImages service, widget and other types.\nCalls <code>U::from(self)</code>.\nKeyboard service, properties, events and other types.\nLocalization service, sources and other types.\nLabel widget and properties.\nWindow layers.\nLayout service, units and other types.\nMarkdown widget, properties and other types.\nMenu widgets, properties and other types.\nMouse service, properties, events and other types.\nPanel layout widget.\nPointer capture service, properties, events and other …\nPopup widget and properties.\nTypes for general app development.\nPrelude for declaring new properties and widgets.\nProgress indicator widget, styles and properties.\nFrame builder and other types.\nRule line widgets and properties.\nScroll widgets, commands and properties.\nSelectable text widget and properties.\nSlider widget, styles and properties.\nStack layout widget, nodes and properties.\nHash-map of type erased values, useful for storing …\nStyle mix-in and other types.\nParallel async tasks and async task runners.\nText widget, properties and other types.\nText input widget and properties.\nThird party licenses service and types.\nApp timers service and other types.\nTooltip properties and widget.\nToggle button widget and styles for check box, combo box, …\nTouch service, properties, events and other types.\nUndo service, commands and other types.\nApp update service and other types.\nVariables API.\nView process implementations.\nWidget info, builder and base, UI node and list.\nWindow service, widget, events, commands and other types.\nWrap layout widget and properties.\nAccessibility service.\nRun the primary or context click action.\nExpand or collapse the widget content.\nIncrement or decrement the widget value by steps.\nAccessibility info is now required for the window.\nReplace the number value.\nRun a scroll command.\nSelect text.\nReplace the text content.\nShow or hide the widget’s tooltip.\nIndicates the entered value does not conform to the format …\nArguments for the <code>ACCESS_CLICK_EVENT</code>.\nAccessibility command without associated data.\nArguments for the <code>ACCESS_EXPANDER_EVENT</code>.\nArguments for the <code>ACCESS_INCREMENT_EVENT</code>.\nArguments for the <code>ACCESS_INITED_EVENT</code>.\nArguments for the <code>ACCESS_NUMBER_EVENT</code>.\nAccessibility role of a node in the accessibility tree.\nArguments for the <code>ACCESS_SCROLL_EVENT</code>.\nArguments for the <code>ACCESS_SELECTION_EVENT</code>.\nArguments for the <code>ACCESS_TEXT_EVENT</code>.\nArguments for the <code>ACCESS_TOOLTIP_EVENT</code>.\nIdentifies important, and usually time-sensitive, …\nIdentifies a modal alert dialogs that interrupt a user’s …\nIndicates to assistive technologies that a widget and all …\nIndicates a section of a page that could easily stand on …\nItems are sorted in ascending order by this column.\nIndicates that updates to the region have the highest …\nDefines how inputting text could trigger display of one or …\nAn input to offer both models at the same time. When a …\nIdentifies the global header, which usually includes a …\nClickable widgets that trigger a response when activated …\nIdentifies a widget as being a cell in a tabular container …\ncheckable interactive widget.\n<code>AccessCmd::Click</code>\nIdentifies a column of cells within a tabular structure.\nIdentifies a widget as being a cell in a row contains …\nIdentifies a widget as an input that controls another …\nIdentifies a supporting section that relates to the main …\nIdentifies a footer, containing identifying information …\nKind of current item a widget represents.\nRepresents the current date within a collection of dates …\nIndicates the widget is a definition of a term or concept.\nItems are sorted in descending order by this column.\nIdentifies a widget that has content separate from the …\nThe popup is a dialog.\nFocusable content within complex composite widgets or …\nIdentifies a dynamic scrollable list of articles in which …\nIdentify a figure inside page content where appropriate …\n<code>AccessCmd::Focus</code>\n<code>AccessCmd::FocusNavOrigin</code>\nIdentify a group of widgets that are a register form.\nIndicates the entered value contains a grammatical error.\nIdentifies a container of columns, rows and cells.\nThe popup is a grid.\nIdentifies a cell in a grid widget.\nIdentifies a set of user interface objects that is not …\nDefines a heading to a page or section, with …\nWidget is horizontal.\nText suggesting one way to complete the provided input may …\nIdentifies a widget container that should be considered as …\n<code>AccessCmd::Increment</code>\nDefines the kind of invalid data error of a widget.\nRepresents the current item within a set.\nWhen a user is providing input, a widget containing a …\nInteractive reference to a resource\nIdentifies a list of items.\nIdentifies a list of selectable items.\nThe popup is a list-box.\nIdentifies an item inside a list of items.\nDefines how a live update is communicated to the user.\nRepresents the current location within an environment or …\nIdentifies a widget that creates a live region where new …\nIdentifies the primary content.\nIdentifies a live region containing non-essential …\nIndicates that the content represents a mathematical …\nIdentifies a composite widget that offers a list of …\nThe popup is a menu.\nIdentifies the part of a menu that always stays visible.\nIndicates the widget is an option in a set of choices …\nWidget is a checkable option in a menu.\nWidget is a selectable option in a menu where only one …\nIdentifies major groups of links used for navigating the …\nIdentifies a section whose content is parenthetic or …\nIndicates that updates to the region should <strong>not</strong> be …\nSelectable items in a list-box.\nWidget orientation.\nRepresents the current page within a set of pages such as …\nScroll page down.\nScroll page left.\nScroll page right.\nScroll page up.\nIndicates that updates to the region should be presented …\nPopup type.\nDefines a widget that displays the progress status for …\nSelectable items in a list where only one item may be …\nIdentifies a group of radio buttons.\nIdentifies significant areas. Usually set with …\n<code>AccessCmd::ReplaceSelectedText</code>\nIdentifies a row of cells within a tabular structure.\nIdentifies a group of rows within a tabular structure.\nIdentifies a cell containing header information for a row …\nIndicates the entered value contains a spelling error.\n<code>AccessCmd::Scroll</code>\nWidget controls the scrolling of content within a viewing …\nAccessibility scroll command.\nScroll until the widget is fully visible.\nScroll until the rectangle (in the widget space) is fully …\nIdentifies the search area or form.\nIdentifies a text-box that is used for searching.\n<code>AccessCmd::SelectText</code>\nIdentifies a divider that separates and distinguishes …\n<code>AccessCmd::SetExpanded</code>\n<code>AccessCmd::SetNumber</code>\n<code>AccessCmd::SetString</code>\n<code>AccessCmd::SetToolTipVis</code>\nDefines an input where the user selects a value from …\nSort direction.\nDefines a type of range that expects the user to select a …\nIdentifies a live region containing advisory information …\nRepresents the current step within a process such as the …\nIdentifies a check-box with named states.\nIdentifies a widget in a tab-list that selects the active …\nIdentifies the widget that serves as the container for a …\nIdentifies a container for the active tab.\nIdentifies the widget containing the role as having a …\nIdentifies a word or phrase with an optional corresponding …\nIdentifies a widget that allows the input of free-form …\nRepresents the current time within a set of times such as …\nIndicates to assistive technologies that a widget is a …\nDefines the containing widget as a collection of commonly …\nIdentifies a contextual text bubble that displays a …\nWidget that allows the user to select one or more items …\nThe popup is a tree.\nIdentifies a widget as being grid whose rows can be …\nIdentifies an item in a tree widget.\nWidget is vertical.\nP  Append supported access commands.\nP  Append supported access commands.\nP  Sets the widget kind for accessibility services.\nP  Sets the widget kind for accessibility services.\nP  Defines if the widget and descendants can be present in …\nP  Defines if the widget and descendants can be present in …\nP  Identifies the currently active widget when focus is on …\nP  Identifies the currently active widget when focus is on …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nP  Set how input text triggers display of one or more …\nP  Set how input text triggers display of one or more …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nSelection end.\nP  If the widget is checked (<code>Some(true)</code>), unchecked (…\nP  If the widget is checked (<code>Some(true)</code>), unchecked (…\nClick the widget in the window.\nP  Sets the total number of columns in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the total number of columns in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the widget’s column index in the parent table or …\nP  Sets the widget’s column index in the parent table or …\nP  Sets the number of columns spanned by the widget in the …\nP  Sets the number of columns spanned by the widget in the …\nScroll command.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nP  Append widgets whose contents or presence are …\nP  Append widgets whose contents or presence are …\nP  Indicates that the widget represents the current item …\nP  Indicates that the widget represents the current item …\nEvent is broadcast.\nTarget the widget.\nTarget the widget.\nTarget the widget.\nTarget the widget.\nTarget the widget.\nTarget the widget.\nTarget the widget.\nTarget both widgets.\nIncrement steps.\nP  Append widgets that describes this widget to the …\nP  Append widgets that describes this widget to the …\nP  Append widgets that provide additional information …\nP  Append widgets that provide additional information …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nP  Indicates that the widget is an error message for the …\nP  Indicates that the widget is an error message for the …\nP  Indicate that the widget toggles the visibility of …\nP  Indicate that the widget toggles the visibility of …\nNew expanded value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nP  Append options for next widget to be read by screen …\nP  Append options for next widget to be read by screen …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nHide tooltip for the widget in the window, if it has any …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Indicates that the widget’s data is invalid with …\nP  Indicates that the widget’s data is invalid with …\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nIs context click.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nIs primary click (default action).\nP  Sets the number of items in the current set of list …\nP  Sets the number of items in the current set of list …\nP  Sets the widget’s number or position in the current …\nP  Sets the widget’s number or position in the current …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nP  Sets a custom name for the widget in accessibility info.\nP  Sets a custom name for the widget in accessibility info.\nP  Append widgets that provide additional information …\nP  Append widgets that provide additional information …\nP  Uses the accessible children as <code>labelled_by</code>.\nP  Uses the accessible children as <code>labelled_by</code>.\nP  Sets the hierarchical level of the widget within a …\nP  Sets the hierarchical level of the widget within a …\nP  Indicate that the widget can change, how the change can …\nP  Indicate that the widget can change, how the change can …\nP  Sets if the widget is modal when displayed.\nP  Sets if the widget is modal when displayed.\nP  Indicates that the user may select more than one item …\nP  Indicates that the user may select more than one item …\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nReplacement number.\nP  Access requested a click.\nP  Access requested a click.\nP  Access requested to expand or collapse the widget …\nP  Access requested to expand or collapse the widget …\nP  Access requested to increment or decrement the widget …\nP  Access requested to increment or decrement the widget …\nP  Access requested a number input.\nP  Access requested a number input.\nP  Access requested a scroll command.\nP  Access requested a scroll command.\nP  Access requested a text selection.\nP  Access requested a text selection.\nP  Access requested a text input/replace.\nP  Access requested a text input/replace.\nP  Access requested to show or hide the widget’s tooltip.\nP  Access requested to show or hide the widget’s tooltip.\nP Preview <code>on_access_click</code> event.\nP Preview <code>on_access_click</code> event.\nP Preview <code>on_access_expander</code> event.\nP Preview <code>on_access_expander</code> event.\nP Preview <code>on_access_increment</code> event.\nP Preview <code>on_access_increment</code> event.\nP Preview <code>on_access_number</code> event.\nP Preview <code>on_access_number</code> event.\nP Preview <code>on_access_scroll</code> event.\nP Preview <code>on_access_scroll</code> event.\nP Preview <code>on_access_selection</code> event.\nP Preview <code>on_access_selection</code> event.\nP Preview <code>on_access_text</code> event.\nP Preview <code>on_access_text</code> event.\nP Preview <code>on_access_tooltip</code> event.\nP Preview <code>on_access_tooltip</code> event.\nP  Indicates whether the widget’s orientation is …\nP  Indicates whether the widget’s orientation is …\nP  Append <code>owned</code> widgets that are <em>children</em> of this widget, …\nP  Append <code>owned</code> widgets that are <em>children</em> of this widget, …\nP  Short hint (a word or short phrase) intended to help …\nP  Short hint (a word or short phrase) intended to help …\nP  Indicates the availability and type of interactive …\nP  Indicates the availability and type of interactive …\nP  Indicates that the widget is not editable, but is …\nP  Indicates that the widget is not editable, but is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nP  Indicates that user input is required on the widget …\nP  Indicates that user input is required on the widget …\nP  Sets the total number of rows in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the total number of rows in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the widget’s row index in the parent table or …\nP  Sets the widget’s row index in the parent table or …\nP  Sets the number of rows spanned by the widget in the …\nP  Sets the number of rows spanned by the widget in the …\nP  Sets the amount scrolled horizontally if allowed.\nP  Sets the amount scrolled horizontally if allowed.\nP  Sets the amount scrolled vertically if allowed.\nP  Sets the amount scrolled vertically if allowed.\nP  Indicates that the widget is selected.\nP  Indicates that the widget is selected.\nIf only the selected text is replaced.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nShow tooltip for widget in the window, if it has any …\nP  Sets the sort direction for the table or grid items.\nP  Sets the sort direction for the table or grid items.\nSelection start.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nReplacement text.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nP  Set the current value.\nP  Set the current value.\nP  Set the maximum value (inclusive).\nP  Set the maximum value (inclusive).\nP  Set the minimum value (inclusive).\nP  Set the minimum value (inclusive).\nNew tooltip visibility.\nTarget widget.\nTarget widget.\nTarget widget.\nTarget widget.\nTarget widget.\nTarget widget.\nTarget widget.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\nTarget window.\n8-bit lookup.\nNamed ANSI color.\nRepresents the ANSI style of a text run.\nW  Render text styled using ANSI escape sequences.\nW  Render text styled using ANSI escape sequences.\nIterator that parses ANSI escape codes.\nRepresents a segment of ANSI styled text that shares the …\nFont weight defined by ANSI escape codes.\nBold.\nGray\nLight.\nArguments for a widget function for a text line.\nNormal.\nArguments for a widget function for a stack of lines.\nArguments for a widget function for a stack of pages.\nArguments for a widget function for an ANSI styled text …\nRGB\nBackground color.\nBlink animation.\nP  ANSI blink animation interval.\nFont color.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nVisibility.\nZero-counted global index of this line.\nZero-counted index of this page.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNegative color.\nFont italic.\nP  Widget function that converts <code>LineFnArgs</code> to widgets.\nLine widgets, generated by <code>LINE_FN_VAR</code>.\nP  Maximum number of lines per page view.\nNew parsing iterator.\nNew from text and style.\nNew args.\nNew args.\nNew args.\nP  Widget function that converts <code>PageFnArgs</code> to widgets.\nZero-counted index of this line in the parent page.\nPage widgets, generated by <code>PAGE_FN_VAR</code>.\nP  Widget function that converts <code>PanelFnArgs</code> to widgets.\nStrikethrough.\nCurrent style.\nThe ANSI style.\nText style.\nText segment widgets, generated by <code>TEXT_FN_VAR</code>.\nP  Widget function that converts <code>TextFnArgs</code> to widgets.\nP  ANSI text.\nThe text.\nText run.\nP  Enable text selection, copy.\nUnderline.\nFont weight.\nStart building a new instance.\nGets the widget type info.\nApp instance init event, with the arguments.\nCapture all <code>context_local!</code> values and …\nDesired next step of app main loop.\nObserver for <code>HeadlessApp::update_observed</code>.\nApplication builder.\nAn app extension.\nInfo about an app-extension.\nIdentifies an app instance.\nArguments for <code>APP_INSTANCE_EVENT</code>.\nAn app local storage.\nRepresents an app lifetime, ends the app on drop.\nArguments for <code>on_app_start</code> handlers.\nDefines a <code>LocalContext::capture_filtered</code> filter.\nRepresents an <code>AppLocal&lt;T&gt;</code> value that can be temporarily …\nCapture all <code>context_local!</code> and <code>TracingDispatcherContext</code> …\nIdentifies a selection of <code>LocalContext</code> values.\nCapture all variables not excluded, no <code>context_local!</code> nor …\nDuration elapsed since an epoch.\nRepresents a timeout instant.\nDeadline that is always elapsed.\nEarliest instant.\nRepresents the app process <code>exit</code> request.\nCancellable event raised when app process exit is …\nCapture all except this set.\nExit the loop and drop the app.\nArguments for <code>EXIT_REQUESTED_EVENT</code>.\nA headless app controller.\nInstant service.\nCapture only this set.\nDefines how the <code>INSTANT.now</code> value updates in the app.\nSystem low memory warning, some platforms may kill the app …\nTracks the current execution context.\nArguments for <code>LOW_MEMORY_EVENT</code>.\nThe maximum representable instant.\nDeadline that is practically never reached.\nTime is controlled by the app.\nRepresents a read guard for an <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> that owns a …\nRepresents a write guard for an <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> that owns a …\nRepresents the <strong>new</strong> action.\nDon’t capture anything, equivalent of <code>LocalContext::new</code>.\nEvery call to <code>now</code> resamples the time.\nRepresents the <strong>open</strong> action.\nImmediately try to receive more app events.\nRead-only wrapper on an <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> contextual value.\nHelper, runs a cleanup action once on drop.\nRepresents a read guard for an <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> that owns a …\nRepresents a read guard for an <code>Arc&lt;RwLock&lt;T&gt;&gt;</code> that owns a …\nRepresents the <strong>save-as</strong> action.\nRepresents the <strong>save</strong> action.\nCalls during an update pass (or layout, render, etc.) read …\nSleep until an app event is received.\n Declares new app local variable.\nOnly capture the <code>app_local!</code> and <code>TracingDispatcherContext</code>.\nArguments the app instance was started with.\nCast to dynamically dispatched observer, this can help …\nAssert that the value is <code>AppControlFlow::Exit</code>.\nAssert that the value is <code>AppControlFlow::Wait</code>.\nCalls an <code>AppHandler&lt;A&gt;</code> once and blocks until the update …\nPolls a <code>future</code> and updates the app repeatedly until it …\nCalls multiple <code>AppHandler&lt;A&gt;</code> once each and blocks until …\nGets the extension boxed.\nCapture a snapshot of the current context that can be …\nCapture a snapshot of the current context that only …\nReturns <code>Some(t)</code> where t is the time <code>self + duration</code> if t …\nReturns the amount of time elapsed from another instant to …\nReturns <code>Some(t)`` where t is the time </code>self - duration<code>if</code>…\nChecks if the context local is in the set.\n Declares new app and context local variable.\nCapture all <code>context_local!</code> and <code>TracingDispatcherContext</code>, …\nCapture all variables, no <code>context_local!</code> nor …\nInstance count. Is zero for the current process, in single …\nApp-process crash handler.\nGet the ID of the app that owns the current context.\nCalls <code>named</code> in a debug build and <code>new_unique</code> in a release …\nCalled when the application is exiting.\nBroadcast to all widgets.\nBroadcast to all.\nCalls the <code>handler</code> once and <code>block_on</code> it with a 60 seconds …\nCalls the <code>handlers</code> once each and <code>block_on_multi</code> with a 60 …\nReturns the amount of time elapsed from another instant to …\nReturns the amount of time elapsed since this instant.\nIf the application should notify raw device events.\nInstant of first usage of the <code>INSTANT</code> service in the …\nCalled after <code>event_ui</code>.\nCalled just after <code>AppExtension::event</code>.\nCalled just before <code>event_ui</code> when an event notifies.\nCalled just after <code>AppExtension::event_preview</code>.\nCalled just before <code>event</code>.\nCalled just after <code>AppExtension::event_ui</code>.\nRequests and wait for app exit.\nBlend <code>ctx</code> over <code>self</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an ID from a raw value.\nCreates an ID from a <code>sequential</code> number.\nGet a clone of the value.\nClone a reference to the current value in the context or …\nRetrieve the underlying value.\nClone the current value in the context or the default …\nReturns <code>true</code> if the deadline was reached.\nIf the app has exited.\nGets an ID for this local instance that is valid for the …\nGets an ID for this context local instance that is valid …\nCalled when info rebuild is requested for windows and …\nCalled just after <code>AppExtension::info</code>.\nInitializes this extension.\nInsert a context local.\nExtend this set with all <code>other</code> contexts.\nInsert the <code>app_local!</code> ID and <code>TracingDispatcherContext</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the arguments are for the currently executing process …\nGets if no value is set in the context.\nIf the set has any values.\nCalled when layout is requested for windows and widgets.\nCalled just after <code>AppExtension::layout</code>.\nNumber of unique values in the set.\nLock owned.\nLock owned.\nLocks this <code>RwLock</code> with shared read access, blocking the …\nMake a new <code>MappedRwLockReadGuardOwned</code> for a component of …\nMake a new <code>MappedRwLockReadGuardOwned</code> for a component of …\nMake a new <code>MappedRwLockReadGuardOwned</code> for a component of …\nMake a new <code>MappedRwLockWriteGuardOwned</code> for a component of …\nReturns the deadline further into the future.\nReturns the deadline further into the past or closest to …\nDefines how the <code>now</code> value updates.\nReturns the name associated with the ID or <code>&quot;&quot;</code>.\nGet or generate an ID with associated name.\nGenerate a new ID with associated name.\nNew.\nNew args from values that convert into the argument types.\nNew with closure that will run once on drop.\nNew empty context.\nNew empty.\nNew args from values that convert into the argument types.\nNew info for <code>E</code>.\nNew args from values that convert into the argument types.\nGenerates a new unique ID.\nReturns an instant corresponding to “now” or an …\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nRegister a <code>handler</code> to run when an <code>APP</code> starts running in …\nP  On new command.\nP  On new command.\nP  On open command.\nP  On open command.\nP Preview <code>on_new</code> command.\nP Preview <code>on_new</code> command.\nP Preview <code>on_open</code> command.\nP Preview <code>on_open</code> command.\nP Preview <code>on_save</code> command.\nP Preview <code>on_save</code> command.\nP Preview <code>on_save_as</code> command.\nP Preview <code>on_save_as</code> command.\nP  On save command.\nP  On save command.\nP  On save-as command.\nP  On save-as command.\nEnables <code>tracing</code> events printing if a subscriber is not …\nFilter used by <code>print_tracing</code>, removes some log noise from …\nGets if the read-only shared reference is to the same lock …\nInput device hardware ID and events.\nCalled for each raw event received.\nLocks this <code>RwLock</code> with shared read access, blocking the …\nRead lock the value associated with the current app.\nLocks this <code>RwLock</code> with shared read access, blocking the …\nCreate a read lock and <code>map</code> it to a sub-value.\nGets a read-only shared reference to the current context …\nLocks this <code>RwLock</code> with shared read access, blocking the …\nLocks this <code>RwLock</code> with shared read access, blocking the …\nRegister info abound this extension on the info list.\nRegister to run when the app deinits and all clones of the …\nRemove a context local.\nRemoves all <code>other</code> contexts from this set.\nCalled when render is requested for windows and widgets.\nCalled just after <code>AppExtension::render</code>.\nIf headless rendering is enabled.\nStarts the app, then starts polling <code>start</code> to run.\nInitializes extensions in headless mode and returns an …\nExecute the async <code>task</code> in the UI thread, updating the app …\nReturns the amount of time elapsed from another instant to …\nUn-scramble the underlying value to get the original …\nSet the value.\nAssociate a <code>name</code> with the ID, if it is not named.\nStart an app scope in the current thread.\nModifies the <code>print_tracing</code> subscriber to panic for error …\nReturns the time left until the deadline is reached.\nNew deadline from now + <code>dur</code>.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nTrace recording and data model.\nTry to get a clone of the value.\nTry lock owned.\nLock owned.\nTry lock owned.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nTry read lock the value associated with the current app.\nTry lock this <code>RwLock</code> with shared read access, blocking the …\nTry to create a read lock and <code>map</code> it to a sub-value.\nAttempts to acquire this <code>RwLock</code> with shared read access.\nLocks this <code>RwLock</code> with shared read access, blocking the …\nTry to set the value.\nTry to write lock the value associated with the current …\nLocks this <code>RwLock</code> with exclusive write access, blocking …\nTry to create a write lock and <code>map</code> it to a sub-value.\nExtension type ID.\nExtension type name.\nCalled after every <code>update_ui</code> and <code>info</code>.\nDoes updates unobserved.\nCalled just after <code>AppExtension::update</code>.\nDoes updates observing <code>update</code> only.\nDoes updates observing <code>event</code> only.\nDoes updates with an <code>AppEventObserver</code>.\nCalled just before <code>update_ui</code>.\nCalled just after <code>AppExtension::update_preview</code>.\nCalled just before <code>update</code>.\nCalled just after <code>AppExtension::update_ui</code>.\nCollects a set of all the values in the context.\nSet an env variable for the view-process.\nSet the path to the executable for the <em>View Process</em>.\nCalls <code>f</code> with the <code>value</code> loaded in context.\nCalls <code>f</code> in the captured context.\nCalls <code>f</code> while all contextual values of <code>self</code> are set on the …\nSame as <code>with_context</code>, but <code>value</code> represents a variable.\nCalls <code>f</code> with no value loaded in context.\nWrite lock the value associated with the current app.\nLocks this <code>RwLock</code> with exclusive write access, blocking …\nCreate a write lock and <code>map</code> it to a sub-value.\nVars to not include.\nLocals to not include.\nRepresents a frame parsed from a stack backtrace.\nArguments for the crash handler dialog function.\nCrash handler config.\nInfo about an app-process crash.\nPanic parsed from a <code>stderr</code> dump.\nInfo about the app-process crashes.\nAdd a closure that is called just before the app-process …\nArguments used.\nStack backtrace.\nIterate over frames parsed from the <code>backtrace</code>.\nProcess exit code.\nReads the code line + four surrounding lines if the code …\nColumn in the line of code that defines the panic.\nGets if <code>stderr</code> contains a panic that can be parsed by <code>find</code>.\nGets if <code>stderr</code> contains a panic that can be parsed by <code>find</code> …\n Register a <code>FnOnce(&amp;mut CrashConfig)</code> closure to be called …\nDebug dialog window.\nSet the crash dialog-handler used if <code>crash_dialog</code> is not …\nSet the crash dialog process handler.\nInfo about a crash in the dialog-process spawned to handle …\nAdd a closure that is called just before the …\nExit the monitor-process (application) with code.\nPath to file that defines the panic.\nSource code file.\nTry parse <code>stderr</code> for the crash panic.\nTry parse <code>stderr</code> for the crash panic.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets if <code>stderr</code> contains a crash panic.\nGets if <code>stderr</code> contains a crash panic that traced …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf this frame is inside the Rust panic code.\nGets if <code>stderr</code> does not contain any ANSI scape sequences.\nGets if <code>stdout</code> does not contain any ANSI scape sequences.\nLatest crash.\nLine of code that defines the panic.\nSource code line.\nBest attempt at generating a readable error message.\nPanic message.\nMinidump file.\nChange the minidump directory.\nPosition on the backtrace.\nFunction name.\nDoes not run with crash handler.\nDo not collect a minidump.\nOperating system.\nIterate over frames parsed from the <code>backtrace</code>.\nRestart the app-process with same argument as the latest …\nRestart the app-process with custom arguments.\nUnix signal that terminated the process.\nFull capture of the app stderr.\nGet <code>stderr</code> without any ANSI escape sequences (CSI).\nFull capture of the app stdout.\nGet <code>stdout</code> without any ANSI escape sequences (CSI).\nName of thread that panicked.\nCrash moment.\nSeconds since Unix epoch.\nWidget where the panic happened.\nA device event source was added/installed.\nA device event source was removed/un-installed.\nArguments for <code>DEVICE_ADDED_EVENT</code> and <code>DEVICE_REMOVED_EVENT</code>.\nUnique identifier of a device event source.\nMotion on some analog axis.\nArguments for <code>MOTION_EVENT</code>.\nAnalog axis.\nBroadcast to all widgets.\nBroadcast to all widgets.\nDevice that was added/removed.\nDevice that generated the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an ID from a raw value.\nCreates an ID from a <code>sequential</code> number.\nRetrieve the underlying value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nGenerates a new unique ID.\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nUn-scramble the underlying value to get the original …\nInstant the event happened.\nInstant the event happened.\nMotion amount.\nVirtual generic device ID used in device events generated …\nVirtual keyboard ID used in keyboard events generated by …\nVirtual mouse ID used in mouse events generated by code.\nRepresents a traced event.\nRepresents a single app process in a recorded trace.\nRepresents a single thread in an app process in a recorded …\nRepresents a recorded trace.\nEvents that happened on the thread.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSystem process ID.\nEvent info.\nMoment from the recording start when this event happened.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMerge <code>other</code> into this.\nMerge <code>other</code> into this.\nMerge <code>other</code> into this.\nProcess name.\nThread name.\nParse a Chrome JSON Array format trace.\nTraced app processes.\nRead and parse a Chrome JSON Array format trace.\nSort processes processes and threads by start time then …\nSort threads by name, events by instant and spans by start.\nSort events by instant and spans by start.\nSpans started and ended on the thread.\nGets the minimum event or span start in the thread.\nProcess start instant.\nStops recording and flushes.\nTraced threads on the process.\nConvert the trace to Chrome JSON Array format.\nConvert and write the trace to Chrome JSON Array format.\nButton context.\nW  A clickable container.\nW  A clickable container.\nW  Button default style.\nW  Button default style.\nW  Button light style.\nW  Button light style.\nW  Button link style.\nW  Button link style.\nW  Primary button style.\nW  Primary button style.\nP  If pointer interaction with other widgets is blocked …\nThe <code>cmd</code> value, if set.\nc  Sets the <code>Command</code> the button represents.\nP  Sets the widget function used to produce the button …\nThe <code>cmd_param</code> value.\nP  Optional command parameter for the button to use when …\nP  Sets the widget function used to produce the button …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Button click event.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nW  A checkerboard visual.\nW  A checkerboard visual.\nChecker board colors.\nP  Sets the offset of the checkerboard pattern.\nP  Sets the offset of the checkerboard pattern.\nP  Sets the offset of the checkerboard pattern.\nP  Set the size of a checkerboard color rectangle.\nP  Set the size of a checkerboard color rectangle.\nP  Set the size of a checkerboard color rectangle.\nP  Set both checkerboard colors.\nP  Set both checkerboard colors.\nP  Set both checkerboard colors.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nStart building a new instance.\nGets the widget type info.\nClipboard service.\nRepresents the clipboard <strong>copy</strong> action.\nRepresents the clipboard <strong>cut</strong> action.\nError getting or setting the clipboard.\nNo view-process available to process the request.\nCannot set image in clipboard because it has not finished …\nView-process or operating system does not support the data …\nOther error.\nRepresents the clipboard <strong>paste</strong> action.\nGets custom data from the clipboard.\nGets a file list from the clipboard.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets an image from the clipboard.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  On copy command.\nP  On copy command.\nP  On cut command.\nP  On cut command.\nP  On paste command.\nP  On paste command.\nP Preview <code>on_copy</code> command.\nP Preview <code>on_copy</code> command.\nP Preview <code>on_cut</code> command.\nP Preview <code>on_cut</code> command.\nP Preview <code>on_paste</code> command.\nP Preview <code>on_paste</code> command.\nSet a custom data on the clipboard.\nSets the file list on the clipboard after the current …\nSet the image on the clipboard after the current update, …\nSets the text string on the clipboard after the current …\nGets a text string from the clipboard.\nDefines the preferred color scheme in a context.\nCreates a color with the hue and saturation of the …\nDarkens the background color to reflect the foreground …\nBrightens the background color to reflect the foreground …\nColor scheme preference.\nLight text, dark background.\nSelects the darker of the colors.\nSubtracts the darker of the two constituent colors from …\nProduces an effect similar to that of the <em>difference</em> mode …\nMultiplies or screens the colors, depending on the …\nHSL + alpha.\nSpherical linear interpolation in Hue (shorter path), …\nLinear interpolate SLA, spherical linear interpolation in …\nLinear interpolation in each HSLA component.\nHSV + alpha\nCreates a color with the hue of the foreground color and …\nDefines the color space for color interpolation.\nDark text, light background.\nRepresents a dark and light <em>color</em>.\nExtension methods for <code>impl Var&lt;LightDark&gt;</code>.\nSelects the lighter of the colors.\nCreates a color with the luminosity of the foreground …\nColor mix and adjustment methods.\nColor mix blend mode.\nMultiply the colors.\nNormal alpha blend of the foreground color over the …\nMultiplies or screens the colors, depending on the …\nPre-multiplied RGB + alpha.\nWebrender <code>MixBlendMode</code>.\nRGB + alpha.\nLinear interpolation in each RGBA component.\nCreates a color with the saturation of the foreground …\nMultiply the colors, then complements the result.\nDarkens or lightens the colors, depending on the …\nP  Defines the preferred accent color in the widget and …\nP  Defines the preferred accent color in the widget and …\nAlpha channel value, in the <code>[0.0..=1.0]</code> range.\nAlpha channel value, in the <code>[0.0..=1.0]</code> range.\nAlpha channel in the <code>[0.0..=1.0]</code> range, zero is invisible, …\nAlpha channel in the <code>[0.0..=1.0]</code> range, zero is invisible, …\nP  Defines the seed color used by widgets to derive …\nP  Defines the seed color used by widgets to derive …\nBlue channel value, in the <code>[0.0..=1.0]</code> range.\n<code>Rgba::blue</code> multiplied by <code>alpha</code>.\nP  Defines the preferred color scheme in the widget and …\nP  Defines the preferred color scheme in the widget and …\nNamed primary, secondary and tertiary colors.\nColor used when <code>ColorScheme::Dark</code>.\nSubtracts the <code>amount</code> from the color <em>lightness</em>.\nLight.\nSubtracts the <code>amount</code> from the color <em>saturation</em>.\nColor filter types and properties.\nNode that fills the widget area with a color.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nFrom same color to both.\nFrom <code>(light, dark)</code> tuple.\nFrom same color to both.\nFrom same color to both.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nColor gradient types and nodes.\nGreen channel value, in the <code>[0.0..=1.0]</code> range.\n<code>Rgba::green</code> multiplied by <code>alpha</code>.\nHexadecimal color literal.\nHSL color, opaque, alpha is set to <code>1.0</code>.\nHSLA color.\nAnimation sampler that sets the <code>lerp_space</code> to …\nAnimation sampler that sets the <code>lerp_space</code> to …\nHSV color, opaque, alpha is set to <code>1.0</code>.\nHSVA color.\nHue color angle in the <code>[0.0..=360.0]</code> range.\nHue color angle in the <code>[0.0..=360.0]</code> range.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConversion to positional color.\nSolid color.\nAll sides solid color.\nFrom same color to both.\nAll sides solid color.\nSolid color.\nFrom same color to both.\nConversion to positional color.\nFrom same color to both.\nSolid color.\nAll sides solid color.\nConversion to positional color.\nIf the saturation is more than zero.\nGets the lerp space used for color interpolation.\nColor used when <code>ColorScheme::Light</code>.\nRGBA color pair.\nAdds the <code>amount</code> to the color <em>lightness</em>.\nLightness amount in the <code>[0.0..=1.0]</code> range, zero is black, …\nGets a contextualized var that maps using <code>map</code> and then to …\nGets a contextualized var that maps using <code>map</code> and then …\nMixAdjust <code>background</code> over <code>self</code> using the <code>mode</code>.\nMixAdjust <code>self</code> over <code>background</code> using the <code>MixBlendMode::</code>…\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>self</code> over <code>background</code> using the <code>MixBlendMode::</code>Hue`…\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>self</code> over <code>background</code> using the <code>MixBlendMode::</code>…\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>self</code> over <code>background</code> using the <code>MixBlendMode::</code>…\nMixAdjust <code>background</code> over <code>self</code> using the …\nMixAdjust <code>background</code> over <code>self</code> using the …\nNew from RGB of a the same type and A that can be of a …\nNew from light, dark colors.\nRed channel value, in the <code>[0.0..=1.0]</code> range.\n<code>Rgba::red</code> multiplied by <code>alpha</code>.\nRGB color, opaque, alpha is set to <code>1.0</code>.\nRGBA color.\nGets a contextualized var that maps to <code>LightDark::rgba</code>.\nGets a contextual <code>Rgba</code> var that selects the color for the …\nGets a contextualized var that maps to <code>LightDark::rgba</code> …\nGets a contextual <code>Rgba</code> var that selects the color for the …\nGets a contextualized var that maps to <code>LightDark::rgba</code> and …\nGets a contextual <code>Rgba</code> var that selects the color for the …\nAnimation sampler that sets the <code>lerp_space</code> to …\nSaturation amount in the <code>[0.0..=1.0]</code> range, zero is gray, …\nSaturation amount in the <code>[0.0..=1.0]</code> range, zero is gray, …\nSet the <code>alpha</code> component from any type that converts to …\nSets the <code>alpha</code> value.\nSets the <code>alpha</code> value.\nSet the <code>blue</code> component from any type that converts to …\nSet the <code>green</code> component from any type that converts to …\nSets the <code>hue</code> color angle.\nSets the <code>hue</code> color angle.\nSets the <code>lightness</code> value.\nSet the <code>red</code> component from any type that converts to …\nSets the <code>saturation</code> value.\nSets the <code>saturation</code> value.\nSets the <code>value</code>.\nGets a contextualized var that maps to <code>LightDark::shade</code> …\nShade at 8% increments.\nGets a contextualized var that maps to <code>LightDark::shade_fct</code>…\nOverlay WHITE/BLACK to the dark/light color depending on …\nGets a contextualized var that maps to <code>LightDark::shade_fct</code>…\nGets a contextualized var that maps to <code>LightDark::shade</code> …\nInterpolate in the <code>LerpSpace::Hsla</code> mode.\nInterpolate in the <code>LerpSpace::HslaChromatic</code> mode.\nConvert a copy to [B, G, R, A] bytes.\nConvert a copy to [R, G, B, A] bytes.\nReturns a copy of the color with the alpha set to <code>0</code>.\nBrightness amount in the <code>[0.0..=1.0]</code> range, zero is black, …\nNamed web colors.\nReturns a copy of the color with a new <code>alpha</code> value.\nReturns a copy of this color with a new <code>alpha</code>.\nReturns a copy of this color with a new <code>alpha</code>.\nReturns a copy of the color with a new <code>blue</code> value.\nReturns a copy of the color with a new <code>green</code> value.\nReturns a copy of this color with a new <code>hue</code>.\nReturns a copy of this color with a new <code>hue</code>.\nCalls <code>f</code> with <code>lerp_space</code> set to <code>space</code>.\nReturns a copy of this color with a new <code>lightness</code>.\nReturns a copy of this color with a new <code>lightness</code>.\nReturns a copy of the color with a new <code>red</code> value.\nReturns a copy of this color with a new <code>saturation</code>.\nReturns a copy of this color with a new <code>saturation</code>.\nReturns a copy of this color with a new <code>value</code>.\nColor that contrasts with the text color.\n Azure, <code>#0080FF</code>, <code>rgb(0, 128, 255)</code>.\nSeed color for widget background.\n Black, <code>#000000</code>, <code>rgb(0, 0, 0)</code>.\n Blue, <code>#0000FF</code>, <code>rgb(0, 0, 255)</code>.\n Cyan, <code>#00FFFF</code>, <code>rgb(0, 255, 255)</code>.\n Gray, <code>#808080</code>, <code>rgb(128, 128, 128)</code>.\n Green, <code>#00FF00</code>, <code>rgb(0, 255, 0)</code>.\n Lime, <code>#80FF00</code>, <code>rgb(128, 255, 0)</code>.\n Magenta, <code>#FF00FF</code>, <code>rgb(255, 0, 255)</code>.\n Orange, <code>#FF8000</code>, <code>rgb(255, 128, 0)</code>.\n Red, <code>#FF0000</code>, <code>rgb(255, 0, 0)</code>.\n Rose, <code>#FF0080</code>, <code>rgb(255, 0, 128)</code>.\n Spring, <code>#00FF80</code>, <code>rgb(0, 255, 128)</code>.\n Violet, <code>#8000FF</code>, <code>rgb(128, 0, 255)</code>.\n White, <code>#FFFFFF</code>, <code>rgb(255, 255, 255)</code>.\n Yellow, <code>#FFFF00</code>, <code>rgb(255, 255, 0)</code>.\nRepresents a custom color filter.\nA color filter or combination of filters.\nA computed <code>Filter</code>, ready for Webrender.\nP  Blur the everything behind the widget.\nP  Blur the everything behind the widget.\nP  Adjust color brightness of everything behind the widget.\nP  Adjust color brightness of everything behind the widget.\nP  Custom backdrop filter.\nP  Custom backdrop filter.\nP  Adjust the color contrast of everything behind the …\nP  Adjust the color contrast of everything behind the …\nP  Backdrop filter, or combination of filters.\nP  Backdrop filter, or combination of filters.\nP  Grayscale tone everything behind the widget.\nP  Grayscale tone everything behind the widget.\nP  Hue shift the colors behind the widget.\nP  Hue shift the colors behind the widget.\nP  Inverts the colors of everything behind the widget.\nP  Inverts the colors of everything behind the widget.\nP  Adjust color saturation of everything behind the widget.\nP  Adjust color saturation of everything behind the widget.\nP  Sepia tone everything behind the widget.\nP  Sepia tone everything behind the widget.\nP  Blur the widget.\nP  Blur the widget.\nAdd a blue effect to the filter, the blue <code>radius</code> is …\nP  Adjust the widget colors brightness.\nP  Adjust the widget colors brightness.\nAdd a brightness adjustment to the filter, zero removes …\nP  Color filter, or combination of filters targeting the …\nP  Color filter, or combination of filters targeting the …\nP  Sets how the widget’s child content blends with the …\nP  Sets how the widget’s child content blends with the …\nP  Opacity/transparency of the widget’s child.\nP  Opacity/transparency of the widget’s child.\nP  Custom color filter.\nP  Custom color filter.\nCustom filter.\nP  Adjust the widget colors contrast.\nP  Adjust the widget colors contrast.\nAdd a contrast adjustment to the filter, zero removes all …\nP  Drop-shadow effect for the widget.\nP  Drop-shadow effect for the widget.\nAdd a drop-shadow to the effect.\nP  Color filter, or combination of filters.\nP  Color filter, or combination of filters.\nAdd a filter that fills the pixel space with <code>color</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nP  Grayscale tone the widget.\nP  Grayscale tone the widget.\nAdd a grayscale color effect to the filter, zero is the …\nP  Hue shift the widget colors.\nP  Hue shift the widget colors.\nAdd a filter that adds the <code>angle</code> to each color <code>hue</code> value.\nMatrix that does not alter any color.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nAdd a color inversion filter, zero does not invert, one …\nP  Inverts the colors of the widget.\nP  Inverts the colors of the widget.\nCompute a <code>RenderFilter</code> in the current <code>LAYOUT</code> context.\nP  Sets how the widget blends with the parent widget.\nP  Sets how the widget blends with the parent widget.\nReturns <code>true</code> if this filter is affected by the layout …\nNew default empty.\nNew <code>Filter::blur</code>.\nNew <code>Filter::brightness</code>.\nNew <code>Filter::color_matrix</code>.\nNew <code>Filter::contrast</code>.\nNew <code>Filter::drop_shadow</code>.\nNew <code>Filter::flood</code>.\nNew <code>Filter::grayscale</code>.\nNew <code>Filter::hue_rotate</code>.\nNew <code>Filter::invert</code>.\nNew <code>Filter::opacity</code>.\nNew <code>Filter::saturate</code>.\nNew <code>Filter::sepia</code>.\nP  Opacity/transparency of the widget.\nP  Opacity/transparency of the widget.\nAdd an opacity adjustment to the filter, zero is fully …\nP  Adjust the widget colors saturation.\nP  Adjust the widget colors saturation.\nAdd a saturation adjustment to the filter, zero fully …\nP  Sepia tone the widget.\nP  Sepia tone the widget.\nAdd a sepia color effect to the filter, zero is the input …\nCompute a <code>RenderFilter</code> if the filter is not affected by …\nLine defined by an angle. 0º is a line from …\nThe color values at the ends of the gradient vector fill …\nLength to the closest corner from the center point.\nLength to the closest edge from the center point.\nColor stop.\nMidway point between two colors.\nA color stop in a gradient.\nConic gradient.\nSpecifies how to draw the gradient outside the first and …\nLength to the farthest corner from the center point.\nLength to the farthest edge from the center point.\nGradient builder start.\nThe radial gradient radius length in both dimensions.\nThe radial gradient radius base length.\nA stop in a gradient.\nStops in a gradient.\nLine defined by two points. If the points are inside the …\nLinear gradient.\nThe angle or line that defines a linear gradient.\nRadial gradient.\nThe gradient is repeated alternating direction until the …\nGradient extend mode supported by the render.\nComputed <code>GradientStop</code>.\nThe gradient is repeated until the space is filled.\nTiled conic gradient.\nTiled linear gradient.\nTiled radial gradient.\nHow the base length is calculated. The base length is the …\nEnable circular radius.\nIf the gradient is circular or elliptical.\nEllipse radii relative from center to the closest corner.\nEllipse radii relative from center to the closest edge.\nColor at the offset.\nThe color.\nBuilds a conic gradient.\nStarts building a conic gradient with the angle and color …\n<code>farthest_corner(100.pct())</code>\nLast color stop.\nSets the extend mode of the linear gradient.\nSets the extend mode of the radial gradient.\nSets the extend mode of the conic gradient.\nEllipse radii relative from center to the farthest corner.\nEllipse radii relative from center to the farthest edge.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nEllipse fill the base radius.\nEllipse <code>GradientRadiusBase</code> and ellipse radius.\nEllipse <code>GradientRadius::farthest_corner</code>.\nEllipse <code>GradientRadius::farthest_corner</code>.\nConversion to <code>Length::Factor</code> and to radius.\nConversion to <code>Length::Factor</code> and to radius.\nConversion to <code>Length::DipF32</code> and to radius.\nConversion to <code>Length::Dip</code> and to radius.\nReturns the argument unchanged.\nConversion to <code>Length::Px</code> and to radius.\nConversion to <code>Length::Dip</code> and to radius.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConversion to positional color.\nConversion to <code>Length::Dip</code> color hint.\nConversion to <code>Length::Factor</code> color hint.\nConversion to <code>Length::Factor</code> color hint.\nReturns the argument unchanged.\nConversion to <code>Length::Dip</code> color hint.\nConversion to positional color.\nConversion to positional color.\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\nReturns the argument unchanged.\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_colors</code>\n<code>GradientStops::from_stops</code>\n<code>GradientStops::from_colors</code>\nGradient stops from colors spaced equally.\nGradient stops from color stops.\nGradient stops from colors forming stripes of same length.\nStarts building a gradient with the color stops.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEllipse fill the base radius.\nIf a calculated layout offset is positional.\nIf this color stop offset is resolved relative to the …\nCompute the radius in the current <code>LAYOUT</code> context.\nCompute a <code>RenderGradientStop</code> in the current <code>LAYOUT</code> context.\nComputes the linear gradient in the current <code>LAYOUT</code> context.\nComputes the layout for a radial gradient.\nNumber of stops.\nLinear interpolates for same axis kinds, or changes in one …\nBuilds a linear gradient.\nStarts building a linear gradient with the axis and color …\nOptional stops between start and end.\nNew color stop with a defined offset.\nGradients stops with two colors from <code>start</code> to <code>end</code>.\nNew color stop with a undefined offset.\nOffset in pixels.\nOffset point where the <code>color</code> is fully visible.\nBuilds a radial gradient.\nStarts building a radial gradient with the radius and …\nThe length of the rendered gradient stops.\nSets the extend mode to <code>ExtendMode::Reflect</code>.\nSets the extend mode to <code>ExtendMode::Reflect</code>.\nSets the extend mode to <code>ExtendMode::Reflect</code>.\nSets the extend mode to <code>ExtendMode::Repeat</code>.\nSets the extend mode to <code>ExtendMode::Repeat</code>.\nSets the extend mode to <code>ExtendMode::Repeat</code>.\nSet the alpha of all colors in the gradient.\nFirst color stop.\nCreates a <code>GradientStops</code> containing the arguments.\nContinue building a tiled linear gradient.\nContinue building a tiled radial gradient.\nContinue building a tiled radial gradient.\nSets the tile offset.\nSets the tile offset.\nSets the tile offset.\nContinue building a tiled linear gradient.\nContinue building a tiled radial gradient.\nContinue building a tiled radial gradient.\nSet the space between tiles.\nSet the space between tiles.\nSet the space between tiles.\n Alice Blue, <code>#F0F8FF</code>, <code>rgb(240, 248, 255)</code>.\n Antique White, <code>#FAEBD7</code>, <code>rgb(250, 235, 215)</code>.\n Aqua, <code>#00FFFF</code>, <code>rgb(0, 255, 255)</code>.\n Aquamarine, <code>#7FFFD4</code>, <code>rgb(127, 255, 212)</code>.\n Azure, <code>#F0FFFF</code>, <code>rgb(240, 255, 255)</code>.\n Beige, <code>#F5F5DC</code>, <code>rgb(245, 245, 220)</code>.\n Bisque, <code>#FFE4C4</code>, <code>rgb(255, 228, 196)</code>.\n Black, <code>#000000</code>, <code>rgb(0, 0, 0)</code>.\n Blanched Almond, <code>#FFEBCD</code>, <code>rgb(255, 235, 205)</code>.\n Blue, <code>#0000FF</code>, <code>rgb(0, 0, 255)</code>.\n Blue Violet, <code>#8A2BE2</code>, <code>rgb(138, 43, 226)</code>.\n Brown, <code>#A52A2A</code>, <code>rgb(165, 42, 42)</code>.\n Burly Wood, <code>#DEB887</code>, <code>rgb(222, 184, 135)</code>.\n Cadet Blue, <code>#5F9EA0</code>, <code>rgb(95, 158, 160)</code>.\n Chartreuse, <code>#7FFF00</code>, <code>rgb(127, 255, 0)</code>.\n Chocolate, <code>#D2691E</code>, <code>rgb(210, 105, 30)</code>.\n Coral, <code>#FF7F50</code>, <code>rgb(255, 127, 80)</code>.\n Cornflower Blue, <code>#6495ED</code>, <code>rgb(100, 149, 237)</code>.\n Cornsilk, <code>#FFF8DC</code>, <code>rgb(255, 248, 220)</code>.\n Crimson, <code>#DC143C</code>, <code>rgb(220, 20, 60)</code>.\n Cyan, <code>#00FFFF</code>, <code>rgb(0, 255, 255)</code>.\n Dark Blue, <code>#00008B</code>, <code>rgb(0, 0, 139)</code>.\n Dark Cyan, <code>#008B8B</code>, <code>rgb(0, 139, 139)</code>.\n Dark Goldenrod, <code>#B8860B</code>, <code>rgb(184, 134, 11)</code>.\n Dark Gray, <code>#A9A9A9</code>, <code>rgb(169, 169, 169)</code>.\n Dark Green, <code>#006400</code>, <code>rgb(0, 100, 0)</code>.\n Dark Khaki, <code>#BDB76B</code>, <code>rgb(189, 183, 107)</code>.\n Dark Magenta, <code>#8B008B</code>, <code>rgb(139, 0, 139)</code>.\n Dark Olive Green, <code>#556B2F</code>, <code>rgb(85, 107, 47)</code>.\n Dark Orange, <code>#FF8C00</code>, <code>rgb(255, 140, 0)</code>.\n Dark Orchid, <code>#9932CC</code>, <code>rgb(153, 50, 204)</code>.\n Dark Red, <code>#8B0000</code>, <code>rgb(139, 0, 0)</code>.\n Dark Salmon, <code>#E9967A</code>, <code>rgb(233, 150, 122)</code>.\n Dark Sea Green, <code>#8FBC8F</code>, <code>rgb(143, 188, 143)</code>.\n Dark Slate Blue, <code>#483D8B</code>, <code>rgb(72, 61, 139)</code>.\n Dark Slate Gray, <code>#2F4F4F</code>, <code>rgb(47, 79, 79)</code>.\n Dark Turquoise, <code>#00CED1</code>, <code>rgb(0, 206, 209)</code>.\n Dark Violet, <code>#9400D3</code>, <code>rgb(148, 0, 211)</code>.\n Deep Pink, <code>#FF1493</code>, <code>rgb(255, 20, 147)</code>.\n Deep Sky Blue, <code>#00BFFF</code>, <code>rgb(0, 191, 255)</code>.\n Dim Gray, <code>#696969</code>, <code>rgb(105, 105, 105)</code>.\n Dodger Blue, <code>#1E90FF</code>, <code>rgb(30, 144, 255)</code>.\n Fire Brick, <code>#B22222</code>, <code>rgb(178, 34, 34)</code>.\n Floral White, <code>#FFFAF0</code>, <code>rgb(255, 250, 240)</code>.\n Forest Green, <code>#228B22</code>, <code>rgb(34, 139, 34)</code>.\n Fuchsia, <code>#FF00FF</code>, <code>rgb(255, 0, 255)</code>.\n Gainsboro, <code>#DCDCDC</code>, <code>rgb(220, 220, 220)</code>.\n Ghost White, <code>#F8F8FF</code>, <code>rgb(248, 248, 255)</code>.\n Gold, <code>#FFD700</code>, <code>rgb(255, 215, 0)</code>.\n Goldenrod, <code>#DAA520</code>, <code>rgb(218, 165, 32)</code>.\n Gray, <code>#808080</code>, <code>rgb(128, 128, 128)</code>.\n Green, <code>#008000</code>, <code>rgb(0, 128, 0)</code>.\n Green Yellow, <code>#ADFF2F</code>, <code>rgb(173, 255, 47)</code>.\n Honeydew, <code>#F0FFF0</code>, <code>rgb(240, 255, 240)</code>.\n Hot Pink, <code>#FF69B4</code>, <code>rgb(255, 105, 180)</code>.\n Indian Red, <code>#CD5C5C</code>, <code>rgb(205, 92, 92)</code>.\n Indigo, <code>#4B0082</code>, <code>rgb(75, 0, 130)</code>.\n Ivory, <code>#FFFFF0</code>, <code>rgb(255, 255, 240)</code>.\n Khaki, <code>#F0E68C</code>, <code>rgb(240, 230, 140)</code>.\n Lavender, <code>#E6E6FA</code>, <code>rgb(230, 230, 250)</code>.\n Lavender Blush, <code>#FFF0F5</code>, <code>rgb(255, 240, 245)</code>.\n Lawn Green, <code>#7CFC00</code>, <code>rgb(124, 252, 0)</code>.\n Lemon Chiffon, <code>#FFFACD</code>, <code>rgb(255, 250, 205)</code>.\n Light Blue, <code>#ADD8E6</code>, <code>rgb(173, 216, 230)</code>.\n Light Coral, <code>#F08080</code>, <code>rgb(240, 128, 128)</code>.\n Light Cyan, <code>#E0FFFF</code>, <code>rgb(224, 255, 255)</code>.\n Light Goldenrod Yellow, <code>#FAFAD2</code>, <code>rgb(250, 250, 210)</code>.\n Light Gray, <code>#D3D3D3</code>, <code>rgb(211, 211, 211)</code>.\n Light Green, <code>#90EE90</code>, <code>rgb(144, 238, 144)</code>.\n Light Pink, <code>#FFB6C1</code>, <code>rgb(255, 182, 193)</code>.\n Light Salmon, <code>#FFA07A</code>, <code>rgb(255, 160, 122)</code>.\n Light Sea Green, <code>#20B2AA</code>, <code>rgb(32, 178, 170)</code>.\n Light Sky Blue, <code>#87CEFA</code>, <code>rgb(135, 206, 250)</code>.\n Light Slate Gray, <code>#778899</code>, <code>rgb(119, 136, 153)</code>.\n Light Steel Blue, <code>#B0C4DE</code>, <code>rgb(176, 196, 222)</code>.\n Light Yellow, <code>#FFFFE0</code>, <code>rgb(255, 255, 224)</code>.\n Lime, <code>#00FF00</code>, <code>rgb(0, 255, 0)</code>.\n Lime Green, <code>#32CD32</code>, <code>rgb(50, 205, 50)</code>.\n Linen, <code>#FAF0E6</code>, <code>rgb(250, 240, 230)</code>.\n Magenta, <code>#FF00FF</code>, <code>rgb(255, 0, 255)</code>.\n Maroon, <code>#800000</code>, <code>rgb(128, 0, 0)</code>.\n Medium Aquamarine, <code>#66CDAA</code>, <code>rgb(102, 205, 170)</code>.\n Medium Blue, <code>#0000CD</code>, <code>rgb(0, 0, 205)</code>.\n Medium Orchid, <code>#BA55D3</code>, <code>rgb(186, 85, 211)</code>.\n Medium Purple, <code>#9370DB</code>, <code>rgb(147, 112, 219)</code>.\n Medium Sea Green, <code>#3CB371</code>, <code>rgb(60, 179, 113)</code>.\n Medium Slate Blue, <code>#7B68EE</code>, <code>rgb(123, 104, 238)</code>.\n Medium Spring Green, <code>#00FA9A</code>, <code>rgb(0, 250, 154)</code>.\n Medium Turquoise, <code>#48D1CC</code>, <code>rgb(72, 209, 204)</code>.\n Medium Violet Red, <code>#C71585</code>, <code>rgb(199, 21, 133)</code>.\n Midnight Blue, <code>#191970</code>, <code>rgb(25, 25, 112)</code>.\n Mint Cream, <code>#F5FFFA</code>, <code>rgb(245, 255, 250)</code>.\n Misty Rose, <code>#FFE4E1</code>, <code>rgb(255, 228, 225)</code>.\n Moccasin, <code>#FFE4B5</code>, <code>rgb(255, 228, 181)</code>.\n Navajo White, <code>#FFDEAD</code>, <code>rgb(255, 222, 173)</code>.\n Navy, <code>#000080</code>, <code>rgb(0, 0, 128)</code>.\n Old Lace, <code>#FDF5E6</code>, <code>rgb(253, 245, 230)</code>.\n Olive, <code>#808000</code>, <code>rgb(128, 128, 0)</code>.\n Olive Drab, <code>#6B8E23</code>, <code>rgb(107, 142, 35)</code>.\n Orange, <code>#FFA500</code>, <code>rgb(255, 165, 0)</code>.\n Orange Red, <code>#FF4500</code>, <code>rgb(255, 69, 0)</code>.\n Orchid, <code>#DA70D6</code>, <code>rgb(218, 112, 214)</code>.\n Pale Goldenrod, <code>#EEE8AA</code>, <code>rgb(238, 232, 170)</code>.\n Pale Green, <code>#98FB98</code>, <code>rgb(152, 251, 152)</code>.\n Pale Turquoise, <code>#AFEEEE</code>, <code>rgb(175, 238, 238)</code>.\n Pale Violet Red, <code>#DB7093</code>, <code>rgb(219, 112, 147)</code>.\n Papaya Whip, <code>#FFEFD5</code>, <code>rgb(255, 239, 213)</code>.\n Peach Puff, <code>#FFDAB9</code>, <code>rgb(255, 218, 185)</code>.\n Peru, <code>#CD853F</code>, <code>rgb(205, 133, 63)</code>.\n Pink, <code>#FFC0CB</code>, <code>rgb(255, 192, 203)</code>.\n Plum, <code>#DDA0DD</code>, <code>rgb(221, 160, 221)</code>.\n Powder Blue, <code>#B0E0E6</code>, <code>rgb(176, 224, 230)</code>.\n Purple, <code>#800080</code>, <code>rgb(128, 0, 128)</code>.\n Red, <code>#FF0000</code>, <code>rgb(255, 0, 0)</code>.\n Rosy Brown, <code>#BC8F8F</code>, <code>rgb(188, 143, 143)</code>.\n Royal Blue, <code>#4169E1</code>, <code>rgb(65, 105, 225)</code>.\n Saddle Brown, <code>#8B4513</code>, <code>rgb(139, 69, 19)</code>.\n Salmon, <code>#FA8072</code>, <code>rgb(250, 128, 114)</code>.\n Sandy Brown, <code>#F4A460</code>, <code>rgb(244, 164, 96)</code>.\n Seashell, <code>#FFF5EE</code>, <code>rgb(255, 245, 238)</code>.\n Sea Green, <code>#2E8B57</code>, <code>rgb(46, 139, 87)</code>.\n Sienna, <code>#A0522D</code>, <code>rgb(160, 82, 45)</code>.\n Silver, <code>#C0C0C0</code>, <code>rgb(192, 192, 192)</code>.\n Sky Blue, <code>#87CEEB</code>, <code>rgb(135, 206, 235)</code>.\n Slate Blue, <code>#6A5ACD</code>, <code>rgb(106, 90, 205)</code>.\n Slate Gray, <code>#708090</code>, <code>rgb(112, 128, 144)</code>.\n Snow, <code>#FFFAFA</code>, <code>rgb(255, 250, 250)</code>.\n Spring Green, <code>#00FF7F</code>, <code>rgb(0, 255, 127)</code>.\n Steel Blue, <code>#4682B4</code>, <code>rgb(70, 130, 180)</code>.\n Tan, <code>#D2B48C</code>, <code>rgb(210, 180, 140)</code>.\n Teal, <code>#008080</code>, <code>rgb(0, 128, 128)</code>.\n Thistle, <code>#D8BFD8</code>, <code>rgb(216, 191, 216)</code>.\n Tomato, <code>#FF6347</code>, <code>rgb(255, 99, 71)</code>.\n Turquoise, <code>#40E0D0</code>, <code>rgb(64, 224, 208)</code>.\n Violet, <code>#EE82EE</code>, <code>rgb(238, 130, 238)</code>.\n Wheat, <code>#F5DEB3</code>, <code>rgb(245, 222, 179)</code>.\n White, <code>#FFFFFF</code>, <code>rgb(255, 255, 255)</code>.\n White Smoke, <code>#F5F5F5</code>, <code>rgb(245, 245, 245)</code>.\n Yellow, <code>#FFFF00</code>, <code>rgb(255, 255, 0)</code>.\n Yellow Green, <code>#9ACD32</code>, <code>rgb(154, 205, 50)</code>.\nRepresents one or more config sources behind a dynamic …\nRepresents the app main config.\nRepresents one or more config sources.\nUnique key to a config entry.\nRepresents the current IO status of the config.\nMarker trait for types that can stored in a <code>Config</code>.\nDon’t save nor restore state.\nSave and restore state.\nRepresents a copy-on-write config source that wraps two …\nReset controls of a <code>FallbackConfig</code>.\nRepresents a config source that synchronizes with a JSON …\nConfig last load failed.\nConfig is loaded.\nConfig is loading.\nMemory only config.\nRepresents any entry type in a config.\nConfig wrapper that only provides read-only variables from …\nRepresents a config source that synchronizes with a RON …\nConfig last save failed.\nWindow or widget persistence config.\nConfig is saving.\nRepresents a config source that can swap its backing …\nRepresents multiple config sources that are matched by key.\nRepresents a config source that synchronizes with a TOML …\nRepresents a config source that synchronizes with a YAML …\nReturns a read-only var that is <code>true</code> when the <code>key</code> has an …\nReturns a read-only var that is <code>true</code> when the <code>key</code> has an …\nClone a reference to the config.\nGets a read-only variable that tracks if an entry for the …\nEnabled, no key, delay 1s.\nDeserialize from the raw config format.\nDefault, enabled, no key.\nGets the config key if is enabled and can enable on the …\nErrors list.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>true</code> to default config and <code>false</code> to <code>None</code>.\nReturns the argument unchanged.\nGets a variable that is bound to the config <code>key</code>.\nGets a variable that is bound to the config <code>key</code>.\nGets a weak typed variable to the config <code>key</code>.\nGet raw config and setup a bidi binding that converts to …\nGets a variable that is bound to the config <code>key</code>, the <code>value</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf status is load or save errors.\nIf status is not loading nor saving.\nLoad the config.\nReplace the config source.\nCleanup and flush RAM caches.\nmerge all <code>status</code>.\nNew from the read-write config and read-only fallback.\nNew with <code>MemoryConfig</code> backend.\nNew reading from <code>cfg</code>.\nNew default empty.\nPush a config case on the switch.\nPush a config case matched by a key <code>prefix</code>.\nRemoves the <code>key</code> from the backing storage.\nRemoves the <code>key</code> from the config and updates all active …\nRemoves the <code>key</code> from the config and updates all active …\nHelper node for implementing widgets save.\nSerialize to the raw config format.\nSettings are the config the user can directly edit, this …\nGets a read-only variable that represents the IO status of …\nGets a read-only variable that represents the IO status of …\nWait until <code>status</code> is idle (not loading nor saving).\nPush the config and return.\nPush the config and return.\nConfig key that identifies the window or widget.\nSetting categories builder.\nSettings category.\nCategory entry builder.\nUnique ID of a <code>Category</code>.\nSettings metadata service.\nRepresents the <strong>open settings</strong> action.\nSetting entry.\nSetting entry builder.\nSettings builder.\nGets if there are any setting matched by <code>filter</code>.\nGets a variable that indicates the current setting value …\nSelect and sort categories matched by <code>filter</code>.\nSettings category.\nSettings category.\nSet the value variable from a different config.\nCount how many settings match the <code>filter</code>.\nUse a <code>default</code> value to reset the settings.\nShort help text.\nSet the setting short help text.\nSettings editor widget.\nCalls <code>builder</code> for the key and category if it is not …\nCalls <code>builder</code> for the id if it is not filtered by the view …\nSet the custom metadata flag.\nSet the custom metadata flag.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSelect and sort settings matched by <code>filter</code>.\nUnique ID.\nUnique ID.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe config edited by this setting.\nThe config edited by this setting.\nCustom setting metadata.\nCustom setting metadata.\nCustom category metadata.\nCustom category metadata.\nDisplay name.\nSet the setting name.\nSet the category name.\nDisplay name.\nP Preview <code>on_settings</code> command.\nP Preview <code>on_settings</code> command.\nP  On settings command.\nP  On settings command.\nPosition of the setting in a list of settings.\nSet the setting order number.\nSet the position of the category in a list of categories.\nPosition of the category in a list of categories.\nRegister a closure that provides settings metadata.\nRegister a closure that provides category metadata.\nReset the setting value.\nUse a <code>FallbackConfigReset</code> to reset the settings.\nGets if the setting should be included in the search and …\nSet the custom metadata value.\nSet the custom metadata value.\nSort categories and settings.\nSort <code>categories</code>.\nSort <code>settings</code>.\nCategory from an ID only, no other metadata.\nConfig value.\nSet the value variable from <code>CONFIG</code>.\nConfig value, strongly typed.\nIf the <code>value</code> is set to an actual config variable.\nConfig value type.\nArguments for a widget function that makes a list of …\nArguments for a widget function that makes a category …\nArguments for a widget function that makes a category item …\nArguments for a widget function that makes a setting …\nExtends <code>SettingBuilder</code> to set custom editor metadata.\nArguments for a widget function that makes a settings for …\nExtends <code>SETTINGS</code> to provide contextual information in an …\nW  Settings editor widget.\nW  Settings editor widget.\nP  Widget function that converts <code>CategoriesListArgs</code> to a …\nP  Widget function that converts <code>CategoriesListArgs</code> to a …\nP  Widget function that converts <code>CategoriesListArgs</code> to a …\nThe category.\nThe category.\nP  Widget function that converts <code>CategoryHeaderArgs</code> to a …\nP  Widget function that converts <code>CategoryHeaderArgs</code> to a …\nP  Widget function that converts <code>CategoryHeaderArgs</code> to a …\nP  Widget function that converts <code>CategoryItemArgs</code> to a …\nP  Widget function that converts <code>CategoryItemArgs</code> to a …\nP  Widget function that converts <code>CategoryItemArgs</code> to a …\nThe setting value editor.\nCustom editor for the setting.\nGets a read-write context var that tracks the search text.\nGets a read-write context var that tracks the selected …\nGets a read-only context var that tracks the <code>Setting</code> entry …\nGets a read-only context var that tracks the current …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe category header.\nIndex on the list.\nIndex of the setting on the list.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe item views.\nThe items.\nNew args.\nNew args.\nNew args.\nNew args.\nNew args.\nP  Widget that defines the editor layout, bringing …\nP  Save and restore settings search and selected category.\nThe setting.\nP  Widget function that converts <code>SettingArgs</code> to a setting …\nP  Widget function that converts <code>SettingArgs</code> to a setting …\nP  Widget function that converts <code>SettingArgs</code> to a setting …\nP  Widget function that converts <code>SettingsArgs</code> to a …\nP  Widget function that converts <code>SettingsArgs</code> to a …\nP  Widget function that converts <code>SettingsArgs</code> to a …\nP  Widget function that converts <code>SettingsSearchArgs</code> to a …\nStart building a new instance.\nGets the widget type info.\nInsert node below the child.\nPlacement of a node inserted by the <code>child_insert</code> property.\nW  Base container.\nW  Base container.\nInsert node to the right of child in <code>LayoutDirection::LTR</code> …\nInsert node to the left of child.\nInsert node over the child.\nInsert node to the right of child.\nInsert node to the left of child in <code>LayoutDirection::LTR</code> …\nInsert node above the child.\nInsert node under the child.\nP  The widget’s child.\nP  The widget’s child.\nP  The widget’s child.\nP  Aligns the widget <em>content</em> within the available space.\nP  Insert <code>node</code> below the widget’s child.\nP  Insert <code>node</code> below the widget’s child.\nP  Insert <code>node</code> below the widget’s child.\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> to the left of the widget’s child.\nP  Insert <code>node</code> to the left of the widget’s child.\nP  Insert <code>node</code> to the left of the widget’s child.\nP  Insert <code>node</code> below the widget’s child, outside of the …\nP  Insert <code>node</code> below the widget’s child, outside of the …\nP  Insert <code>node</code> below the widget’s child, outside of the …\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> to the right of the widget’s child in LTR …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> in the <code>placement</code> relative to the widget’s …\nP  Insert <code>node</code> to the left of the widget’s child, …\nP  Insert <code>node</code> to the left of the widget’s child, …\nP  Insert <code>node</code> to the left of the widget’s child, …\nP  Insert <code>node</code> over the widget’s child, not affected by …\nP  Insert <code>node</code> to the right of the widget’s child, …\nP  Insert <code>node</code> to the right of the widget’s child, …\nP  Insert <code>node</code> to the right of the widget’s child, …\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> above the widget’s child, outside of the …\nP  Insert <code>node</code> above the widget’s child, outside of the …\nP  Insert <code>node</code> above the widget’s child, outside of the …\nP  Insert <code>node</code> under the widget’s child, not affected by …\nP  Insert <code>node</code> over the widget’s child.\nP  Insert <code>node</code> over the widget’s child.\nP  Insert <code>node</code> over the widget’s child.\nP  Insert <code>node</code> to the right of the widget’s child.\nP  Insert <code>node</code> to the right of the widget’s child.\nP  Insert <code>node</code> to the right of the widget’s child.\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> to the left of the widget’s child in LTR …\nP  Insert <code>node</code> above the widget’s child.\nP  Insert <code>node</code> above the widget’s child.\nP  Insert <code>node</code> above the widget’s child.\nP  Insert <code>node</code> under the widget’s child.\nP  Insert <code>node</code> under the widget’s child.\nP  Insert <code>node</code> under the widget’s child.\nP  Content overflow clipping.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInserted node is to the left or right of child.\nInserted node is above or bellow the child node.\nInserted node is over or under the child node.\nP  Margin space around the content of a widget.\nConvert <code>ChildInsert::Start</code> and <code>ChildInsert::End</code> to the …\nStart building a new instance.\nGets the widget type info.\nData context and validation.\nRepresents an annotation set in a data context.\nHandle for a <code>DataNote</code> in a context.\nClassifies the kind of information conveyed by a <code>DataNote</code>.\nRepresents a <code>DataNote</code> value.\nRepresents the data notes set in a context.\nEntry represents a data validation error.\nEntry represents useful information.\nEntry represents a data validation warning.\nInsert a data note in the current context.\n/// Access to <code>dyn Any</code> methods.\nRemove dropped notes.\nClone notes of the same <code>level</code>.\nP  Data context.\nP  Data context.\nP  Insert a data <code>ERROR</code> note in the context.\nP  Insert a data <code>ERROR</code> note in the context.\nP  Set the data note <code>ERROR</code> color.\nP  Set the data note <code>ERROR</code> color.\nP  Insert a data <code>INFO</code> note in the context.\nP  Insert a data <code>INFO</code> note in the context.\nP  Set the data note <code>INFO</code> color.\nP  Set the data note <code>INFO</code> color.\nP  Insert a data note in the context.\nP  Insert a data note in the context.\nP  Insert a data <code>WARN</code> note in the context.\nP  Insert a data <code>WARN</code> note in the context.\nP  Set the data note <code>WARN</code> color.\nP  Set the data note <code>WARN</code> color.\nNew dummy handle.\nRead-only variable that is the best color for <code>ERROR</code> notes …\nP  Extend the data note level colors, the <code>colors</code> extend …\nP  Extend the data note level colors, the <code>colors</code> extend …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet context data of type <code>T</code> if the context data is set with …\nGets the current context data.\nP  Get all <code>ERROR</code> data notes set on the context.\nP  Get all <code>ERROR</code> data notes set on the context.\nP  Write all <code>ERROR</code> data notes set on the context to a text.\nP  Write all <code>ERROR</code> data notes set on the context to a text.\nP  Get all <code>INFO</code> data notes set on the context.\nP  Get all <code>INFO</code> data notes set on the context.\nP  Write all <code>INFO</code> data notes set on the context to a text.\nP  Write all <code>INFO</code> data notes set on the context to a text.\nP  Get all data notes set on the context.\nP  Get all data notes set on the context.\nP  Gets all the notes of highest data level set on the …\nP  Gets all the notes of highest data level set on the …\nP  Get all <code>WARN</code> data notes set on the context.\nP  Get all <code>WARN</code> data notes set on the context.\nP  Write all <code>WARN</code> data notes set on the context to a text.\nP  Write all <code>WARN</code> data notes set on the context to a text.\nP  Gets if any <code>ERROR</code> data notes are set on the context.\nP  Gets if any <code>ERROR</code> data notes are set on the context.\nP  Gets if any <code>INFO</code> data notes are set on the context.\nP  Gets if any <code>INFO</code> data notes are set on the context.\nP  Gets if any data notes are set on the context.\nP  Gets if any data notes are set on the context.\nP  Gets if any <code>WARN</code> data notes are set on the context.\nP  Gets if any <code>WARN</code> data notes are set on the context.\nRead-only variable that is the best color for <code>INFO</code> notes …\nInsert an <code>INFO</code> note in the current context.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nInsert an <code>ERROR</code> note in the current context.\nIf this is a dummy handle.\nAnnotation level.\nWrite all notes of the level to a text.\nGets the level name, if it is one of the <code>const</code> levels.\nNew note.\nRead-only variable that is the best color for the note …\nP  Sets the data note level colors, the parent colors are …\nP  Sets the data note level colors, the parent colors are …\nRequire context data of type <code>T</code>.\nIf the note is still valid.\nWidget that set the annotation.\nAnnotation value.\nInsert a <code>WARN</code> note in the current context.\nRead-only variable that is the best color for <code>WARN</code> notes …\nNode that inserts a data note color in <code>DATA_NOTE_COLORS_VAR</code>…\nW  Dynamically presents a data variable.\nW  Dynamically presents a data variable.\nArguments for the <code>DataView!</code> widget.\nP  Content alignment.\nP  Content overflow clipping.\nReference the data variable.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet the current data value if <code>view_is_nil</code> or <code>data</code> is new.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Spacing around content, inside the border.\nReplace the child node.\nSet the view to <code>NilUiNode</code>.\nP  The view generator.\nIf the current child is nil node.\nStart building a new instance.\nGets the widget type info.\n<code>DIALOG.ask</code>\nW  Question style.\nW  Question style.\n<code>DIALOG.confirm</code>\nUser did not select any path.\nW  Confirmation style.\nW  Confirmation style.\nDialog service.\nW  Dialog default style.\nW  Dialog default style.\nW  A modal dialog overlay container.\nW  A modal dialog overlay container.\nArguments for <code>button_fn</code>.\nDialog kind options.\n<code>DIALOG.error</code>\nFailed to show the dialog.\nW  Dialog error style.\nW  Dialog error style.\nAll file system dialogs.\nFile dialog filters builder.\nResponse to a message dialog.\n<code>DIALOG.info</code>\nW  Dialog info style.\nW  Dialog info style.\nAll message dialogs.\n<code>DIALOG.open_file</code>\n<code>DIALOG.open_files</code>\nDialog response.\nResponse labels.\n<code>DIALOG.save_file</code>\n<code>DIALOG.select_folder</code>\n<code>DIALOG.select_folders</code>\nSelected paths.\n<code>DIALOG.warn</code>\nW  Dialog warn style.\nW  Dialog warn style.\nGet a flags value with all known bits set.\nShows a question dialog with “No” and “Yes” …\nModal dialog parent widget that fills the window.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nGets the filter text.\nP  Dialog button generator.\n“cancel”\n“Cancel”, “Ok”\n“close”\n“Close”\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nShows a question dialog with “Cancel” and “Ok” …\nWhether all set bits in a source flags value are also set …\nP  Dialog content widget.\nOpen the custom <code>dialog</code>.\nP  Dialog response when closed without setting a response.\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nShow an error dialog with “Ok” button.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nP  Dialog icon widget.\nShow an info dialog with “Ok” button.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGets the last selected path, or <code>None</code> for cancel.\nGets the selected paths, or empty for cancel.\nWhether all known bits in this flags value are set.\nP  If a respond close was requested for this dialog and it …\nWhether all bits in this flags value are unset.\nIf the button is the last entry on the responses list.\nYield a set of contained flags values.\nIterate over filter entries and patterns.\nYield a set of contained named flags values.\nResponse button label.\nResponse identifying name.\nP  Defines what native dialogs are used by dialogs opened …\nP  Defines what native dialogs are used by dialogs opened …\nVariable that defines what native dialogs are used when …\nNew args.\nNew from name and label.\nnew with first response.\nNew default (empty).\n“no”\n“No”, “Yes”\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\n“ok”\n“Ok”\nP  An attempt to close the dialog was made without setting …\nShows a native file picker dialog configured to select one …\nShows a native file picker dialog configured to select one …\nPush a filter entry.\nThe intersection of a source flags value with the …\nClose the contextual dialog with the `response``.\nTry to close the contextual dialog without directly …\nThe response that must be represented by the button.\nP  Dialog responses.\nShows a native file picker dialog configured to select one …\nShows a native file picker dialog configured to select one …\nShows a native file picker dialog configured to select one …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nP  Extends or replaces the widget style.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nP  Dialog title widget.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nShow a warning dialog with “Ok” button.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nWith response.\n“yes”\nW  Dialog backdrop default style.\nW  Dialog backdrop default style.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nStart building a new instance.\nGets the widget type info.\nBinary encoded data.\nIndicates that the dragged data will be copied from its …\nDrag &amp; drop service.\nDrag&amp;drop gesture started from the draggable widget has …\nDrag&amp;drop enter or exit a drop target widget.\nDrag&amp;drop is dragging over the target widget.\nDrag&amp;drop started dragging a draggable widget.\nDrag&amp;drop action finished over some drop target widget.\nDrag&amp;drop data payload.\nDrag&amp;drop drop effect on the data source.\nArguments for <code>DRAG_END_EVENT</code>.\nRepresents dragging data.\nArguments for <code>DRAG_HOVERED_EVENT</code>.\n<code>DRAG_MOVE_EVENT</code> arguments.\nArguments for <code>DRAG_START_EVENT</code>.\nArguments for <code>DROP_EVENT</code>.\nIndicates that some form of relationship or connection …\nIndicates that the dragged data will be moved from its …\nFile or directory path.\nText encoded data.\nWeak <code>DragHandle</code>.\nGet a flags value with all known bits set.\nDrop effects that the drag source allows.\nStop propagation and set the <code>effect</code> that was applied to …\nEffect applied by the drop target on the data.\nPanics if the arguments are invalid.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nDrops the handle and forces operation the cancel.\nPositions of the cursor in between the previous event and …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nGets the <code>DRAG_DROP.dragging_data</code>.\nDrag&amp;drop data payload.\nThe <code>target</code>.\nThe intersection of a source flags value with the …\nCreate a weak handle.\nStart dragging <code>data</code>.\nP  If this widget can be dragged in a drag&amp;drop operation.\nP  If this widget can be dragged in a drag&amp;drop operation.\nAll data current dragging.\nNew handle to nothing.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nHit-test result for the cursor point in the window.\nHit-test result for the cursor point in the window.\nHit-test result for the cursor point in the window.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nIf another handle has called <code>cancel</code>.\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered, but now is.\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered or was enabled, …\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered or was …\nReturns <code>true</code> if the <code>WIDGET</code> was hovered, but now isn’t.\nReturns <code>true</code> if the <code>WIDGET</code> was hovered and disabled, but …\nReturns <code>true</code> if the <code>WIDGET</code> was hovered and enabled, but …\nWhether all bits in this flags value are unset.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>target</code>.\nIf another handle has called <code>perm</code>.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nCount effects flagged.\nNew weak handle that does not upgrade.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nP  Draggable widget stopped dragging.\nP  Draggable widget stopped dragging.\nP  Dragging cursor entered the widget area and the widget …\nP  Dragging cursor entered the widget area and the widget …\nP  Dragging cursor entered or exited the widget area and …\nP  Dragging cursor entered or exited the widget area and …\nP  Dragging cursor exited the widget area and the widget …\nP  Dragging cursor exited the widget area and the widget …\nP  Draggable widget started dragging.\nP  Draggable widget started dragging.\nP  Dragging cursor dropped data in the widget area and the …\nP  Dragging cursor dropped data in the widget area and the …\nP Preview <code>on_drag_end</code> event.\nP Preview <code>on_drag_end</code> event.\nP Preview <code>on_drag_enter</code> event.\nP Preview <code>on_drag_enter</code> event.\nP Preview <code>on_drag_hovered</code> event.\nP Preview <code>on_drag_hovered</code> event.\nP Preview <code>on_drag_leave</code> event.\nP Preview <code>on_drag_leave</code> event.\nP Preview <code>on_drag_start</code> event.\nP Preview <code>on_drag_start</code> event.\nP Preview <code>on_drop</code> event.\nP Preview <code>on_drop</code> event.\nDrops the handle but does <strong>not</strong> cancel the drag operation.\nPosition of the cursor in the window’s content area.\nPosition of the cursor in the window’s content area.\nPosition of the cursor in the window’s content area.\nPrevious hovered target.\nThe intersection of a source flags value with the …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nHovered target of the drag&amp;drop gesture.\nNew hovered target.\nFull path to the top-most hit in <code>hits</code>.\nDraggable widget that has started dragging.\nDraggable widget that was dragging.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nNew args from values that convert into the argument types.\nArguments for event that happened now (<code>INSTANT.now</code>).\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGets the strong handle if it is still subscribed.\nThe <code>applied</code> field can only be empty or only have a single …\nStopped dragging without dropping on a valid drop target.\nReturns <code>true</code> if the widget was disabled in <code>prev_target</code>.\nData was dropped on a valid target.\nReturns <code>true</code> if the widget was enabled in <code>prev_target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>prev_target</code>.\nId of window that received the event.\nData.\nData.\nMIME type of the data.\nMIME type of the data.\nMetadata about the app and main crate.\nYield requests after this are ignored.\nArguments for <code>on_process_exit</code> handlers.\nArguments for <code>on_process_start</code> handlers.\nGets metadata about the application.\npackage.metadata.zng.about.app or <code>pkg_name</code>\nGets a path relative to the package binaries.\nGets a path relative to the cache directory for the app.\nRemoves all cache files possible.\nExit code that will be used.\nGets a path relative to the user config directory for the …\npackage.name in snake_case\npackage.description\nTerminates the current process with the specified exit …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf package.metadata.zng.about is set on the Cargo.toml …\npackage.homepage\nInits process metadata, calls process start handlers and …\nInits process metadata, calls process start handlers and …\nSets a custom path for the “built resources” override …\nSets a custom <code>cache</code> path.\nSets a custom <code>original_config</code> path.\nSets a custom <code>res</code> path.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\npackage.license\nSave <code>new_path</code> as the new cache path and make a best effort …\nCopies all config to <code>new_path</code> and saves it as the config …\nNumber of start handlers yet to run.\nRegister a <code>handler</code> to run once when the current process …\nRegister a <code>FnOnce(&amp;ProcessStartArgs)</code> closure to be called …\npackage.metadata.zng.about.org or the first <code>pkg_authors</code>\nParse a Cargo.toml string.\npackage.authors\npackage.name\nGets a process runtime name.\npackage.metadata.zng.about.qualifier\nGets a path relative to the package resources.\npackage.version\nNumber of times this handler has yielded.\nLet other process start handlers run first.\nRepresents an <code>Event</code> without the args type.\nMethods of <code>EventArgs</code> that are object safe.\nDefault scope, this is the scope of command types declared …\nArguments for <code>Command::on_event</code> handler closure.\nIdentifies a command event.\nEvent args for command events.\nA handle to a <code>Command</code> subscription.\nAdds the <code>info</code> command metadata.\nAccess to metadata of a command.\nRead-write command metadata variable.\nUnique identifier of a command metadata state variable.\nAdds the <code>name</code> command metadata.\nRepresents a reference counted <code>dyn Any</code> object parameter …\nRepresents the scope of a <code>Command</code>.\nApp events and commands service.\nRepresents an event.\n<code>Event&lt;A&gt;</code> arguments.\nRepresents an event widget subscription, handler callback …\nRepresents a collection of event handles.\nEvent propagation handle associated with one or multiple …\nAn event channel receiver.\nScope of a widget.\nScope of a window.\nThe command args.\nAccess to <code>dyn Any</code> methods.\nGets the event without the args type.\nDrop all handles.\nClone the event into a type erased box.\nThe command.\n Declares new <code>Command</code> static items.\n Declare one or more command event properties.\nCommands that had handles generated in this app.\nInsert all targets of this event on the <code>UpdateDeliveryList</code>.\nBroadcast to all widget subscribers for <code>CommandScope::App</code>. …\nReturns <code>param</code> if is not <code>enabled</code>.\nGets a typed reference to the parameter if it is of type <code>T</code>.\nNew handle not connected to any command.\nEmpty collection.\nHandle to no event.\nIf the command handle was enabled when the command …\nReturns <code>param</code> if is <code>enabled</code>.\nEvent that sends to this receiver.\nUnderlying event that represents this command in any scope.\n Declares new <code>Event&lt;A&gt;</code> static items.\n Declares new <code>EventArgs</code> types.\n Declare one or more event properties.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWidget scope.\nWidget scope.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates an ID from a raw value.\nCreates an ID from a <code>sequential</code> number.\nClone a meta value identified by a <code>StateId</code> if it is set.\nRetrieve the underlying value.\nClone a meta value identified by a <code>StateId</code>.\nClone a meta value identified by a <code>StateId</code>.\nClone a meta variable identified by a <code>CommandMetaVarId</code>, if …\nClone a meta variable identified by a <code>CommandMetaVarId</code>.\nClone a meta variable identified by a <code>CommandMetaVarId</code>.\nCalls <code>handler</code> and stops propagation if propagation is …\nCalls <code>handler</code> if the update is for this event and …\nCalls <code>handler</code> if the update is for this event and …\nThe command handle held by the event handler.\nCall <code>handler</code> if propagation is not stopped and the command …\nReturns <code>true</code> if the update is for this event.\nReturns <code>true</code> if the update is for this command and scope.\nReturns <code>true</code> if the update is for this event.\nGets a variable that tracks if this command has any …\nGets if the command has handlers without creating a …\nReturns <code>true</code> if any app level callback is registered for …\nReturns <code>true</code> if any app level callback is registered for …\nReturns <code>true</code> if at least one widget is subscribed to this …\nReturns <code>true</code> if at least one widget is subscribed to this …\nRegister a callback that is called just before an event …\nGets a read-write variable that is a short informational …\nSet the metadata value only if it is not set.\nSets the initial info if it is not set.\nSets the initial name if it is not set.\nSet the metadata variable if it was not set.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTurns into a future that receives the oldest send update, …\nReturns <code>true</code> if the parameter type is <code>T</code>.\nReturns <code>true</code> if <code>self</code> is the type erased <code>event</code>.\nIf the handle is not connected to any command.\nReturns <code>true</code> if empty or all handles are dummy.\nIf the handle is not actually registered in an event.\nReturns if this handle has enabled the command.\nGets a variable that tracks if this command has any …\nGets if the command is enabled without creating a tracking …\nIf the handler must skip this event instance.\nReturns <code>true</code> if the widget is subscribed to this event.\nReturns <code>true</code> if the widget is subscribed to this event.\nCreates a blocking iterator over event updates, if there …\nGets a read-write variable that is the display name for …\nName of the event static item.\nName of the event static item.\nGets a read-only variable that formats the name and first …\nNew in the not stopped default state.\nNew args from values that convert into the argument types.\nNew param.\nGenerates a new unique ID.\nCreate an event update for this event with delivery list …\nCreate an event update for this command without custom …\nCreate and event update for this event with a custom …\nCreate an event update for this command with custom <code>param</code>.\nSchedules the raw event update.\nSchedule an event update.\nSchedule a command update without param.\nSchedule a command update without param for all scopes …\nSchedule a command update linked with an external event …\nSchedule a command update with custom <code>param</code>.\nArguments for event that happened now (<code>INSTANT.now</code>).\nGet the event update args if the update is for this event.\nGet the command update args if the update is for this …\nHelper for declaring command event properties.\nHelper for declaring event properties.\nCreates an event handler.\nCreates an event handler for the command.\nHelper for declaring command preview handlers.\nHelper for declaring preview event properties.\nCreates a preview event handler.\nCreates a preview event handler for the command.\nGet the event update args if the update is for this event …\nGet the event update args if the update is for this event …\nReturns a reference to a parameter of <code>T</code> if <code>parameter</code> is …\nOptional parameter for the command handler.\nDrop all handles without stopping their behavior.\nDrop the handle without un-registering it, the resource it …\nPropagation handle associated with this event instance.\nAdd <code>other</code> handle to the collection.\nCreates a receiver channel for the event. The event …\nReceives the oldest update, blocks until the event updates.\nReturns a future that receives the oldest send update, …\nReceives the oldest send update, blocks until the event …\nReceives the oldest send update, blocks until the event …\nCommand scope.\nScope of command that notified.\nGets the command in a new <code>scope</code>.\nCreates a sender channel that can notify the event.\nUn-scramble the underlying value to get the original …\nSet the meta value associated with the <code>StateId</code>.\nSets if the command event handler is active.\nSignal subsequent handlers that the event is already …\nRegister the widget to receive targeted events from this …\nCreate a new handle to this command.\nRegister the widget to receive targeted events from this …\nCreate a new handle for this command for a handler in the …\nGets the instant this event happened.\nInstant the event happened.\nCreate a non-blocking iterator over event updates, the …\nTries to receive the oldest sent update not received, …\nGets the <code>TypeId</code> of the parameter.\nCalls <code>visitor</code> for each scope of this command.\nCalls <code>visit</code> for each widget subscribed to this event.\nCalls <code>visit</code> for each widget subscribed to this event.\nCreate an <code>EventHandles</code> collection with <code>self</code> and <code>other</code>.\nVisit the command custom metadata of the current scope.\n<code>FocusTarget::Alt</code>\nDefault focusable widget index.\nMove focus to the current widget ALT scope or out of it.\nTab is contained in the scope, does not move after the …\nArrows move the focus inside the scope only, stops at the …\nTab moves the focus through the scope continuing out after …\nArrows move the focus through the scope continuing out of …\nTab is contained in the scope, after the last item moves …\nArrows move the focus inside the scope only, cycles back …\nUp, right, down, left.\n<code>FocusTarget::Down</code>\nMove focus to widget.\nMove focus to the widget if it is focusable or to first …\nMove focus to the widget if it is focusable or to the …\nMove focus to the widget if it is focusable, or to the …\nDirectional navigation configuration of a focus scope.\nMove focus bellow current.\n<code>FocusTarget::Enter</code>\n<code>FocusTarget::Exit</code>\nMove focus to the first focusable descendant of the …\nMove focus to the first focusable ancestor of the current …\nExit focus if a click event was send to the widget or …\nExit focus if a click event was send to the enabled widget …\nExit focus if the click event was received by the widget …\nKeyboard focus service.\nKeyboard focused widget changed event.\nFocus the first descendant considering the TAB index, if …\nLike <code>FirstDescendant</code>, but also focus the descendant even …\n<code>FOCUS_CHANGED_EVENT</code> arguments.\nThe cause of a <code>FOCUS_CHANGED_EVENT</code>.\nBehavior of a widget when a click event is send to it or a …\nFocus metadata associated with a widget info tree.\nBuilder for <code>FocusInfo</code> accessible in a <code>WidgetInfoBuilder</code>.\nA <code>WidgetInfoTree</code> wrapper for querying focus info out of …\nRepresents the <code>FocusTarget</code> actions that move focus from …\nFocus change request.\nThe widget is a focusable focus scope.\nBehavior of a focus scope when it receives direct focus.\nFocus request target.\nThe widget is focusable as a single item.\nm  Focusable widget mixin. Enables keyboard focusing on …\nClick event always ignored.\nLast possible widget index.\n<code>FocusTarget::Left</code>\nFocus the descendant that was last focused before focus …\nLike <code>LastFocused</code>, but also focus the descendant even if it…\nMove focus to the left of current.\n<code>FocusTarget::Next</code>\nMove focus to next from current in screen, or to first in …\nTab can move into the scope, but does not move the focus …\nArrows can move into the scope, but does not move the …\nThe widget is not focusable.\nTab moves into the scope once but then moves out of the …\n<code>FocusTarget::Prev</code>\nMove focus to previous from current in screen, or to last …\nScope return focus widget changed event.\n<code>FocusTarget::Right</code>\nA previously focused widget, was removed or moved.\nThe focus changed trying to fulfill the request.\n<code>RETURN_FOCUS_CHANGED_EVENT</code> arguments.\nMove focus to the right of current.\nWidget is skipped during tab navigation.\nA focus scope got focus causing its <code>FocusScopeOnFocus</code> …\nWidget tab navigation position within a focus scope.\nTab navigation configuration of a focus scope.\n<code>FocusTarget::Up</code>\nMove focus above current.\nJust focus the scope widget.\n<code>WidgetInfo</code> wrapper that adds focus information for each …\n<code>WidgetInfo</code> extensions that build a <code>WidgetFocusInfo</code>.\nCreate a new tab index that is guaranteed to be after <code>AUTO</code> …\nGet a flags value with all known bits set.\nNew <code>FocusTarget::Alt</code> request.\nP  Widget is the ALT focus scope.\nP  Widget is the ALT focus scope.\nCurrent ALT return focus.\nIf the widget is definitely an ALT focus scope or not.\nReference the ALT focus scope <em>closest</em> with the current …\nIterator over focusable parent -&gt; grandparent -&gt; .. -&gt; …\nIf set to a duration, starts highlighting focus when a …\nCreate a new tab index that is guaranteed to be before <code>AUTO</code>…\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhat caused this event.\nCommands that control focus and <code>Command</code> extensions.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nIf the tree info contains the widget and it is focusable.\n<code>AUTO</code>\n<code>FirstDescendant</code>\nThe <code>prev_focus</code> and <code>new_focus</code>.\nThe <code>prev_return</code>, <code>new_return</code> and <code>scope</code>.\nIterator over the focusable widgets contained by this …\nThe intersection of a source flags value with the …\nNew <code>FocusTarget::Direct</code> request.\nNew <code>FocusTarget::DirectOrEnter</code> request.\nNew <code>FocusTarget::DirectOrExit</code> request.\nNew <code>FocusTarget::DirectOrRelated</code> request.\nP  Keyboard arrows navigation within this focus scope.\nP  Keyboard arrows navigation within this focus scope.\nDirectional navigation within this widget, if set turns …\nDirectional navigation mode.\nNew <code>FocusTarget::Down</code> request.\nGet a flags value with all bits unset.\nFocus navigation actions that can move the focus away from …\nFocus navigation actions that can move the focus away from …\nNew <code>FocusTarget::Enter</code> request.\nNew <code>FocusTarget::Exit</code> request.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFirst descendant considering TAB index.\nRequest a focus update.\nFocus the ALT scope from the navigation origin or the …\nP  Behavior of a widget when a click event is send to it …\nP  Behavior of a widget when a click event is send to it …\nIf <code>DISABLED</code> widgets can receive focus.\nIf <code>DISABLED</code> widgets are focusable in this tree.\nIf <code>DISABLED</code> widgets are focusable in this tree.\nFocus the nearest downward widget from the navigation …\nFocus the first logical descendant that is focusable from …\nFocus the first logical ancestor that is focusable from …\nIf <code>Hidden</code> widgets can receive focus.\nIf <code>Hidden</code> widgets are focusable in this tree.\nIf <code>Hidden</code> widgets are focusable in this tree.\nP  Sets the foreground highlight values used when the …\nP  Sets the foreground highlight values used when the …\nP  Sets the foreground highlight values used when the …\nWidget focus metadata.\nWidget focus metadata, all things equal except the widget …\nFocus the nearest widget to the left of the navigation …\nFocus the logical next widget from the navigation origin …\nP  If the widget is focused on info init.\nP  If the widget is focused on info init.\nP  If the widget is focused on info init.\nFocus the logical previous widget from the navigation …\nFocus the nearest widget to the right of the navigation …\nP  Makes the widget into a focus scope when set to <code>true</code>.\nP  Makes the widget into a focus scope when set to <code>true</code>.\nP  Behavior of a focus scope when it receives direct focus.\nP  Behavior of a focus scope when it receives direct focus.\nP  Keyboard shortcuts that focus this widget or its first …\nP  Keyboard shortcuts that focus this widget or its first …\nClone a reference to the <code>FocusInfoTree</code> that owns this …\nFocus the nearest upward widget from the navigation origin …\nFocus the widget if it is focusable and change the …\nFocus the widget if it is focusable, else focus the first …\nFocus the widget if it is focusable, else focus the first …\nFocus the widget if it is focusable, else focus the first …\nP  Makes the widget focusable when set to <code>true</code>.\nP  Makes the widget focusable when set to <code>true</code>.\nIf the widget is definitely focusable or not.\nP  Makes the widget focusable when set to <code>true</code>.\nClosest focusable in the same scope below this widget.\nClosest focusable in the same scope to the left of this …\nSets <code>focusable</code>, only if it was not already set.\nClosest focusable in the same scope to the right of this …\nReference the focusable widget closest to the window root.\nClosest focusable in the same scope above this widget.\nCurrent focused widget.\nIf the window should be focused even if another app has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>TabIndex::not_skip</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReference to the widget in the tree, if it is present and …\nReference to the first focusable widget or parent in the …\nif the widget was not in the <code>prev_return</code> and is in the …\nIf the focusable has any focusable descendant that is not …\nSchedules enabling of <code>is_highlighting</code> for next update.\nIf the widget should visually indicate that it has …\nIf the focused widget should visually indicate that it is …\nIf focus is in an ALT scope.\nWidget is in a ALT scope or is an ALT scope.\nFull widget info.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")