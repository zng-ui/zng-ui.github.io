searchState.loadedDescShard("zng_wgt_menu", 0, "Menu widgets and properties.\nW  Style applied to all <code>Button!</code> widgets inside <code>Menu!</code> root.\nW  Default <code>Menu!</code> style.\nW  Alternate style for buttons inside a menu.\nW  Menu root panel.\nDefines the layout widget for <code>Menu!</code>.\nMinimum space between a menu item child and the …\nContextual style variable.\nW  Style applied to all <code>Toggle!</code> widgets inside <code>Menu!</code> root.\nW  Deprecated\nContext menu widget and properties.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nP  Menu item icon.\nP  Menu item icon from widget function.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Widget function that generates the menu layout.\nP  Widget function that generates the menu layout.\nSub-menu popup widget and properties.\nP  Minimum space between a menu item child and the …\nP  Menu item shortcut text.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nSub-menu widget and properties.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nPosition of the context widget in relation to the anchor …\nW  Context menu popup.\nArguments for context menu widget functions.\nW  Context menu popup default style.\nDefines the layout widget for <code>ContextMenu!</code>.\nContextual style variable.\nW  Touch context menu popup default style.\nID of the widget the menu is anchored to.\nP  Defines the context menu shown when the widget is …\nP  Set the position of the context-menu widgets opened for …\nP  Defines the context menu function shown when the widget …\nIs <code>true</code> if the menu is for <code>disabled_context_menu_fn</code>, is …\nP  Defines the context menu shown when the widget is …\nP  Defines the context menu function shown when the widget …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNew args.\nP  Widget function that generates the context menu layout.\nP  Widget function that generates the context menu layout.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nW  Sub-menu popup default style.\nDefines the layout widget for <code>SubMenuPopup!</code>.\nContextual style variable.\nW  Sub-menu popup.\nc  Sub-menu items.\nc  Sub-menu items.\nDefault sub-menu popup panel view.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Widget function that generates the sub-menu popup …\nP  Widget function that generates the sub-menu popup …\nc  Parent sub-menu ID.\nc  Parent sub-menu ID.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nSub-menu popup implementation.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nW  Style applied to all <code>Button!</code> widgets inside <code>SubMenu!</code> …\nW  Style applied to <code>SubMenu!</code> not inside any other …\nWidth of the sub-menu expand symbol column.\nDelay a sub-menu must be hovered to open the popup.\nWidth of the icon/checkmark column.\nContextual style variable.\nW  Submenu header and items.\nIterator over sub-menu parents.\nW  Style applied to all <code>SubMenu!</code> widgets inside other …\nExtension methods for <code>WidgetInfo</code>.\nW  Style applied to all <code>Toggle!</code> widgets inside <code>SubMenu!</code> …\nW  Style applied to all <code>Button!</code> widgets inside <code>SubMenu!</code> …\nP  Sub-menu items.\nP  If the start and end column width is applied as padding.\nP  Sets the content to the <code>Align::END</code> side of the button …\nP  Sets the content to the <code>Align::END</code> side of the button …\nP  Width of the sub-menu expand symbol column.\nP  Width of the sub-menu expand symbol column.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nc  Defines the sub-menu header child.\nc  Defines the sub-menu header child.\nP  Delay a sub-menu must be hovered to open the popup.\nP  Delay a sub-menu must be hovered to open the popup.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  If the sub-menu popup is open or opening.\nP  If the sub-menu popup is open or opening.\nIf this widget is a <code>SubMenu!</code> instance.\nGets a variable that tracks if the sub-menu is open.\nGets the alt-scope parent of the <code>root_submenu</code>.\nP  Sets the content to the <code>Align::START</code> side of the button …\nP  Sets the content to the <code>Align::START</code> side of the button …\nP  Width of the icon/checkmark column.\nP  Width of the icon/checkmark column.\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nSub-menu implementation.\nGets an iterator over sub-menu parents until root.\nGets the sub-menu that spawned <code>self</code> if <code>is_submenu</code>, …\nGets the last submenu ancestor.\nGets an iterator over the widget, if it is a sub-menu, and …\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.")