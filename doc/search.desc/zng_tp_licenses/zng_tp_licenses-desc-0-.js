searchState.loadedDescShard("zng_tp_licenses", 0, "Third party license management and collection.\nRepresents a license id, name and text.\nRepresents a license and dependencies that use it.\nRepresents a project or package that uses a license.\nRepresents a license user with license.\nCalls <code>cargo about</code> for the crate.\nDecode licenses encoded with <code>encode_licenses</code>. Note that …\nBincode serialize and deflate the licenses.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nLicense SPDX id.\nIncludes the bundle file generated using <code>write_bundle</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLicense name and text.\nLicense used.\nMerge <code>licenses</code> into <code>into</code>.\nLicense name.\nProject or package name.\nParse the output of <code>cargo about</code>.\nSort vec by license name, and users of each license by …\nLicense text.\nProject or package URL.\nProject or packages that use this license.\nLicense user.\nInvert data to be keyed by user, also sorts by user name.\nInvert data to be keyed by user.\nPackage version.\nEncode licenses and write to the output file that is …")