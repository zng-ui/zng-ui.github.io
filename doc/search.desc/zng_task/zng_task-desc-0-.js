searchState.loadedDescShard("zng_task", 0, "Parallel async tasks and async task runners.\nDeadline APP integration.\nError when <code>with_deadline</code> reach a time limit before a task …\nA <code>Waker</code> that dispatches a wake call to multiple other …\nExtends rayon’s <code>ParallelIterator</code> with thread context.\nParallel iterator adapter the propagates the thread …\nRepresents a fork-join scope which can be used to spawn …\nA future that will await until <code>set</code> is called.\nRepresents a <code>Future</code> running in sync with the UI.\n A future that <em>zips</em> other futures.\n A future that is ready when all futures are ready with an …\n A future that is ready when all futures are ready with …\n A future that awaits for the first future that is ready.\n A future that waits for the first future that is ready …\n A future that is ready when any of the futures is ready …\nBlocks the thread until the <code>task</code> future finishes.\nDrop the task without logging a warning if it is pending.\nClear current registered wakers.\nAsync channels.\nA future that is <code>Pending</code> until the <code>deadline</code> is reached.\nExecutor used in async doc tests.\nNew empty waker.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAsync filesystem primitives.\nImplements a <code>Future</code> from a closure.\nHTTP client.\nCalled by the app implementer to setup the <code>deadline</code> …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the result if the task is completed.\nIO tasks.\nIPC tasks.\nReturns <code>true</code> if the task is done.\nIf the signal was set.\nRayon join with local context.\nRayon join context with local context.\nNew unsigned.\nNew task with already build event-loop waker.\nNew signaled.\nPolls the <code>task</code> once immediately on the calling thread, if …\nPolls the <code>task</code> once immediately on the calling thread, if …\nRegister a <code>waker</code> to wake once when <code>self</code> awakes.\nSpawn a parallel async task that will send its result to a …\nSpawn a parallel async task that can also be <code>.await</code> for …\nLike <code>run</code> but catches panics.\nRayon scope with local context.\nSets the signal and awakes listeners.\nSpawn a parallel async task, this function is not blocking …\nSpawns a job into the fork-join scope <code>self</code>. The job runs …\nFire and forget a <code>wait</code> task. The <code>task</code> starts executing …\nContinuous poll the <code>task</code> until if finishes.\nPolls the future if needed, returns a reference to the …\nCreate a parallel <code>task</code> that blocks awaiting for an IO …\nLike <code>wait</code> but catches panics.\nLike <code>spawn_wait</code>, but the task will send its result to a …\nCaptures the current <code>LocalContext</code> and propagates it to all …\nCaptures the current <code>LocalContext</code> and propagates it to all …\nAdd a <code>deadline</code> to a future.\nA future that is <code>Pending</code> once and wakes the current task.\nAll channel receivers were dropped and so the message has …\nAll senders were dropped and no messages are waiting in …\nAll senders were dropped and no messages are waiting in …\nThe receiving end of a channel.\nAn error that may be emitted when attempting to wait for a …\nAn error that may be emitted when attempting to wait for a …\nAn error that may be emitted when attempting to send a …\nAn error that may be emitted when sending a value into a …\nThe transmitting end of a channel.\nA timeout occurred when attempting to send the message.\nA timeout occurred when attempting to receive a message.\nThe transmitting end of an unbounded channel.\nCreate a channel with a maximum capacity.\nIf the channel is bounded, returns its capacity.\nIf the channel is bounded, returns its capacity.\nTakes all sitting in the channel.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsume the error, yielding the message that failed to …\nConsume the error, yielding the message that failed to …\nReturns <code>true</code> if all receivers for this channel have been …\nReturns <code>true</code> if all receivers for this channel have been …\nReturns <code>true</code> if all senders for this channel have been …\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is empty.\nReturns <code>true</code> if the channel is full.\nReturns <code>true</code> if the channel is full.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nReturns the number of messages in the channel.\nWait for an incoming value from the channel associated …\nWait for an incoming value from the channel associated …\nCreate a <code>bounded</code> channel with <code>0</code> capacity.\nSend a value into the channel.\nSend a value into the channel.\nSend a value into the channel.\nConvert to <code>UnboundSender</code> if the flume sender is unbound.\nCreate a channel with no maximum capacity.\nA builder for creating directories with configurable …\nAn entry in a directory.\nAn open file on the filesystem.\nA structure representing a type of file with accessors for …\nMetadata information about a file.\nA builder for opening files with configurable options.\nRepresentation of the various permissions on a file.\nA stream of entries in a directory.\nReturns the last access time of this metadata.\nConfigures the option for append mode.\nReturns the canonical form of a path.\nCopies a file to a new location.\nOpens a file in write-only mode.\nCreates a directory with the configured options.\nConfigures the option for creating a new file if it doesn…\nCreates a new, empty directory at the provided path\nRecursively create a directory and all of its parent …\nConfigures the option for creating a new file or failing …\nReturns the creation time listed in this metadata.\nReturns the bare name of this entry without the leading …\nReads the file type for this entry.\nReturns the file type for this metadata.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a hard link on the filesystem.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this metadata is for a directory. The …\nTests whether this file type represents a directory. The …\nReturns <code>true</code> if this metadata is for a regular file. The …\nTests whether this file type represents a regular file. …\nReturns <code>true</code> if this metadata is for a symbolic link.\nTests whether this file type represents a symbolic link. …\nReturns the size of the file, in bytes, this metadata is …\nReads metadata for a path.\nReads the metadata for this entry.\nReads the file’s metadata.\nReturns the last modification time listed in this metadata.\nCreates a blank set of options.\nCreates a blank set of options.\nOpens a file in read-only mode.\nOpens a file with the configured options.\nReturns the full path to this entry.\nReturns the permissions of the file this metadata is for.\nReads the entire contents of a file as raw bytes.\nConfigures the option for read mode.\nReturns a stream of entries in a directory.\nReads a symbolic link and returns the path it points to.\nReads the entire contents of a file as a string.\nReturns <code>true</code> if these permissions describe a readonly …\nSets the option for recursive mode.\nRemoves an empty directory.\nRemoves a directory and all of its contents.\nRemoves a file.\nRenames a file or directory to a new location.\nTruncates or extends the file.\nChanges the permissions of a file or directory.\nChanges the permissions on the file.\nModifies the readonly flag for this set of permissions. If …\nReads metadata for a path without following symbolic links.\nSynchronizes OS-internal buffered contents and metadata to …\nSynchronizes OS-internal buffered contents to disk.\nConfigures the option for truncating the previous file.\nUnix-specific extensions.\nWrites a slice of bytes as the new contents of a file.\nConfigures the option for write mode.\nUnix-specific extensions to <code>DirBuilder</code>.\nUnix-specific extension methods for <code>DirEntry</code>.\nUnix-specific extensions for <code>fs::FileType</code>.\nUnix-specific extensions to <code>fs::Metadata</code>.\nUnix-specific extensions to <code>OpenOptions</code>.\nUnix-specific extensions to <code>fs::Permissions</code>.\nReturns the last access time of the file, in seconds since …\nReturns the last access time of the file, in nanoseconds …\nReturns the block size for filesystem I/O.\nReturns the number of blocks allocated to the file, in …\nReturns the last status change time of the file, in …\nReturns the last status change time of the file, in …\nPasses custom flags to the <code>flags</code> argument of <code>open</code>.\nReturns the ID of the device containing the file.\nCreates a new instance of <code>Permissions</code> from the given set …\nReturns the group ID of the owner of this file.\nReturns the underlying <code>d_ino</code> field in the contained <code>dirent</code> …\nReturns the inode number.\nReturns <code>true</code> if this file type is a block device.\nReturns <code>true</code> if this file type is a char device.\nReturns <code>true</code> if this file type is a fifo.\nReturns <code>true</code> if this file type is a socket.\nSets the mode to create new directories with.\nSets the mode bits that a new file will be created with.\nReturns the underlying raw <code>st_mode</code> bits that contain the …\nReturns the rights applied to this file.\nReturns the last modification time of the file, in seconds …\nReturns the last modification time of the file, in …\nReturns the number of hard links pointing to this file.\nReturns the device ID of this file (if it is a special …\nSets the underlying raw bits for this set of permissions.\nReturns the total size of this file in bytes.\nCreates a new symbolic link on the filesystem.\nReturns the user ID of the owner of this file.\n202 Accepted [RFC7231, Section 6.3.3]\n208 Already Reported [RFC5842]\n502 Bad Gateway [RFC7231, Section 6.6.3]\n400 Bad Request [RFC7231, Section 6.5.1]\nHTTP request body.\n409 Conflict [RFC7231, Section 6.5.8]\nCONNECT\n100 Continue [RFC7231, Section 6.2.1]\n201 Created [RFC7231, Section 6.3.2]\nRepresents a download cache in a <code>Client</code>.\nRepresents a SHA-512/256 hash computed from a normalized …\nCache mode selected for a <code>Uri</code>.\nRepresents a serializable configuration for a cache entry …\nHTTP client.\nError from the HTTP client.\nBuilder that can be used to create a <code>Client</code>.\nInformation stored about an HTTP cookie.\nProvides automatic cookie session management using an …\nDELETE\nFollow the standard cache policy as computed by …\nError returned by <code>set_default_client_init</code> if the default …\n417 Expectation Failed [RFC7231, Section 6.5.14]\nAn error encountered while sending an HTTP request or …\nReturns the error.\n424 Failed Dependency [RFC4918]\n403 Forbidden [RFC7231, Section 6.5.3]\n302 Found [RFC7231, Section 6.4.3]\nA simple <code>CacheDb</code> implementation that uses a local …\nFollow all redirects automatically.\n504 Gateway Timeout [RFC7231, Section 6.6.5]\nGET\n410 Gone [RFC7231, Section 6.5.9]\nHEAD\n505 HTTP Version Not Supported [RFC7231, Section 6.6.6]\n418 I’m a teapot [curiously not registered by IANA but …\n226 IM Used [RFC3229]\n507 Insufficient Storage [RFC4918]\n500 Internal Server Error [RFC7231, Section 6.6.1]\n411 Length Required [RFC7231, Section 6.5.10]\n423 Locked [RFC4918]\n508 Loop Detected [RFC5842]\nFollow redirects automatically up to a maximum number of …\n405 Method Not Allowed [RFC7231, Section 6.5.5]\n421 Misdirected Request RFC7540, Section 9.1.2\n301 Moved Permanently [RFC7231, Section 6.4.2]\n300 Multiple Choices [RFC7231, Section 6.4.1]\n207 Multi-Status [RFC4918]\nError when <code>max_length</code> validation fails at the header or …\nThe Request Method (VERB)\nInformation about the state of an HTTP request.\n511 Network Authentication Required [RFC6585]\n203 Non-Authoritative Information [RFC7231, Section 6.3.4]\n406 Not Acceptable [RFC7231, Section 6.5.6]\n510 Not Extended [RFC2774]\n404 Not Found [RFC7231, Section 6.5.4]\n501 Not Implemented [RFC7231, Section 6.6.2]\n304 Not Modified [RFC7232, Section 4.1]\n204 No Content [RFC7231, Section 6.3.5]\nAlways requests the server, never caches the response.\nDo not apply any special treatment to redirect responses. …\n200 OK [RFC7231, Section 6.3.1]\nOPTIONS\n206 Partial Content [RFC7233, Section 4.1]\nPATCH\n413 Payload Too Large [RFC7231, Section 6.5.11]\n402 Payment Required [RFC7231, Section 6.5.2]\n308 Permanent Redirect [RFC7238]\nPOST\n412 Precondition Failed [RFC7232, Section 4.2]\n428 Precondition Required [RFC6585]\n102 Processing [RFC2518]\n407 Proxy Authentication Required [RFC7235, Section 3.2]\nPUT\nAlways caches the response, overwriting cache control …\n416 Range Not Satisfiable [RFC7233, Section 4.4]\n431 Request Header Fields Too Large [RFC6585]\n408 Request Timeout [RFC7231, Section 6.5.7]\n205 Reset Content [RFC7231, Section 6.3.6]\nDescribes a policy for handling server redirects.\nHTTP request.\nA <code>Request</code> builder.\nError when <code>require_length</code> is set, but a response was sent …\nHTTP response.\nHead parts from a split <code>Response</code>.\n303 See Other [RFC7231, Section 6.4.4]\n503 Service Unavailable [RFC7231, Section 6.6.4]\n101 Switching Protocols [RFC7231, Section 6.2.2]\nAn HTTP status code (<code>status-code</code> in RFC 7230 et al.).\n307 Temporary Redirect [RFC7231, Section 6.4.7]\n429 Too Many Requests [RFC6585]\nTRACE\nMarker trait for types that try-to-convert to <code>Body</code>.\nMarker trait for types that try-to-convert to …\nMarker trait for types that try-to-convert to …\nMarker trait for types that try-to-convert to <code>Method</code>.\nMarker trait for types that try-to-convert to <code>Uri</code>.\n401 Unauthorized [RFC7235, Section 3.1]\n451 Unavailable For Legal Reasons [RFC7725]\n422 Unprocessable Entity [RFC4918]\n415 Unsupported Media Type [RFC7231, Section 6.5.13]\n426 Upgrade Required [RFC7231, Section 6.5.15]\n414 URI Too Long [RFC7231, Section 6.5.12]\n305 Use Proxy [RFC7231, Section 6.4.5]\nThe URI component of a request.\n506 Variant Also Negotiates [RFC2295]\nReturns how long the response has been sitting in cache.\nReturn a &amp;str representation of the HTTP method\nReturns a &amp;str representation of the <code>StatusCode</code>\nReturns the <code>u16</code> corresponding to this <code>StatusCode</code>.\nGet the authority of this <code>Uri</code>.\nEnable or disable automatic decompression of the response …\nEnable or disable automatic decompression of the response …\nRead/clone the cached body for the given <code>key</code>.\nBuild the request with a body.\nBuild the <code>Client</code> using the configured options.\nBuild the request without a body.\nBuild the client with more custom build calls in the inner …\nBuild the request with more custom build calls in the …\nStart a new <code>ClientBuilder</code> for creating a custom client.\nCreate a new cookie builder with a given name and value. …\nStarts an empty builder.\nCreates a new builder-style object to manufacture a <code>Uri</code>.\nRead the response body as raw bytes.\nRead the body as raw bytes.\nReference the cache used in this client.\nSets the <code>CacheDb</code> to use.\nReturns the <code>CacheMode</code> that is used in this client if the …\nSets the <code>CacheMode</code> selector.\nGet the standardised <code>reason-phrase</code> for this status code.\nRemove all cookies from this cookie jar.\nDynamic clone.\nCreate a clone of the request method, URI, version and …\nAmount of time taken to establish a connection to the …\nSet a timeout for establishing connections to a host.\nSet a timeout for establishing connections to a host.\nDrop the request without dropping the connection.\nDecode content-length value if it is present in the …\nGets the configured cookie-jar for this client, if cookies …\nSet a cookie jar to use to accept, store, and supply …\nSet a cookie jar to use to accept, store, and supply …\nGet the configured cookie jar used for persisting cookies …\nEnable persistent cookie handling for all requests using …\nThe <code>Client</code> used by the functions in this module.\nAdd a default header to be passed with every request.\nSend a DELETE request to the <code>uri</code>.\nSend a DELETE request to the <code>uri</code>.\nStarts building a DELETE request.\nNumber of bytes downloaded / estimated total.\nAverage download speed so far in bytes/second.\nGet the effective URI of this response. This value differs …\nCreate a new empty body.\nThe response’s extensions\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP method.\nConverts a &amp;u8 to a status code\nCreate a new body from a potentially static byte buffer.\nInit from <code>isahc::Metrics</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Uri</code>.\nNew response from given head and body.\nAttempt to convert a <code>Parts</code> into a <code>Uri</code>.\nCreate a streaming body of unknown length.\nCreate a streaming body of with known length.\nCompute key from request.\nConvert a <code>Uri</code> from a static string.\nConverts a u16 to a status code.\nSend a GET request to the <code>uri</code>.\nSend a GET request to the <code>uri</code>.\nStarts building a GET request.\nGet a cookie by name for the given URI.\nSend a GET request to the <code>uri</code> and read the response as raw …\nSend a GET request to the <code>uri</code> and read the response as raw …\nGet a copy of all the cookies in the jar that match the …\nSend a GET request to the <code>uri</code> and de-serializes the …\nSend a GET request to the <code>uri</code> and de-serializes the …\nSend a GET request to the <code>uri</code> and read the response as a …\nSend a GET request to the <code>uri</code> and read the response as a …\nSend a HEAD request to the <code>uri</code>.\nSend a HEAD request to the <code>uri</code>.\nStarts building a HEAD request.\nHTTP header types\nAppends a header to this request.\nReturns a reference to the associated header field map.\nReturns a reference to the associated header field map.\nThe response’s headers\nGet the host of this <code>Uri</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConsumes the response returning the head and body parts.\nConvert a <code>Uri</code> into <code>Parts</code>.\nCheck if status is within 400-499.\nReport if this body is empty.\nWhether a method is considered “idempotent”, meaning …\nCheck if status is within 100-199.\nCheck if status is within 300-399.\nWhether a method is considered “safe”, meaning the …\nCheck if status is within 500-599.\nReturns <code>true</code> if the cache entry has expired.\nCheck if status is within 200-299.\nDeserialize the response body as JSON.\nGet the size of the body, if known.\nSpecify a maximum amount of time where transfer rate can …\nSpecify a maximum amount of time where transfer rate can …\nSet a maximum download speed for the response body, in …\nSet a maximum download speed for the response body, in …\nSet the maximum response content length allowed.\nSet a maximum upload speed for the request body, in bytes …\nSet a maximum upload speed for the request body, in bytes …\nReturns a reference to the associated HTTP method.\nSet the HTTP method for this request.\nEnable or disable metrics collecting.\nEnable or disable metrics collecting.\nMetrics for the task transfer.\nGet the name of the cookie.\nTotal time from the start of the request until DNS name …\nNew client with default config.\nNew default builder.\nOpen the cache in <code>dir</code> or create it.\nCreate a new, empty cookie jar.\nNew default request builder.\nNew response.\nCreate a response with the given status and text body …\nStarts building a PATCH request.\nGet the path of this <code>Uri</code>.\nReturns the path &amp; query components of the Uri\nRetrieves the cache-policy for the given <code>key</code>.\nGet the port part of this <code>Uri</code>.\nGet the port of this <code>Uri</code> as a <code>u16</code>.\nSend a POST request to the <code>uri</code> with a given request body.\nSend a POST request to the <code>uri</code> with a given request body.\nStarts building a POST request.\nRemove cache entries to reduce pressure.\nRemove all cached entries that are not locked in a <code>set*</code> …\nSend a PUT request to the <code>uri</code> with a given request body.\nSend a PUT request to the <code>uri</code> with a given request body.\nStarts building a PUT request.\nGet the query string of this <code>Uri</code>, starting after the <code>?</code>.\nRead some bytes from the body, returns how many bytes …\nRead some bytes from the body, returns how many bytes …\nRead the from the body to exactly fill the buffer.\nRead the from the body to exactly fill the buffer.\nSet a policy for automatically following server redirects.\nSet a policy for automatically following server redirects.\nIf automatic redirect following is enabled, the total time …\nRemove cached policy and body for the given <code>key</code>.\nSet if the <code>Content-Length</code> header must be present in the …\nIf this body is repeatable, reset the body stream back to …\nGet the scheme of this <code>Uri</code>.\nGet the scheme of this <code>Uri</code> as a <code>&amp;str</code>.\nAmount of time spent on TLS handshakes.\nSend a custom <code>Request</code>.\nSend a custom <code>Request</code>.\nCaches the <code>policy</code> and <code>body</code> for the given <code>key</code>.\nSet a cookie for the given absolute request URI.\nSet a custom initialization function for the <code>default_client</code>…\nReplaces the cache-policy for the given <code>key</code>.\nReturns the SHA-512/256 hash.\nComputes a URI safe base64 encoded SHA-512/256 from the …\nReturns the <code>StatusCode</code>.\nThe response’s status\nRead the response body as a string.\nRead the body and try to convert to UTF-8.\nReturns approximate time in milliseconds until the …\nSpecify a maximum amount of time that a complete …\nSpecify a maximum amount of time that a complete …\nTotal time for the entire request. This will continuously …\nTime it took from the start of the request until the first …\nAmount of time spent performing the actual request …\nTries to convert <code>self</code> into <code>Body</code>.\nTries to convert <code>self</code> into <code>Body</code>.\nTries to convert <code>self</code> into <code>Body</code>.\nTries to convert <code>self</code> into <code>Method</code>.\nTries to convert <code>self</code> into <code>Uri</code>.\nNumber of bytes uploaded / estimated total.\nAverage upload speed so far in bytes/second.\nURI component of request and response lines\nReturns a reference to the associated URI.\nSet the URI for this request.\nGet the value of the cookie.\nThe response’s version\nAll zeros.\nThe <code>Content-Length</code> header value, if it was set.\nThe maximum allowed length.\nAdvertises which content types the client is able to …\nAdvertises which character set the client is able to …\nAdvertises which content encoding the client is able to …\nAdvertises which languages the client is able to …\nMarker used by the server to advertise partial request …\nPreflight response indicating if the response to the …\nPreflight response indicating permitted HTTP headers.\nPreflight header response indicating permitted access …\nIndicates whether the response can be shared with …\nIndicates which headers can be exposed as part of the …\nIndicates how long the results of a preflight request can …\nInforms the server which HTTP headers will be used when an …\nInforms the server know which HTTP method will be used …\nIndicates the time in seconds the object has been in a …\nLists the set of methods support by a resource.\nAdvertises the availability of alternate services to …\nContains the credentials to authenticate a user agent with …\nA marker trait used to identify values that can be used as …\nSpecifies directives for caching mechanisms in both …\nIndicates how caches have handled a response and its …\nSpecifies directives that allow origin servers to control …\nControls whether or not the network connection stays open …\nIndicates if the content is expected to be displayed …\nUsed to compress the media-type.\nUsed to describe the languages intended for the audience.\nIndicates the size of the entity-body.\nIndicates an alternate location for the returned data.\nIndicates where in a full body message a partial message …\nAllows controlling resources the user agent is allowed to …\nAllows experimenting with policies by monitoring their …\nUsed to indicate the media type of the resource.\nContains stored HTTP cookies previously sent by the server …\nContains the date and time at which the message was …\nIndicates the client’s tracking preference.\nA drain iterator for <code>HeaderMap</code>.\nIdentifier for a specific version of a resource.\nIndicates expectations that need to be fulfilled by the …\nContains the date/time after which the response is …\nA view into a single location in a <code>HeaderMap</code>, which may be …\nContains information from the client-facing side of proxy …\nContains an Internet email address for a human user who …\nA view to all values stored in a single entry.\nSpecifies the domain name of the server and (optionally) …\nA set of HTTP headers\nRepresents an HTTP header field name\nRepresents an HTTP header field value.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on the modification date.\nMakes a request conditional based on the E-Tag.\nMakes a request conditional based on range.\nMakes the request conditional based on the last …\nA marker trait used to identify values that can be used as …\nAn owning iterator over the entries of a <code>HeaderMap</code>.\nA possible error when converting a <code>HeaderName</code> from another …\nA possible error when converting a <code>HeaderValue</code> from a …\n<code>HeaderMap</code> entry iterator.\n<code>HeaderMap</code> mutable entry iterator\nAn iterator over <code>HeaderMap</code> keys.\nContent-Types that are acceptable for the response.\nAllows the server to point an interested client to another …\nIndicates the URL to redirect a page to.\nIndicates the max number of intermediaries the request …\nError returned when max capacity of <code>HeaderMap</code> is exceeded\nIndicates where a fetch originates from.\nAn occupied entry\nA view into a single occupied location in a <code>HeaderMap</code>.\nHTTP/1.0 header usually used for backwards compatibility.\nDefines the authentication method that should be used to …\nContains the credentials to authenticate a user agent to a …\nAssociates a specific cryptographic public key with a …\nSends reports of pinning violation to the report-uri …\nIndicates the part of a document that the server should …\nContains the address of the previous web page from which a …\nGoverns which referrer information should be included with …\nInforms the web browser that the current page or frame …\nThe Retry-After response HTTP header indicates how long …\nThe |Sec-WebSocket-Accept| header field is used in the …\nThe |Sec-WebSocket-Extensions| header field is used in the …\nThe |Sec-WebSocket-Key| header field is used in the …\nThe |Sec-WebSocket-Protocol| header field is used in the …\nThe |Sec-WebSocket-Version| header field is used in the …\nContains information about the software used by the origin …\nUsed to send cookies from the server to the user agent.\nTells the client to communicate with HTTPS instead of …\nInforms the server of transfer encodings willing to be …\nAllows the sender to include additional fields at the end …\nSpecifies the form of encoding used to safely transfer the …\nA possible error when converting a <code>HeaderValue</code> to a string …\nUsed as part of the exchange to upgrade the protocol.\nSends a signal to the server expressing the client’s …\nContains a string that allows identifying the requesting …\nDetermines how to match future requests with cached …\nAdded by proxies to track routing.\nA vacant entry\nA view into a single empty location in a <code>HeaderMap</code>.\nAn drain iterator of all values associated with a single …\nAn iterator of all values associated with a single header …\nA mutable iterator of all values associated with a single …\n<code>HeaderMap</code> value iterator.\n<code>HeaderMap</code> mutable value iterator\nGeneral HTTP header contains information about possible …\nDefines the authentication method that should be used to …\nMarker used by the server to indicate that the MIME types …\nControls DNS prefetching.\nIndicates whether or not a browser should be allowed to …\nStop pages from loading when an XSS attack is detected.\nInserts a key-value pair into the map.\nInsert the value into the entry.\nConverts a <code>HeaderValue</code> to a byte slice.\nReturns a <code>str</code> representation of the header.\nReturns the number of headers the map can hold without …\nClears the map, removing all key-value pairs. Keeps the …\nReturns true if the map contains a value for the specified …\nClears the map, returning all entries as an iterator.\nGets the given key’s corresponding entry in the map for …\nPerforms a case-insensitive comparison of the string …\nPerforms a case-insensitive comparison of the string …\nExtend a <code>HeaderMap</code> with the contents of another <code>HeaderMap</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a byte slice to a <code>HeaderValue</code>.\nConverts a slice of bytes to an HTTP header name.\nAttempt to convert a <code>Bytes</code> buffer to a <code>HeaderValue</code>.\nConvert a <code>Bytes</code> directly into a <code>HeaderValue</code> without …\nConverts a HeaderName into a HeaderValue\nConverts a static string to a HTTP header name.\nConvert a static string to a <code>HeaderValue</code>.\nAttempt to convert a string to a <code>HeaderValue</code>.\nReturns a reference to the value associated with the key.\nGet a reference to the first value in the entry.\nReturns a view of all values associated with a key.\nReturns a mutable reference to the value associated with …\nGet a mutable reference to the first value in the entry.\nPanics\nInserts a key-value pair into the map.\nInsert the value into the entry.\nSets the value of the entry.\nInsert the value into the entry.\nSets the value of the entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a consuming iterator, that is, one that moves keys …\nTake ownership of the key\nConverts the <code>OccupiedEntry</code> into a mutable reference to the …\nReturns true if the map contains no elements.\nReturns true if the <code>HeaderValue</code> has a length of zero bytes.\nReturns <code>true</code> if the value represents sensitive data.\nAn iterator visiting all key-value pairs.\nReturns an iterator visiting all values associated with …\nReturns an iterator visiting all values associated with …\nAn iterator visiting all key-value pairs, with mutable …\nReturns an iterator mutably visiting all values associated …\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key\nReturns a reference to the entry’s key.\nAn iterator visiting all keys.\nReturns the number of keys stored in the map.\nReturns the number of headers stored in the map.\nReturns the length of <code>self</code>.\nCreate an empty <code>HeaderMap</code>.\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nEnsures a value is in the entry by inserting the default …\nEnsures a value is in the entry by inserting the result of …\nRemoves a key from the map, returning the value associated …\nRemove the entry from the map.\nRemove the entry from the map.\nRemove the entry from the map.\nReserves capacity for at least <code>additional</code> more headers to …\nMark that the header value represents sensitive …\nYields a <code>&amp;str</code> slice if the <code>HeaderValue</code> only contains …\nInserts a key-value pair into the map.\nGets the given key’s corresponding entry in the map for …\nInserts a key-value pair into the map.\nInsert the value into the entry.\nInsert the value into the entry.\nReserves capacity for at least <code>additional</code> more headers to …\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nAn iterator visiting all values.\nAn iterator visiting all values mutably.\nCreate an empty <code>HeaderMap</code> with the specified capacity.\nRepresents the authority component of a URI.\nA builder for <code>Uri</code>s.\nHTTP protocol scheme\nHTTP protocol over TLS.\nAn error resulting from a failed attempt to construct a …\nAn error resulting from a failed attempt to construct a …\nThe various parts of a URI.\nRepresents the path component of a URI\nThe port component of a URI.\nRepresents the scheme component of a URI\nThe URI component of a request.\nReturns the port number as a <code>str</code>.\nReturn a str representation of the authority\nReturns the path and query as a string component.\nReturn a str representation of the scheme\nReturns the port number as a <code>u16</code>.\nSet the <code>Authority</code> for this URI.\nThe authority component of a URI\nConsumes this builder, and tries to construct a valid <code>Uri</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nAttempt to convert a <code>Bytes</code> buffer to a <code>Authority</code>.\nAttempt to convert a <code>Bytes</code> buffer to a <code>PathAndQuery</code>.\nAttempt to convert an <code>Authority</code> from a static string.\nConvert a <code>PathAndQuery</code> from a static string.\nGet the host of this <code>Authority</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreates a new default instance of <code>Builder</code> to construct a …\nReturns the path component\nSet the <code>PathAndQuery</code> for this URI.\nThe origin-form component of a URI\nGet the port part of this <code>Authority</code>.\nGet the port of this <code>Authority</code> as a <code>u16</code>.\nReturns the query string component\nSet the <code>Scheme</code> for this URI.\nThe scheme component of a URI\nRepresents the cloneable parts of an <code>Error</code>.\nExtension methods for <code>std::io::Error</code> to be used with …\nMultiple consumer buffered read.\nMeasure read/write of an async task.\nInformation about the state of an async IO task.\nRepresents a future that generates an error if an <code>AsyncRead</code>…\nReturns an <code>Err(Error)</code> generated from the cloneable …\nUnwrap the inner task and final metrics.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if this reader does not pull from the inner …\nReturns <code>true</code> if this error represents the condition where …\nCurrent metrics.\nCreates a buffered reader.\nConstruct a limited reader.\nCopy the cloneable information from the <code>Error</code>.\nNumber of bytes read / estimated total.\nAverage read speed in bytes/second.\nContinue measuring a read/write task.\nSets <code>is_lazy</code>.\nStart measuring a new read/write task.\nTotal time for the entire task. This will continuously …\nNumber of bytes written / estimated total.\nAverage write speed in bytes/second.\nAll zeros.\nError deserializing response.\nLost connection with the worker process.\nRepresents a type that can be an input and output of IPC …\nArguments for <code>run_worker</code>.\nWorker run error.\nError serializing request.\nThe <em>App Process</em> and <em>Worker Process</em> must be build using the …\nRepresents a running worker process.\nInfo about a worker process crash.\nCrash error.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe task request data.\nRun a task in a free worker thread.\nIf the process was started by a <code>Worker</code> runs the worker …\nAwaits current tasks and kills the worker process.\nStart a worker process implemented in the current …\nStart a worker process from a custom configured <code>duct</code> …\nStart a worker process implemented in another executable …\nStart a worker process implemented in the current …\nWorker process exit code.\nFull capture of the worker stderr.\nFull capture of the worker stdout.")