searchState.loadedDescShard("zng_wgt_input", 0, "Input events and focus properties.\nAll cursor icons.\nIndicates an alias of/shortcut to something is to be …\nIndicates that the something can be scrolled in any …\nIndicates that a cell or set of cells may be selected. …\nIndicates that the item/column can be resized …\nA context menu is available for the object under the …\nIndicates something is to be copied. Often rendered as an …\nA simple crosshair (e.g., short line segments resembling a …\nNamed system dependent cursor icon.\nWindow custom cursor.\nWindow cursor source.\nThe platform-dependent default cursor. Often rendered as …\nThe east border to be moved.\nThe east and west borders to be moved.\nIndicates that something can be grabbed (dragged to be …\nIndicates that something is being grabbed (dragged to be …\nHelp is available for the object under the cursor. Often …\nDon’t show cursor.\nPlatform dependent named cursor icon.\nCustom cursor image, with fallback.\nIndicates something is to be moved.\nThe north border to be moved.\nThe north-east corner to be moved.\nThe north-east and south-west corners to be moved.\nIndicates that the dragged item cannot be dropped at the …\nIndicates that the requested action will not be carried …\nThe south and north borders to be moved.\nThe north-west corner to be moved.\nThe north-west and south-east corners to be moved.\nThe cursor is a pointer that indicates a link. Often …\nA progress indicator. The program is performing some …\nIndicates that the item/row can be resized vertically. …\nThe south border to be moved.\nThe south-east corner to be moved.\nThe south-west corner to be moved.\nIndicates text that may be selected. Often rendered as an …\nIndicates vertical-text that may be selected. Often …\nThe west border to be moved.\nIndicates that the program is busy and the user should …\nIndicates that something can be zoomed in. Often rendered …\nIndicates that something can be zoomed in. Often rendered …\nP  Defines how click events are generated for the widget.\nCommon commands.\nP  Sets the mouse pointer cursor displayed when hovering …\nDrag&amp;drop properties, event properties.\nIcon to use if the image cannot be displayed.\nKeyboard focus properties, <code>tab_index</code>, <code>focusable</code>, <code>on_focus</code>, …\nReturns the argument unchanged.\nConverts <code>true</code> to <code>CursorIcon::Default</code> and <code>false</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nGesture events and control, <code>on_click</code>, <code>click_shortcut</code> and …\nCustom icon image click point, when the image data does …\nPixel in the source image that is the exact mouse position.\nGet the icon, image fallback or <code>None</code> if is hidden.\nCustom icon image source.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  If the mouse pointer is over the widget, or a …\nP  If the mouse pointer is pressed or captured by the …\nP  If <code>is_cap_mouse_pressed</code> or <code>is_cap_touched_from_start</code>.\nP  If <code>is_cap_mouse_pressed</code>, <code>is_cap_touched_from_start</code> or …\nP  If a touch contact point is over the widget, or is over …\nP  If a touch contact point is over the widget, or is over …\nP  If the mouse pointer is over the widget or a descendant …\nP  If the mouse pointer is over the widget or a descendant …\nP  If the mouse pointer is pressed in the widget and it is …\nP  If <code>is_mouse_pressed</code> or <code>is_touched_from_start</code>.\nP  If <code>is_mouse_pressed</code>, <code>is_touched_from_start</code> or …\nP  If the widget was clicked by shortcut or accessibility …\nP  If a touch contact point is over the widget or a …\nP  If a touch contact that started over the widget is over …\nKeyboard events, <code>on_key_down</code>, <code>on_key_up</code> and more.\nMouse events, <code>on_mouse_move</code>, <code>on_mouse_enter</code>, <code>on_mouse_down</code> …\nMouse and touch capture properties.\nEstimated icon size and click spot in that size.\nCursor image source.\nTouch events, <code>on_touch_move</code>, <code>on_touch_tap</code>, <code>on_touch_start</code> …\nP  Applies transforms from touch gestures on the widget.\nEnable/disable <code>on_copy</code> and <code>on_pre_copy</code> command handles.\nEnable/disable <code>on_cut</code> and <code>on_pre_cut</code> command handles.\nEnable/disable <code>on_new</code> and <code>on_pre_new</code> command handles.\nEnable/disable <code>on_open</code> and <code>on_pre_open</code> command handles.\nEnable/disable <code>on_paste</code> and <code>on_pre_paste</code> command handles.\nEnable/disable <code>on_save_as</code> and <code>on_pre_save_as</code> command …\nEnable/disable <code>on_save</code> and <code>on_pre_save</code> command handles.\nEnable/disable <code>on_settings</code> and <code>on_pre_settings</code> command …\nRepresents the <strong>context menu open</strong> action.\nRepresents the <strong>new</strong> action.\nRepresents the <strong>open</strong> action.\nRepresents the <strong>save-as</strong> action.\nRepresents the <strong>save</strong> action.\nRepresents the <strong>open settings</strong> action.\nP Defines if <code>on_copy</code> and <code>on_pre_copy</code> command handles are …\nP Defines if <code>on_cut</code> and <code>on_pre_cut</code> command handles are …\nP Defines if <code>on_new</code> and <code>on_pre_new</code> command handles are …\nP Defines if <code>on_open</code> and <code>on_pre_open</code> command handles are …\nP Defines if <code>on_paste</code> and <code>on_pre_paste</code> command handles are …\nP Defines if <code>on_save</code> and <code>on_pre_save</code> command handles are …\nP Defines if <code>on_save_as</code> and <code>on_pre_save_as</code> command handles …\nP Defines if <code>on_settings</code> and <code>on_pre_settings</code> command …\nP  On copy command.\nP  On cut command.\nP  On new command.\nP  On open command.\nP  On paste command.\nP Preview <code>on_copy</code> command.\nP Preview <code>on_cut</code> command.\nP Preview <code>on_new</code> command.\nP Preview <code>on_open</code> command.\nP Preview <code>on_paste</code> command.\nP Preview <code>on_save</code> command.\nP Preview <code>on_save_as</code> command.\nP Preview <code>on_settings</code> command.\nP  On save command.\nP  On save-as command.\nP  On settings command.\nP  If this widget can be dragged in a drag&amp;drop operation.\nP  If the dragging cursor is over the widget or a …\nP  If the dragging cursor is over the widget or a …\nP  If the draggable widget is dragging.\nP  Draggable widget stopped dragging.\nP  Dragging cursor entered the widget area and the widget …\nP  Dragging cursor entered or exited the widget area and …\nP  Dragging cursor exited the widget area and the widget …\nP  Draggable widget started dragging.\nP  Dragging cursor dropped data in the widget area and the …\nP Preview <code>on_drag_end</code> event.\nP Preview <code>on_drag_enter</code> event.\nP Preview <code>on_drag_hovered</code> event.\nP Preview <code>on_drag_leave</code> event.\nP Preview <code>on_drag_start</code> event.\nP Preview <code>on_drop</code> event.\nExit focus if a click event was send to the widget or …\nExit focus if a click event was send to the enabled widget …\nExit focus if the click event was received by the widget …\nPadding offsets of the foreground highlight when the …\nBorder sides of the foreground highlight when the widget …\nBorder widths of the foreground highlight when the widget …\nBehavior of a widget when a click event is send to it or a …\nm  Focusable widget mixin. Enables keyboard focusing on …\nClick event always ignored.\nP  Widget is the ALT focus scope.\nP  Keyboard arrows navigation within this focus scope.\nP  Behavior of a widget when a click event is send to it …\nP  Sets the foreground highlight values used when the …\nP  Sets the foreground highlight values used when the …\nP  If the widget is focused on info init.\nP  If the widget is focused on info init.\nP  Makes the widget into a focus scope when set to <code>true</code>.\nP  Behavior of a focus scope when it receives direct focus.\nP  Keyboard shortcuts that focus this widget or its first …\nP  Makes the widget focusable when set to <code>true</code>.\nP  Makes the widget focusable when set to <code>true</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  If the widget or one of its descendants has keyboard …\nP  If the widget or one of its descendants has keyboard …\nP  If the widget or one of its descendants has keyboard …\nP  If the widget or one of its descendants has keyboard …\nP  If the widget has keyboard focus.\nP  If the widget has keyboard focus.\nP  If the widget has keyboard focus and the user is using …\nP  If the widget has keyboard focus and the user is using …\nP  If the widget will be focused when a parent scope is …\nP  If the widget will be focused when a parent scope is …\nP  If the widget or one of its descendants will be focused …\nP  If the widget or one of its descendants will be focused …\nP  Widget lost direct keyboard focus.\nP  Widget got direct keyboard focus.\nP  Focus changed in the widget or its descendants.\nP  Widget or one of its descendants got focus.\nP  Widget or one of its descendants lost focus.\nP Preview <code>on_blur</code> event.\nP Preview <code>on_focus</code> event.\nP Preview <code>on_focus_changed</code> event.\nP Preview <code>on_focus_enter</code> event.\nP Preview <code>on_focus_leave</code> event.\nP  If the widget return focus to the previous focus when …\nP  If the widget return focus to the previous focus when …\nP  If directional navigation from outside this widget …\nP  Customizes the widget order during TAB navigation.\nP  Tab navigation within this focus scope.\n<code>CLICK_EVENT</code> arguments.\nSequential click count. Number <code>1</code> is single click, <code>2</code> is …\nP  Keyboard shortcuts that focus and clicks this widget.\nP  Keyboard shortcuts that focus and context clicks this …\nThe <code>target</code>.\nId of device that generated the event.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nIf the event counts as a <em>context menu</em> request.\nIf the <code>click_count</code> is <code>2</code>.\nIf this event was generated by accessibility automation …\nIf this event was generated by a keyboard device.\nIf this event was generated by a mouse device.\nIf this event was generated by a touch device.\nIf the event was caused by a press of <code>mouse_button</code>.\nIf the event counts as <em>primary</em> click.\nIf the event was auto-generated by holding the key or …\nIf the <code>click_count</code> is <code>1</code>.\nIf the <code>click_count</code> is <code>3</code>.\nWhat modifier keys where pressed when this event happened.\nNew args from values that convert into the argument types.\nArguments for event that happened now (<code>INSTANT.now</code>).\nP  On widget click from any source and of any click count …\nP  On widget double click from any source and the widget …\nP  On widget click from any source but excluding …\nP  On widget triple click from any source and the widget …\nP  On widget click with the primary button and any click …\nP  On widget click with the secondary/context button and …\nP  On widget click from any source and of any click count …\nP  On widget double click with the primary button and the …\nP Preview <code>on_any_click</code> event.\nP Preview <code>on_any_double_click</code> event.\nP Preview <code>on_any_single_click</code> event.\nP Preview <code>on_any_triple_click</code> event.\nP Preview <code>on_click</code> event.\nP Preview <code>on_context_click</code> event.\nP Preview <code>on_disabled_click</code> event.\nP Preview <code>on_double_click</code> event.\nP Preview <code>on_single_click</code> event.\nP Preview <code>on_triple_click</code> event.\nP  On widget click with the primary button, excluding …\nP  On widget triple click with the primary button and the …\nGets the click position, if the click was generated by a …\nThe shortcut the generated this event.\nSpecific info from the source of this event.\nThe mouse input top-most hit or the focused element at the …\nInstant the event happened.\nId of window that received the event.\nP  Event fired when a keyboard key is pressed or released …\nP  Event fired when a keyboard key is pressed and the …\nP  Event fired when a keyboard key is pressed or released …\nP  Event fired when a keyboard key is released and the …\nP Preview <code>on_disabled_key_input</code> event.\nP Preview <code>on_key_down</code> event.\nP Preview <code>on_key_input</code> event.\nP Preview <code>on_key_up</code> event.\nP  Mouse clicked on the disabled widget with any button, …\nP  Mouse clicked on the disabled widget with the primary …\nP  Mouse entered or left the widget and descendant widgets …\nP  Mouse button pressed or release while the cursor is …\nP  Mouse wheel scrolled while pointer is hovering widget …\nP  Mouse clicked on the widget with any button and …\nP  Mouse double clicked on the widget with any button and …\nP  Mouse clicked on the widget with any button but …\nP  Mouse triple clicked on the widget with any button and …\nP  Mouse clicked on the widget with the primary button …\nP  Mouse double clicked on the widget with the primary …\nP  Mouse button pressed while the cursor is over the …\nP  Mouse is now over the widget or a descendant widget, …\nP  Mouse entered or left the widget and descendant widgets …\nP  Mouse button pressed or released while the cursor is …\nP  Mouse is no longer over the widget or any descendant …\nP  Mouse cursor moved over the widget and cursor capture …\nP  Mouse wheel scrolled while pointer is hovering the …\nP  Mouse clicked on the widget with the primary button …\nP  Mouse triple clicked on the widget with the primary …\nP  Mouse button released while the cursor if over the …\nP  Mouse wheel scrolled while pointer is hovering widget …\nP  Mouse wheel scrolled while pointer is hovering the …\nP Preview <code>on_disabled_mouse_any_click</code> event.\nP Preview <code>on_disabled_mouse_click</code> event.\nP Preview <code>on_disabled_mouse_hovered</code> event.\nP Preview <code>on_disabled_mouse_input</code> event.\nP Preview <code>on_disabled_mouse_wheel</code> event.\nP Preview <code>on_mouse_any_click</code> event.\nP Preview <code>on_mouse_any_double_click</code> event.\nP Preview <code>on_mouse_any_single_click</code> event.\nP Preview <code>on_mouse_any_triple_click</code> event.\nP Preview <code>on_mouse_click</code> event.\nP Preview <code>on_mouse_double_click</code> event.\nP Preview <code>on_mouse_down</code> event.\nP Preview <code>on_mouse_enter</code> event.\nP Preview <code>on_mouse_hovered</code> event.\nP Preview <code>on_mouse_input</code> event.\nP Preview <code>on_mouse_leave</code> event.\nP Preview <code>on_mouse_move</code> event.\nP Preview <code>on_mouse_scroll</code> event.\nP Preview <code>on_mouse_single_click</code> event.\nP Preview <code>on_mouse_triple_click</code> event.\nP Preview <code>on_mouse_up</code> event.\nP Preview <code>on_mouse_wheel</code> event.\nP Preview <code>on_mouse_zoom</code> event.\nMouse and touch capture mode.\nMouse and touch events inside the widget sub-tree …\nMouse and touch events redirected to the widget.\nMouse and touch captured by the window only.\nP  Capture mouse and touch for the widget on press.\nP  Capture mouse and touch for the widget on init.\n<code>CaptureMode::Window</code>\nReturns the argument unchanged.\nConvert <code>true</code> to <code>CaptureMode::Widget</code> and <code>false</code> to …\nCalls <code>U::from(self)</code>.\nP  Widget acquired mouse and touch capture.\nP  Widget lost mouse and touch capture.\nP  Widget acquired or lost mouse and touch capture.\nP Preview <code>on_got_pointer_capture</code> event.\nP Preview <code>on_lost_pointer_capture</code> event.\nP Preview <code>on_pointer_capture_changed</code> event.\nP  Touch contact started or ended over the widget, it is …\nP  Single touch contact was made and held in place for a …\nP  Touch tap on the widget and it is disabled.\nP Preview <code>on_disabled_touch_input</code> event.\nP Preview <code>on_disabled_touch_long_press</code> event.\nP Preview <code>on_disabled_touch_tap</code> event.\nP Preview <code>on_touch_cancel</code> event.\nP Preview <code>on_touch_end</code> event.\nP Preview <code>on_touch_enter</code> event.\nP Preview <code>on_touch_input</code> event.\nP Preview <code>on_touch_leave</code> event.\nP Preview <code>on_touch_long_press</code> event.\nP Preview <code>on_touch_move</code> event.\nP Preview <code>on_touch_start</code> event.\nP Preview <code>on_touch_tap</code> event.\nP Preview <code>on_touch_transform</code> event.\nP Preview <code>on_touched</code> event.\nP  Touch contact canceled over the widget, it is enabled …\nP  Touch contact ended over the widget, it is enabled and …\nP  Touch contact is now over the widget or a descendant …\nP  Touch contact started or ended over the widget, it is …\nP  Touch contact is no longer over the widget or any …\nP  Single touch contact was made and held in place for a …\nP  Touch contact moved over the widget and cursor capture …\nP  Touch contact started over the widget, it is enabled …\nP  Touch tap on the widget and it is enabled.\nP  Touch gesture to translate, scale or rotate happened …\nP  Touch contact entered or left the widget and …")