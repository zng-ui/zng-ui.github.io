searchState.loadedDescShard("zng_wgt_window", 0, "Window widget, properties, properties and nodes.\nDefines if a widget load affects the parent window load.\nDon’t save nor restore state.\nWidget does not hold back window load.\nSave and restore state.\nWidget requests a <code>WindowLoadingHandle</code> and retains it until …\nWindow or widget persistence config.\nW  A window container.\nP Binds the <code>accent_color</code> window var with the property …\nP Binds the <code>accent_color</code> window var with the property …\nc  If semi-transparent content is see-through, mixing with …\nc  If semi-transparent content is see-through, mixing with …\nP Binds the <code>always_on_top</code> window var with the property …\nP Binds the <code>always_on_top</code> window var with the property …\nP Binds the <code>auto_size</code> window var with the property value.\nP Binds the <code>auto_size</code> window var with the property value.\nP Binds the <code>auto_size_origin</code> window var with the property …\nP Binds the <code>auto_size_origin</code> window var with the property …\nP Binds the <code>chrome</code> window var with the property value.\nP Binds the <code>chrome</code> window var with the property value.\nP  Window clear color.\nP  Window clear color.\nP Binds the <code>color_scheme</code> window var with the property …\nP Binds the <code>color_scheme</code> window var with the property …\nP  Block window load until <code>CONFIG.status</code> is idle.\nP  Block window load until <code>CONFIG.status</code> is idle.\nP  Adorner property specific for custom chrome overlays.\nP  Adorner property specific for custom chrome overlays.\nReturns the block deadline if it is enabled and the …\nEnabled, no key, delay 1s.\nDefault, enabled, no key.\nEnabled value.\nP Binds the <code>enabled_buttons</code> window var with the property …\nP Binds the <code>enabled_buttons</code> window var with the property …\nGets the config key if is enabled and can enable on the …\nWindow events, <code>on_window_open</code> and <code>on_window_close_requested</code>…\nCustom window chrome adorner used when the window manager …\nP Binds the <code>font_size</code> window var with the property value.\nP Binds the <code>font_size</code> window var with the property value.\nP Binds the <code>frame_capture_mode</code> window var with the …\nP Binds the <code>frame_capture_mode</code> window var with the …\nConvert <code>true</code> to default config and <code>false</code> to <code>None</code>.\nReturns the argument unchanged.\nConverts to enabled with the duration timeout.\nReturns the argument unchanged.\nConverts <code>true</code> to <code>BlockWindowLoad::enabled(1.secs())</code> and …\nReturns the argument unchanged.\nc  Imaginary monitor used by the window when it runs in …\nc  Imaginary monitor used by the window when it runs in …\nP Binds the <code>height</code> of the <code>size</code> window var with the …\nP Binds the <code>height</code> of the <code>size</code> window var with the …\nP Binds the <code>icon</code> window var with the property value.\nP Binds the <code>icon</code> window var with the property value.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if it is disabled.\nReturns <code>true</code> if it is enabled.\nc  Lock-in kiosk mode.\nc  Lock-in kiosk mode.\nP Binds the <code>height</code> of the <code>max_size</code> window var with the …\nP Binds the <code>height</code> of the <code>max_size</code> window var with the …\nP Binds the <code>max_size</code> window var with the property value.\nP Binds the <code>max_size</code> window var with the property value.\nP Binds the <code>width</code> of the <code>max_size</code> window var with the …\nP Binds the <code>width</code> of the <code>max_size</code> window var with the …\nP Binds the <code>height</code> of the <code>min_size</code> window var with the …\nP Binds the <code>height</code> of the <code>min_size</code> window var with the …\nP Binds the <code>min_size</code> window var with the property value.\nP Binds the <code>min_size</code> window var with the property value.\nP Binds the <code>width</code> of the <code>min_size</code> window var with the …\nP Binds the <code>width</code> of the <code>min_size</code> window var with the …\nP Binds the <code>modal</code> window var with the property value.\nP Binds the <code>modal</code> window var with the property value.\nP Binds the <code>monitor</code> window var with the property value.\nP Binds the <code>monitor</code> window var with the property value.\nP Binds the <code>movable</code> window var with the property value.\nP Binds the <code>movable</code> window var with the property value.\nP  Gets if <code>chrome</code> is <code>true</code>, <code>state</code> is not fullscreen but …\nP  Gets if <code>chrome</code> is <code>true</code>, <code>state</code> is not fullscreen but …\nP  On window close.\nP  On window close.\nP  On window close requested.\nP  On window close requested.\nP  On window is no longer fullscreen.\nP  On window is no longer fullscreen.\nP  On window frame rendered.\nP  On window frame rendered.\nP  On window enter one of the fullscreen states.\nP  On window enter one of the fullscreen states.\nP  Event just after the window loads.\nP  Event just after the window loads.\nP  On window maximized.\nP  On window maximized.\nP  On window minimized.\nP  On window minimized.\nP  On window position changed.\nP  On window position changed.\nP  Event just after the window opens.\nP  Event just after the window opens.\nP  On window size changed.\nP  On window size changed.\nP  On window state changed to <code>Normal</code>.\nP  On window state changed to <code>Normal</code>.\nP  On window state changed.\nP  On window state changed.\nP  On window exited the maximized state.\nP  On window exited the maximized state.\nP  On window exited the minimized state.\nP  On window exited the minimized state.\nP Binds the <code>parent</code> window var with the property value.\nP Binds the <code>parent</code> window var with the property value.\nP Binds the <code>position</code> window var with the property value.\nP Binds the <code>position</code> window var with the property value.\nP  Gets if <code>WINDOWS.system_chrome</code> prefers custom chrome.\nP  Gets if <code>WINDOWS.system_chrome</code> prefers custom chrome.\nc  Render performance mode overwrite for this window, if …\nc  Render performance mode overwrite for this window, if …\nP Binds the <code>resizable</code> window var with the property value.\nP Binds the <code>resizable</code> window var with the property value.\nP  Save and restore the window state.\nP  Save and restore the window state.\nHelper node for implementing widgets save.\nP Binds the <code>size</code> window var with the property value.\nP Binds the <code>size</code> window var with the property value.\nc  If the window is steals keyboard focus on open.\nc  If the window is steals keyboard focus on open.\nc  Defines how the window is positioned when it first …\nc  Defines how the window is positioned when it first …\nP Binds the <code>state</code> window var with the property value.\nP Binds the <code>state</code> window var with the property value.\nP Binds the <code>taskbar_visible</code> window var with the property …\nP Binds the <code>taskbar_visible</code> window var with the property …\nP Binds the <code>title</code> window var with the property value.\nP Binds the <code>title</code> window var with the property value.\nP Binds the <code>visible</code> window var with the property value.\nP Binds the <code>visible</code> window var with the property value.\nBuild a <code>WindowRoot</code>.\nStart building a new instance.\nGets the widget type info.\nP Binds the <code>width</code> of the <code>size</code> window var with the property …\nP Binds the <code>width</code> of the <code>size</code> window var with the property …\nP Binds the <code>x</code> of the <code>position</code> window var with the property …\nP Binds the <code>x</code> of the <code>position</code> window var with the property …\nP Binds the <code>y</code> of the <code>position</code> window var with the property …\nP Binds the <code>y</code> of the <code>position</code> window var with the property …\nHandle expiration deadline, if the widget takes longer …\nConfig key that identifies the window or widget.\nP  On window frame rendered.\nP  On Input Method Editor event.\nP Preview <code>on_frame_image_ready</code> event.\nP Preview <code>on_ime</code> event.\nP Preview <code>on_window_changed</code> event.\nP Preview <code>on_window_close</code> event.\nP Preview <code>on_window_close_requested</code> event.\nP Preview <code>on_window_exited_fullscreen</code> event.\nP Preview <code>on_window_fullscreen</code> event.\nP Preview <code>on_window_load</code> event.\nP Preview <code>on_window_maximized</code> event.\nP Preview <code>on_window_minimized</code> event.\nP Preview <code>on_window_moved</code> event.\nP Preview <code>on_window_open</code> event.\nP Preview <code>on_window_resized</code> event.\nP Preview <code>on_window_restored</code> event.\nP Preview <code>on_window_state_changed</code> event.\nP Preview <code>on_window_unmaximized</code> event.\nP Preview <code>on_window_unminimized</code> event.\nP  On window moved, resized or other state changed.\nP  On window closed.\nP  On window close requested.\nP  On window state changed from <code>WindowState::is_fullscreen</code>.\nP  On window state changed to <code>WindowState::is_fullscreen</code>.\nP  On window loaded.\nP  On window state changed to <code>WindowState::Maximized</code>.\nP  On window state changed to <code>WindowState::Minimized</code>.\nP  On window position changed.\nP  On window opened.\nP  On window size changed.\nP  On window state changed to <code>WindowState::Normal</code>.\nP  On window state changed.\nP  On window state changed from <code>WindowState::Maximized</code>.\nP  On window state changed from <code>WindowState::Minimized</code>.")