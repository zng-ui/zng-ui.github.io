searchState.loadedDescShard("zng_wgt_access", 0, "Properties that define accessibility metadata.\nIndicates the entered value does not conform to the format …\nAccessibility command without associated data.\nAccessibility role of a node in the accessibility tree.\nIdentifies important, and usually time-sensitive, …\nIdentifies a modal alert dialogs that interrupt a user’s …\nIndicates to assistive technologies that a widget and all …\nIndicates a section of a page that could easily stand on …\nItems are sorted in ascending order by this column.\nIndicates that updates to the region have the highest …\nDefines how inputting text could trigger display of one or …\nAn input to offer both models at the same time. When a …\nIdentifies the global header, which usually includes a …\nClickable widgets that trigger a response when activated …\nIdentifies a widget as being a cell in a tabular container …\ncheckable interactive widget.\n<code>AccessCmd::Click</code>\nIdentifies a column of cells within a tabular structure.\nIdentifies a widget as being a cell in a row contains …\nIdentifies a widget as an input that controls another …\nIdentifies a supporting section that relates to the main …\nIdentifies a footer, containing identifying information …\nKind of current item a widget represents.\nRepresents the current date within a collection of dates …\nIndicates the widget is a definition of a term or concept.\nItems are sorted in descending order by this column.\nIdentifies a widget that has content separate from the …\nThe popup is a dialog.\nFocusable content within complex composite widgets or …\nIdentifies a dynamic scrollable list of articles in which …\nIdentify a figure inside page content where appropriate …\n<code>AccessCmd::Focus</code>\n<code>AccessCmd::FocusNavOrigin</code>\nIdentify a group of widgets that are a register form.\nIndicates the entered value contains a grammatical error.\nIdentifies a container of columns, rows and cells.\nThe popup is a grid.\nIdentifies a cell in a grid widget.\nIdentifies a set of user interface objects that is not …\nDefines a heading to a page or section, with …\nWidget is horizontal.\nText suggesting one way to complete the provided input may …\nIdentifies a widget container that should be considered as …\n<code>AccessCmd::Increment</code>\nDefines the kind of invalid data error of a widget.\nRepresents the current item within a set.\nWhen a user is providing input, a widget containing a …\nInteractive reference to a resource\nIdentifies a list of items.\nIdentifies a list of selectable items.\nThe popup is a list-box.\nIdentifies an item inside a list of items.\nDefines how a live update is communicated to the user.\nRepresents the current location within an environment or …\nIdentifies a widget that creates a live region where new …\nIdentifies the primary content.\nIdentifies a live region containing non-essential …\nIndicates that the content represents a mathematical …\nIdentifies a composite widget that offers a list of …\nThe popup is a menu.\nIdentifies the part of a menu that always stays visible.\nIndicates the widget is an option in a set of choices …\nWidget is a checkable option in a menu.\nWidget is a selectable option in a menu where only one …\nIdentifies major groups of links used for navigating the …\nIdentifies a section whose content is parenthetic or …\nIndicates that updates to the region should <strong>not</strong> be …\nSelectable items in a list-box.\nWidget orientation.\nRepresents the current page within a set of pages such as …\nIndicates that updates to the region should be presented …\nPopup type.\nDefines a widget that displays the progress status for …\nSelectable items in a list where only one item may be …\nIdentifies a group of radio buttons.\nIdentifies significant areas. Usually set with …\n<code>AccessCmd::ReplaceSelectedText</code>\nIdentifies a row of cells within a tabular structure.\nIdentifies a group of rows within a tabular structure.\nIdentifies a cell containing header information for a row …\nIndicates the entered value contains a spelling error.\n<code>AccessCmd::Scroll</code>\nWidget controls the scrolling of content within a viewing …\nIdentifies the search area or form.\nIdentifies a text-box that is used for searching.\n<code>AccessCmd::SelectText</code>\nIdentifies a divider that separates and distinguishes …\n<code>AccessCmd::SetExpanded</code>\n<code>AccessCmd::SetNumber</code>\n<code>AccessCmd::SetString</code>\n<code>AccessCmd::SetToolTipVis</code>\nDefines an input where the user selects a value from …\nSort direction.\nDefines a type of range that expects the user to select a …\nIdentifies a live region containing advisory information …\nRepresents the current step within a process such as the …\nIdentifies a check-box with named states.\nIdentifies a widget in a tab-list that selects the active …\nIdentifies the widget that serves as the container for a …\nIdentifies a container for the active tab.\nIdentifies the widget containing the role as having a …\nIdentifies a word or phrase with an optional corresponding …\nIdentifies a widget that allows the input of free-form …\nRepresents the current time within a set of times such as …\nIndicates to assistive technologies that a widget is a …\nDefines the containing widget as a collection of commonly …\nIdentifies a contextual text bubble that displays a …\nWidget that allows the user to select one or more items …\nThe popup is a tree.\nIdentifies a widget as being grid whose rows can be …\nIdentifies an item in a tree widget.\nWidget is vertical.\nP  Append supported access commands.\nP  Sets the widget kind for accessibility services.\nP  Defines if the widget and descendants can be present in …\nP  Identifies the currently active widget when focus is on …\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nP  Set how input text triggers display of one or more …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nP  If the widget is checked (<code>Some(true)</code>), unchecked (…\nP  Sets the total number of columns in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the widget’s column index in the parent table or …\nP  Sets the number of columns spanned by the widget in the …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nP  Append widgets whose contents or presence are …\nP  Indicates that the widget represents the current item …\nP  Append widgets that describes this widget to the …\nP  Append widgets that provide additional information …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nP  Indicates that the widget is an error message for the …\nP  Indicate that the widget toggles the visibility of …\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nP  Append options for next widget to be read by screen …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  Indicates that the widget’s data is invalid with …\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nP  Sets the number of items in the current set of list …\nP  Sets the widget’s number or position in the current …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nP  Sets a custom name for the widget in accessibility info.\nP  Append widgets that provide additional information …\nP  Uses the accessible children as <code>labelled_by</code>.\nP  Defines the language used by screen-readers to read …\nP  Sets the hierarchical level of the widget within a …\nP  Indicate that the widget can change, how the change can …\nP  Sets if the widget is modal when displayed.\nP  Indicates that the user may select more than one item …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nP  Access requested a click.\nP  Access requested to expand or collapse the widget …\nP  Access requested to increment or decrement the widget …\nP  Access requested a number input.\nP  Access requested a scroll command.\nP  Access requested a text selection.\nP  Access requested a text input/replace.\nP  Access requested to show or hide the widget’s tooltip.\nP Preview <code>on_access_click</code> event.\nP Preview <code>on_access_expander</code> event.\nP Preview <code>on_access_increment</code> event.\nP Preview <code>on_access_number</code> event.\nP Preview <code>on_access_scroll</code> event.\nP Preview <code>on_access_selection</code> event.\nP Preview <code>on_access_text</code> event.\nP Preview <code>on_access_tooltip</code> event.\nP  Indicates whether the widget’s orientation is …\nP  Append <code>owned</code> widgets that are <em>children</em> of this widget, …\nP  Short hint (a word or short phrase) intended to help …\nP  Indicates the availability and type of interactive …\nP  Indicates that the widget is not editable, but is …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nP  Indicates that user input is required on the widget …\nP  Sets the total number of rows in a <code>Table</code>, <code>Grid</code>, or …\nP  Sets the widget’s row index in the parent table or …\nP  Sets the number of rows spanned by the widget in the …\nP  Sets the amount scrolled horizontally if allowed.\nP  Sets the amount scrolled vertically if allowed.\nP  Indicates that the widget is selected.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nP  Sets the sort direction for the table or grid items.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nP  Set the current value.\nP  Set the maximum value (inclusive).\nP  Set the minimum value (inclusive).\nP  Set a text that is a readable version of the current …")