searchState.loadedDescShard("zng_ext_input", 0, "Input events and focused widget.\nKeyboard focus manager.\nAggregate events.\nKeyboard manager.\nMouse events and service.\nMouse and touch capture.\nTouch events and service.\n<code>FocusTarget::Alt</code>\nDefault focusable widget index.\nMove focus to the current widget ALT scope or out of it.\nTab is contained in the scope, does not move after the …\nArrows move the focus inside the scope only, stops at the …\nTab moves the focus through the scope continuing out after …\nArrows move the focus through the scope continuing out of …\nTab is contained in the scope, after the last item moves …\nArrows move the focus inside the scope only, cycles back …\nUp, right, down, left.\n<code>FocusTarget::Down</code>\nMove focus to widget.\nMove focus to the widget if it is focusable or to first …\nMove focus to the widget if it is focusable or to the …\nMove focus to the widget if it is focusable, or to the …\nDirectional navigation configuration of a focus scope.\nMove focus bellow current.\n<code>FocusTarget::Enter</code>\n<code>FocusTarget::Exit</code>\nMove focus to the first focusable descendant of the …\nMove focus to the first focusable ancestor of the current …\nKeyboard focus service.\nKeyboard focused widget changed event.\nFocus the first descendant considering the TAB index, if …\nLike <code>FirstDescendant</code>, but also focus the descendant even …\n<code>FOCUS_CHANGED_EVENT</code> arguments.\nThe cause of a <code>FOCUS_CHANGED_EVENT</code>.\nFocus metadata associated with a widget info tree.\nBuilder for <code>FocusInfo</code> accessible in a <code>WidgetInfoBuilder</code>.\nA <code>WidgetInfoTree</code> wrapper for querying focus info out of …\nApplication extension that manages keyboard focus.\nRepresents the <code>FocusTarget</code> actions that move focus from …\nFocus change request.\nThe widget is a focusable focus scope.\nBehavior of a focus scope when it receives direct focus.\nFocus request target.\nThe widget is focusable as a single item.\nLast possible widget index.\n<code>FocusTarget::Left</code>\nFocus the descendant that was last focused before focus …\nLike <code>LastFocused</code>, but also focus the descendant even if it…\nMove focus to the left of current.\n<code>FocusTarget::Next</code>\nMove focus to next from current in screen, or to first in …\nTab can move into the scope, but does not move the focus …\nArrows can move into the scope, but does not move the …\nThe widget is not focusable.\nTab moves into the scope once but then moves out of the …\n<code>FocusTarget::Prev</code>\nMove focus to previous from current in screen, or to last …\nScope return focus widget changed event.\n<code>FocusTarget::Right</code>\nA previously focused widget, was removed or moved.\nThe focus changed trying to fulfill the request.\n<code>RETURN_FOCUS_CHANGED_EVENT</code> arguments.\nMove focus to the right of current.\nWidget is skipped during tab navigation.\nA focus scope got focus causing its <code>FocusScopeOnFocus</code> …\nWidget tab navigation position within a focus scope.\nTab navigation configuration of a focus scope.\n<code>FocusTarget::Up</code>\nMove focus above current.\nJust focus the scope widget.\n<code>WidgetInfo</code> wrapper that adds focus information for each …\n<code>WidgetInfo</code> extensions that build a <code>WidgetFocusInfo</code>.\nCreate a new tab index that is guaranteed to be after <code>AUTO</code> …\nGet a flags value with all known bits set.\nNew <code>FocusTarget::Alt</code> request.\nCurrent ALT return focus.\nIf the widget is definitely an ALT focus scope or not.\nReference the ALT focus scope <em>closest</em> with the current …\nIterator over focusable parent -&gt; grandparent -&gt; .. -&gt; …\nIf set to a duration, starts highlighting focus when a …\nCreate a new tab index that is guaranteed to be before <code>AUTO</code>…\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWhat caused this event.\nCommands that control focus and <code>Command</code> extensions.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nIf the tree info contains the widget and it is focusable.\n<code>AUTO</code>\n<code>FirstDescendant</code>\nThe <code>prev_focus</code> and <code>new_focus</code>.\nThe <code>prev_return</code>, <code>new_return</code> and <code>scope</code>.\nIterator over the focusable widgets contained by this …\nThe intersection of a source flags value with the …\nNew <code>FocusTarget::Direct</code> request.\nNew <code>FocusTarget::DirectOrEnter</code> request.\nNew <code>FocusTarget::DirectOrExit</code> request.\nNew <code>FocusTarget::DirectOrRelated</code> request.\nDirectional navigation within this widget, if set turns …\nDirectional navigation mode.\nNew <code>FocusTarget::Down</code> request.\nGet a flags value with all bits unset.\nFocus navigation actions that can move the focus away from …\nFocus navigation actions that can move the focus away from …\nNew <code>FocusTarget::Enter</code> request.\nNew <code>FocusTarget::Exit</code> request.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nFirst descendant considering TAB index.\nRequest a focus update.\nFocus the ALT scope from the navigation origin or the …\nIf <code>DISABLED</code> widgets can receive focus.\nIf <code>DISABLED</code> widgets are focusable in this tree.\nIf <code>DISABLED</code> widgets are focusable in this tree.\nFocus the nearest downward widget from the navigation …\nFocus the first logical descendant that is focusable from …\nFocus the first logical ancestor that is focusable from …\nIf <code>Hidden</code> widgets can receive focus.\nIf <code>Hidden</code> widgets are focusable in this tree.\nIf <code>Hidden</code> widgets are focusable in this tree.\nWidget focus metadata.\nWidget focus metadata, all things equal except the widget …\nFocus the nearest widget to the left of the navigation …\nFocus the logical next widget from the navigation origin …\nFocus the logical previous widget from the navigation …\nFocus the nearest widget to the right of the navigation …\nClone a reference to the <code>FocusInfoTree</code> that owns this …\nFocus the nearest upward widget from the navigation origin …\nFocus the widget if it is focusable and change the …\nFocus the widget if it is focusable, else focus the first …\nFocus the widget if it is focusable, else focus the first …\nFocus the widget if it is focusable, else focus the first …\nIf the widget is definitely focusable or not.\nClosest focusable in the same scope below this widget.\nClosest focusable in the same scope to the left of this …\nSets <code>focusable</code>, only if it was not already set.\nClosest focusable in the same scope to the right of this …\nReference the focusable widget closest to the window root.\nClosest focusable in the same scope above this widget.\nCurrent focused widget.\nIf the window should be focused even if another app has …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>TabIndex::not_skip</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nReference to the widget in the tree, if it is present and …\nReference to the first focusable widget or parent in the …\nif the widget was not in the <code>prev_return</code> and is in the …\nIf the focusable has any focusable descendant that is not …\nSchedules enabling of <code>is_highlighting</code> for next update.\nIf the widget should visually indicate that it has …\nIf the focused widget should visually indicate that it is …\nIf focus is in an ALT scope.\nWidget is in a ALT scope or is an ALT scope.\nFull widget info.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWraps the <code>WidgetInfo</code> in a <code>WidgetFocusInfo</code> even if it is …\nReturns a wrapped <code>WidgetFocusInfo</code> if the <code>WidgetInfo</code> is …\nIf is a custom index placed after auto.\nWhether all known bits in this flags value are set.\nIf <code>scope</code> is an ALT scope and <code>prev_return</code> or <code>new_return</code> if …\nIs ALT focus scope.\nIf is an ALT focus scope.\nIf is <code>AUTO</code>.\nIf is a custom index placed before auto.\nIf <code>widget_id</code> is the previous focus and is not now.\nWhether all bits in this flags value are unset.\nIf the focus is still in the same widget path, but some or …\nIf <code>widget_id</code> is the new focus and was not before.\nIf <code>widget_id</code> is the new focus or a parent of the new focus …\nIf <code>widget_id</code> is the previous focus or a parent of the …\nIf the <code>focused</code> path contains the given <code>widget_id</code>.\nIf the widget is in the new focus path.\nIf the widget is focusable.\nIf is focusable or a focus scope.\nIf the <code>focused</code> path is to the given <code>widget_id</code>.\nIf the widget is the new focus.\nIf the focus is still in the same widget but <code>highlight</code> …\nIf the current focused widget is visually indicated.\nif the widget was not the <code>prev_return</code> and is the <code>new_return</code>…\nIf <code>widget_id</code> is the new return focus or a parent of the …\nIf <code>widget_id</code> is the previous return focus or a parent of …\nIs focus scope.\nIf is a focus scope.\nIf is <code>SKIP</code>.\nIf the focus is still in the same widget, but the widget …\nIf the return focus is the same widget but the widget path …\nIf the <code>focused</code> path is in the given <code>window_id</code>.\nFocusable info tree iterators.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLast descendant considering TAB index.\nNew <code>FocusTarget::Left</code> request.\nif the widget was in the <code>prev_return</code> and is not in the …\nOverride the starting point of the next focus move.\nFind the focusable descendant with center point nearest of …\nFind the descendant with center point nearest of <code>origin</code> …\nFind the descendant with center point nearest of <code>origin</code> …\nFind the focusable descendant with center point nearest of …\nFind the focusable descendant with center point nearest of …\nNew the builder.\nWrap a <code>widget_info</code> reference to enable focus info querying.\nWrap a <code>widget_info</code> reference to enable focus info querying.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNewly focused widget.\nNew return focus of the widget.\nNew <code>FocusTarget::Next</code> request.\nWidget to focus when pressing the arrow down key from this …\nNext focusable in the same scope after this widget.\nIterator over all focusable widgets in the same scope …\nWidget to focus when pressing the arrow left key from this …\nWidget to focus when pressing the arrow right key from …\nWidget to focus when pressing TAB from this widget.\nNext focusable in the same scope after this widget …\nWidget to focus when pressing the arrow up key from this …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nCreate a new tab index that is guaranteed to not be <code>SKIP</code>.\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nWhen the widget is a focus scope, its behavior on …\nWidget the focus needs to move to when <code>self</code> gets focused.\nReference to the focusable parent that contains this …\nNew <code>FocusTarget::Prev</code> request.\nPreviously focused widget.\nPrevious focusable in the same scope before this widget.\nIterator over all focusable widgets in the same scope …\nPrevious return focus of the widget.\nWidget to focus when pressing SHIFT+TAB from this widget.\nPrevious focusable in the same scope after this widget …\nThe intersection of a source flags value with the …\nGet focus request target.\nCurrent return focus of a scope.\nNew <code>FocusTarget::Right</code> request.\nReference to the root widget in the tree.\nRoot focusable.\nIf the widget is definitely a focus scope or not.\nReference the focus scope parent that contains the widget.\nThe scope that returns the focus when focused directly.\nFocus scope behavior when it receives direct focus.\nIterator over focus scopes parent -&gt; grandparent -&gt; .. -&gt; …\nIterator over self -&gt; focusable parent -&gt; grandparent -&gt; …\nIterator over self and the focusable widgets contained by …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nIf directional navigation skips over this widget.\nIf directional navigation skips over this widget.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nWidget TAB index.\nTab navigation index.\nTAB navigation within this widget, if set turns the widget …\nTab navigation mode.\nWhere to move the focus.\nInstant the event happened.\nInstant the event happened.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nFull widget info.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nNew <code>FocusTarget::Up</code> request.\nif the widget was the <code>prev_return</code> and is the <code>new_return</code>.\nFocus indicator to set on the target window if the app …\nSets <code>FocusRequest::force_window_focus</code> to <code>true</code>.\nSets the <code>FocusRequest::window_indicator</code>.\nIf this scope is focused when the ALT key is pressed.\nDirectional navigation inside the focus scope.\nBehavior of the widget when receiving direct focus.\nIf the widget is skipped during directional navigation …\nIf the widget is skipped during directional navigation …\nTab index of the widget.\nTab index of the widget.\nTab navigation inside the focus scope.\nIf <code>true</code> the <code>target</code> becomes the <code>navigation_origin</code> when the …\nIf <code>true</code> the <code>target</code> becomes the <code>navigation_origin</code> when the …\nIf <code>true</code> the <code>target</code> becomes the <code>navigation_origin</code> when the …\nFocusable widget.\nMaybe focusable widget.\nMaybe focusable widget.\nMaybe focusable widget.\nFocus extension methods for commands.\nRepresents the <strong>focus/escape alt</strong> action.\nRepresents a <code>FocusRequest</code> action.\nRepresents the <strong>focus down</strong> action.\nRepresents the <strong>focus enter</strong> action.\nRepresents the <strong>focus exit</strong> action.\nRepresents the <strong>focus left</strong> action.\nRepresents the <strong>focus next</strong> action.\nRepresents the <strong>focus previous</strong> action.\nRepresents the <strong>focus right</strong> action.\nRepresents the <strong>focus up</strong> action.\nGets a command variable with <code>self</code> scoped to the focused …\nGets a command variable with <code>self</code> scoped to the output of …\nAn iterator that filters a focusable widget tree.\nIterator over all focusable items in a branch of the …\nFilter a widget info iterator to only focusable items.\nFilter-maps an iterator of <code>WidgetInfo</code> to <code>WidgetFocusInfo</code>.\nReturns an iterator of only the focusable widgets.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns if the <code>filter</code> allows any focusable.\nFilter out entire branches of descendants at a time.\nReturns the first focusable included by <code>filter</code>.\nCreates a reverse tree iterator.\nClick event was generated by accessibility event.\nAggregate click event.\n<code>CLICK_EVENT</code> arguments.\nSpecific information from the source of a <code>ClickArgs</code>.\nAdds the <code>shortcut_matches</code> method to commands.\nThe shortcut represents a context click on the focused …\nGesture events config service.\nApplication extension that provides aggregate events.\nExtension trait that adds gesture simulation methods to …\nClick event was generated by the mouse click event.\nThe shortcut represents a primary click on the focused …\nShortcut input event.\nClick event was generated by the shortcut event.\nRepresents the resolved targets for a shortcut at a time.\n<code>SHORTCUT_EVENT</code> arguments.\nWhat kind of click a shortcut represents in a …\nRepresents shortcuts claim in <code>click_shortcut</code> or …\nClick event was generated by the touch tap event or touch …\nWeak <code>ShortcutsHandle</code>.\nActions that will run if this event propagation is not …\nClick target and kind.\nSequential click count. Number <code>1</code> is single click, <code>2</code> is …\nShortcuts that generate a primary <code>CLICK_EVENT</code> for the …\nRegister a widget to receive shortcut clicks when any of …\nCommands.\nShortcuts that generate a context <code>CLICK_EVENT</code> for the …\nThe <code>target</code>.\nNo target, only app extensions.\nId of device that generated the event.\nId of device that generated the event.\nCreate a weak handle.\nCreate dummy handle that is always in the <em>released</em> state.\nFocus target.\nRegister a widget to receive keyboard focus when any of …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nIf any action was found for the shortcut.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the event counts as a <em>context menu</em> request.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nIf the <code>click_count</code> is <code>2</code>.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nIf this event was generated by accessibility automation …\nIf this event was generated by a keyboard device.\nIf this event was generated by a mouse device.\nIf this event was generated by a touch device.\nIf the event was caused by a press of <code>mouse_button</code>.\nIf another handle has called <code>perm</code>.\nIf the event counts as <em>primary</em> click.\nIf another handle has called <code>release</code>.\nIf the event was auto-generated by holding the key or …\nIf the <code>click_count</code> is <code>1</code>.\nIf the <code>click_count</code> is <code>3</code>.\nWhat modifier keys where pressed when this event happened.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew weak handle that does not upgrade.\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nDrops the handle but does <strong>not</strong> release.\nGets the click position, if the click was generated by a …\nGenerates key press events to mimic the shortcut and …\nDrops the handle and releases the claim\nNumber of repeats generated by holding the key pressed.\nThe shortcut the generated this event.\nThe shortcut.\nThe shortcut.\nGets all the event notifications that are send if the …\nReturns <code>true</code> if the command has handlers, enabled or …\nWhen a shortcut or access primary click happens, targeted …\nSpecific info from the source of this event.\nThe mouse input top-most hit or the focused element at the …\nInstant the event happened.\nInstant the event happened.\nGet the shortcuts handle if it is still installed.\nId of window that received the event.\nId of window that received the event.\nWhich mouse button generated the event.\nHit-test result for the mouse point in the window, at the …\nHit-test result for the touch point in the window, at the …\nIs <code>true</code> if the requested primary action, is <code>false</code> is …\nIs <code>true</code> if the source event was a tab, is <code>false</code> if the …\nKind of click represented by the <code>shortcut</code>.\nPosition of the mouse in the window.\nPosition of the touch point in the window.\nThe shortcut.\nSwitch the input mode on an external AVR (audio/video …\nToggle the power on an external AVR (audio/video …\nLegacy abort key.\nThe Accept (Commit, OK) key. Accept current option or …\nFound on Sun’s USB keyboard.\nRedo or repeat an action.\nInitiate the multi-candidate mode.\nAlphanumeric mode.\nThe <code>Alt</code> (Alternative) key.\nThe Alternate Graphics (AltGr or AltGraph) key.\nAlt, Option, or ⌥.\nAlt, Option, or ⌥. This is labelled AltGr on many …\nAn Android “scancode”.\nThe Application switch key, which provides a list of …\n↓\nNavigate or traverse downward. (<code>KEYCODE_DPAD_DOWN</code>)\n←\nNavigate or traverse leftward. (<code>KEYCODE_DPAD_LEFT</code>)\n→\nNavigate or traverse rightward. (<code>KEYCODE_DPAD_RIGHT</code>)\n↑\nNavigate or traverse upward. (<code>KEYCODE_DPAD_UP</code>)\nThe Attention (Attn) key.\nAdjust audio balance leftward. (<code>VK_AUDIO_BALANCE_LEFT</code>)\nAdjust audio balance rightward. (<code>VK_AUDIO_BALANCE_RIGHT</code>)\nDecrease audio bass boost or cycle down through bass boost …\nToggle bass boost on/off. (<code>APPCOMMAND_BASS_BOOST</code>)\nIncrease audio bass boost or cycle up through bass boost …\nAdjust audio fader towards front. (<code>VK_FADER_FRONT</code>)\nAdjust audio fader towards rear. (<code>VK_FADER_REAR</code>)\nAdvance surround audio mode to next available mode. (…\nDecrease treble. (<code>APPCOMMAND_TREBLE_DOWN</code>)\nIncrease treble. (<code>APPCOMMAND_TREBLE_UP</code>)\nVolume Down key.\nDecrease audio volume. (<code>APPCOMMAND_VOLUME_DOWN</code>, …\nVolume Mute key.\nToggle between muted state and prior volume level. (…\nVolume Up key.\nIncrease audio volume. (<code>APPCOMMAND_VOLUME_UP</code>, …\n` on a US keyboard. This is also called a backtick or …\nUsed for both the US \\ (on the 101-key layout) and also …\nBackspace or ⌫. Labeled Delete on Apple keyboards.\nUsed to remove the character to the left of the cursor. …\n[ on a US keyboard.\n] on a US keyboard.\nThe Brightness Down key. Typically controls the display …\nThe Brightness Up key. Typically controls the display …\nSome laptops place this key to the left of the ↑ key.\nNavigate to previous content or page in current history. (…\nBrowser Favorites key.\nOpen the list of browser favorites. (…\nSome laptops place this key to the right of the ↑ key.\nNavigate to next content or page in current history. (…\nThe “home” button on Android.\nGo to the user’s preferred home page. (…\nBrowser Refresh key.\nRefresh the current page or content. (…\nBrowser Search key.\nCall up the user’s preferred search page. (…\nBrowser Search key.\nStop loading the current page or content. (…\nThe Call key. (<code>KEYCODE_CALL</code>)\nThe Camera key. (<code>KEYCODE_CAMERA</code>)\nThe Camera focus key. (<code>KEYCODE_FOCUS</code>)\nCancel key.\nCapsLock or ⇪\nThe <code>Caps Lock</code> (Capital) key.\nSelect next (numerically or logically) lower channel. (…\nSelect next (numerically or logically) higher channel. (…\nA key that corresponds to the character typed by the user, …\nRemove the currently selected input.\nClose the current document or message (Note: This …\nToggle the display of Closed Captions. (<code>VK_CC</code>, …\nInitiate the Code Input mode to allow characters to be …\nGeneral purpose color-coded media function key, as index 0 …\nGeneral purpose color-coded media function key, as index 1 …\nGeneral purpose color-coded media function key, as index 2 …\nGeneral purpose color-coded media function key, as index 3 …\nGeneral purpose color-coded media function key, as index 4 …\nGeneral purpose color-coded media function key, as index 5 …\n, on a US keyboard.\nThe Compose key, also known as “Multi_key” on the X …\nThe application context menu key, which is typically found …\nShow the application’s context menu. This key is …\nJapanese: 変 (henkan)\nConvert the current input method sequence.\nFound on Sun’s USB keyboard.\nCopy the current selection. (<code>APPCOMMAND_COPY</code>)\nThe Cursor Select key.\nThe <code>Control</code> or <code>Ctrl</code> key.\nCtrl or ⌃\nCtrl or ⌃\nFound on Sun’s USB keyboard.\nCut the current selection. (<code>APPCOMMAND_CUT</code>)\nSelect Digital Video Recorder. (<code>KEYCODE_DVR</code>)\nContains the text representation of the dead-key when …\n⌦. The forward delete key. Note that on Apple keyboards, …\nUsed to delete the character to the right of the cursor. …\n0 on a US keyboard.\n1 on a US keyboard.\n2 on a US keyboard.\n3 on a US keyboard.\n4 on a US keyboard.\n5 on a US keyboard.\n6 on a US keyboard.\n7 on a US keyboard.\n8 on a US keyboard.\n9 on a US keyboard.\nAdjust brightness of device, by toggling between or …\nSwap video sources. (<code>VK_DISPLAY_SWAP</code>)\nThe Eisu key. This key may close the IME, but its purpose …\nEject or ⏏. This key is placed in the function section …\nToggle removable media to eject (open) and insert (close) …\nPage Down, End, or ↘\nThe End key, used with keyboard entry to go to the end of …\nThe End Call key. (<code>KEYCODE_ENDCALL</code>)\nEnter or ↵. Labeled Return on Apple keyboards.\nThe <code>Enter</code> or <code>↵</code> key. Used to activate current selection …\n= on a US keyboard.\nThe Erase to End of Field key. This key deletes all …\nEsc or ⎋\nThe <code>Esc</code> key. This key was originally used to initiate an …\nThe Extend Selection key.\nExecute key.\nExit the current application. (<code>VK_EXIT</code>)\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key.\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nGeneral-purpose function key. Usually found at the top of …\nClear program or content stored as favorite 0. (…\nClear program or content stored as favorite 1. (…\nClear program or content stored as favorite 2. (…\nClear program or content stored as favorite 3. (…\nSelect (recall) program or content stored as favorite 0. (…\nSelect (recall) program or content stored as favorite 1. (…\nSelect (recall) program or content stored as favorite 2. (…\nSelect (recall) program or content stored as favorite 3. (…\nStore current program or content as favorite 0. (…\nStore current program or content as favorite 1. (…\nStore current program or content as favorite 2. (…\nStore current program or content as favorite 3. (…\nThe Final Mode <code>Final</code> key used on some Asian keyboards, to …\nFound on Sun’s USB keyboard.\nOpen the Find dialog. (<code>APPCOMMAND_FIND</code>)\nFn This is typically a hardware key that does not generate …\nThe Function switch <code>Fn</code> key. Activating this key …\nFLock or FnLock. Function Lock key. Found on the Microsoft …\nThe Function-Lock (<code>FnLock</code> or <code>F-Lock</code>) key. Activating this …\nThe Back key. (<code>KEYCODE_BACK</code>)\nThe Home key, which goes to the phone’s main screen. (…\nSwitch to the first character group. (ISO/IEC 9995)\nSwitch to the last character group. (ISO/IEC 9995)\nSwitch to the next character group. (ISO/IEC 9995)\nSwitch to the previous character group. (ISO/IEC 9995)\nToggle display of program or content guide. (<code>VK_GUIDE</code>, …\nIf guide is active and displayed, then display next …\nIf guide is active and displayed, then display previous …\nToggle between Hangul and English modes.\nToggle between Hanja and English modes.\nThe (Half-Width) Characters key.\nExtension trait that adds keyboard simulation methods to …\nThe Headset Hook key. (<code>KEYCODE_HEADSETHOOK</code>)\nHelp. Not present on standard PC keyboards.\nOpen a help dialog or toggle display of help information. (…\nThe Hibernate key. This key saves the current state of the …\nUse for dedicated ひらがな key found on some Japanese …\nThe Hiragana (Japanese Kana characters) key.\nThe Hiragana/Katakana toggle key. (…\nHome or ↖\nThe Home key, used with keyboard entry, to go to start of …\nLegacy modifier key.\nLegacy modifier key.\nToggle display of information about currently selected …\nInsert or Ins. Not present on Apple keyboards.\nToggle between text modes for insertion or overtyping. (…\nToggle instant replay. (<code>VK_INSTANT_REPLAY</code>)\nLocated between the left Shift and Z keys. Labeled \\ on a …\nLocated between the / and right Shift keys. Labeled \\ (ro) …\nLocated between the = and Backspace keys. Labeled ¥ (yen) …\nToggle between Junja and English modes.\nKeyboard service.\nKey pressed, repeat pressed or released event.\nJapanese: カタカナ/ひらがな/ローマ字 …\nThe Kana Mode (Kana Lock) key. This key is used to enter …\nThe Kanji (Japanese name for ideographic characters of …\nUse for dedicated カタカナ key found on some Japanese …\nThe Katakana (Japanese Kana characters) key.\nKey represents the meaning of a key press.\nThe <code>11</code> key found on media numpads that have buttons from <code>1</code> …\nThe <code>12</code> key found on media numpads that have buttons from <code>1</code> …\na on a US keyboard. Labeled q on an AZERTY (e.g., French) …\nb on a US keyboard.\nc on a US keyboard.\nRepresents the location of a physical key.\nd on a US keyboard.\ne on a US keyboard.\nf on a US keyboard.\ng on a US keyboard.\nh on a US keyboard.\ni on a US keyboard.\nArguments for <code>KEY_INPUT_EVENT</code>.\nj on a US keyboard.\nk on a US keyboard.\nl on a US keyboard.\nThe location of the key on the keyboard.\nm on a US keyboard.\nn on a US keyboard.\no on a US keyboard.\np on a US keyboard.\nq on a US keyboard. Labeled a on an AZERTY (e.g., French) …\nr on a US keyboard.\nSystem settings that define the key pressed repeat.\ns on a US keyboard.\nState a <code>Key</code> has entered.\nt on a US keyboard.\nu on a US keyboard.\nv on a US keyboard.\nw on a US keyboard. Labeled z on an AZERTY (e.g., French) …\nx on a US keyboard.\ny on a US keyboard. Labeled z on a QWERTZ (e.g., German) …\nz on a US keyboard. Labeled w on an AZERTY (e.g., French) …\nApplication extension that provides keyboard events …\nKorean: HangulMode 한/영 (han/yeong)\nKorean: Hanja 한 (hanja)\nJapanese (word-processing keyboard): Katakana\nJapanese (word-processing keyboard): Hiragana\nJapanese (word-processing keyboard): Zenkaku/Hankaku\n“Last Number Redial” key\nSometimes labelled My Computer on the keyboard\nSometimes labelled Calculator on the keyboard\nThe first generic “LaunchApplication” key. This is …\nThe second generic “LaunchApplication” key. This is …\nThe “Calendar” key. (<code>KEYCODE_CALENDAR</code>)\nThe “Contacts” key. (<code>KEYCODE_CONTACTS</code>)\n✉\nThe “Mail” key. (<code>APPCOMMAND_LAUNCH_MAIL</code>)\nThe “Media Player” key. (<code>APPCOMMAND_LAUNCH_MEDIA_SELECT</code>…\nThe “Music Player” key.\nThe “Phone” key.\nThe “Screen Saver” key.\nThe “Excel” key.\nThe “Web Browser” key.\nThe “Webcam” key.\nThe “Word” key.\nThe key is on the left side of the keyboard.\nLaunch linked content, if available and appropriate. (…\nList the current program. (<code>VK_LIST</code>)\nToggle display listing of currently available live content …\nLock or unlock current content or program. (<code>VK_LOCK</code>)\nLog-off key.\nModifiers key state changed event.\nA macOS “scancode”.\nOpen an editor to forward the current message. (…\nOpen an editor to reply to the current message. (…\nSend the current message. (<code>APPCOMMAND_SEND_MAIL</code>)\nToggle between manner mode state: silent, vibrate, ring, …\nShow a list of media applications: audio/video players and …\nAudio track key. (<code>KEYCODE_MEDIA_AUDIO_TRACK</code>)\nClose the current media, for example to close a CD or DVD …\nInitiate or continue forward playback at faster than …\nSelect previously selected channel or media. (<code>VK_LAST</code>, …\nPause the currently playing media. (<code>APPCOMMAND_MEDIA_PAUSE</code>…\nInitiate or continue media playback at normal speed, if …\n⏯\nToggle media between play and pause states. (…\nInitiate or resume recording of currently selected media. (…\nInitiate or continue reverse playback at faster than …\nSelect Media key.\nSkip backward to next content or program. (…\nSkip forward to next content or program. (<code>VK_SKIP</code>, …\nStep backward to next content or program. (…\nStep forward to next content or program. (…\n⏹\nStop media playing, pausing, forwarding, rewinding, or …\nMedia top menu. (<code>KEYCODE_MEDIA_TOP_MENU</code>)\n⏭\nSeek to next media or program track. (…\n⏮\nSeek to previous media or program track. (…\nLegacy modifier key. Also called “Super” in certain …\nLegacy modifier key. Also called “Super” in certain …\nToggle the microphone on/off. (<code>APPCOMMAND_MIC_ON_OFF_TOGGLE</code>…\nDecrease microphone volume. (…\nMute the microphone. (<code>APPCOMMAND_MICROPHONE_VOLUME_MUTE</code>, …\nIncrease microphone volume. (…\n- on a US keyboard.\nToggle between or cycle through input modes of IMEs.\nArguments for <code>MODIFIERS_CHANGED_EVENT</code>.\nContains the platform-native physical key identifier\nNavigate in. (<code>KEYCODE_NAVIGATE_IN</code>)\nNavigate to next key. (<code>KEYCODE_NAVIGATE_NEXT</code>)\nNavigate out. (<code>KEYCODE_NAVIGATE_OUT</code>)\nNavigate to previous key. (<code>KEYCODE_NAVIGATE_PREVIOUS</code>)\nOpen a new document or message. (<code>APPCOMMAND_NEW</code>)\nNext IME candidate.\nCycle to next favorite channel (in favorites list). (…\nCycle to next user profile (if there are multiple user …\nJapanese: 無変換 (muhenkan)\nAccept current input method sequence without conversion in …\nThe Notification key. (<code>KEYCODE_NOTIFICATION</code>)\nOn the Mac, this is used for the numpad Clear key.\nThe <code>NumLock</code> or Number Lock key. Used to toggle numpad mode …\nThe key is on the numpad.\n0 Ins on a keyboard. 0 on a phone or remote control\n1 End on a keyboard. 1 or 1 QZ on a phone or remote control\n2 ↓ on a keyboard. 2 ABC on a phone or remote control\n3 PgDn on a keyboard. 3 DEF on a phone or remote control\n4 ← on a keyboard. 4 GHI on a phone or remote control\n5 on a keyboard. 5 JKL on a phone or remote control\n6 → on a keyboard. 6 MNO on a phone or remote control\n7 Home on a keyboard. 7 PQRS or 7 PRS on a phone or remote …\n8 ↑ on a keyboard. 8 TUV on a phone or remote control\n9 PgUp on a keyboard. 9 WXYZ or 9 WXY on a phone or remote …\n+\nFound on the Microsoft Natural Keyboard.\nC or A (All Clear). Also for use with numpads that have a …\nC (Clear Entry)\n, (thousands separator). For locales where the thousands …\n. Del. For locales where the decimal separator is “,” …\n/\n↵\n=\n# on a phone or remote control device. This key is …\nM Add current entry to the value stored in memory.\nM Clear the value stored in memory.\nM Replace the current entry with the value stored in …\nM Replace the value stored in memory with the current …\nM Subtract current entry from the value stored in memory.\n<em> on a keyboard. For use with numpads that provide </em>…\n( Found on the Microsoft Natural Keyboard.\n) Found on the Microsoft Natural Keyboard.\n* on a phone or remote control device.\n-\nAccess on-demand content or programs. (<code>VK_ON_DEMAND</code>)\nFound on Sun’s USB keyboard.\nOpen an existing document or message. (<code>APPCOMMAND_OPEN</code>)\nPage Down, PgDn, or ⇟\nScroll down or display next page of content.\nPage Up, PgUp, or ⇞\nScroll up or display previous page of content.\nPairing key to pair devices. (<code>KEYCODE_PAIRING</code>)\nFound on Sun’s USB keyboard.\nThe Paste key. (<code>APPCOMMAND_PASTE</code>)\nPause Break\nPause the current state or application (as appropriate).\n. on a US keyboard.\nMove picture-in-picture window down. (<code>VK_PINP_DOWN</code>)\nMove picture-in-picture window. (<code>VK_PINP_MOVE</code>)\nToggle display of picture-in-picture window. (…\nMove picture-in-picture window up. (<code>VK_PINP_UP</code>)\nPlay or resume the current state or application (as …\nDecrease media playback speed. (<code>VK_PLAY_SPEED_DOWN</code>)\nReset playback to normal speed. (<code>VK_PLAY_SPEED_RESET</code>)\nIncrease media playback speed. (<code>VK_PLAY_SPEED_UP</code>)\nThis key is placed in the function section on some Apple …\nToggle power state. (<code>KEYCODE_POWER</code>) Note: Note: Some …\nThe <code>PowerOff</code> key. Sometime called <code>PowerDown</code>.\nThe key was pressed.\nPrevious IME candidate.\nPrint the current document or message. (<code>APPCOMMAND_PRINT</code>)\nPrtScr SysRq or Print Screen\nInitiate print-screen function.\nIME key.\nFound on Sun’s USB keyboard.\nThe properties (Props) key.\n’ on a US keyboard.\nToggle random media or content shuffle mode. (…\nNot a physical key, but this key code is sent when the …\nToggle or cycle between media recording speeds. (…\nRedo the last action. (<code>APPCOMMAND_REDO</code>)\nThe key was released.\nLegacy resume key.\nToggle RF (radio frequency) input bypass mode (pass RF …\nThe key is on the right side of the keyboard.\nThe Roman characters function key.\nSwitch the input mode on an external STB (set top box). (…\nToggle the power on an external STB (set top box). (…\nSave the current document or message. (<code>APPCOMMAND_SAVE</code>)\nToggle scan channels mode. (<code>VK_SCAN_CHANNELS_TOGGLE</code>)\nAdvance display screen mode to next available mode. (…\nScroll Lock\nToggle between scrolling and cursor movement modes.\nFound on Sun’s USB keyboard.\nSelect key.\n; on a US keyboard.\nToggle display of device settings screen. (<code>VK_SETTINGS</code>, …\nUsed to enable shift modifier function for interpreting …\nShift or ⇧\nShift or ⇧\nIME key.\n/ on a US keyboard.\nComputer Sleep key.\nGeneral purpose virtual function key, as index 1.\nGeneral purpose virtual function key, as index 2.\nGeneral purpose virtual function key, as index 3.\nGeneral purpose virtual function key, as index 4.\n  (space)\nUsed in text to insert a space between words. Usually …\nShow correction list when a word is incorrectly …\nToggle between dictation mode and command/control mode. (…\nSpellcheck the current document or selection. (…\nToggle split screen mode. (<code>VK_SPLIT_SCREEN_TOGGLE</code>)\nThe key is in its “normal” location on the keyboard.\nThe Standby key. This key turns off the display and places …\nA key string that corresponds to the character typed by …\nToggle display of subtitles, if available. (<code>VK_SUBTITLE</code>)\nUsed to enable “super” modifier function for …\nThe Windows, ⌘, Command, or other OS symbol key.\nThe Windows, ⌘, Command, or other OS symbol key.\nLegacy suspend key.\nThe Symbol modifier key (used on some virtual keyboards).\nToggle between normal keyboard and symbols keyboard.\nSwitch to viewing TV. (<code>KEYCODE_TV</code>)\nTV 3D Mode. (<code>KEYCODE_3D_MODE</code>)\nToggle between antenna and cable input. (…\nAudio description. (<code>KEYCODE_TV_AUDIO_DESCRIPTION</code>)\nAudio description mixing volume down. (…\nAudio description mixing volume up. (…\nContents menu. (<code>KEYCODE_TV_CONTENTS_MENU</code>)\nContents menu. (<code>KEYCODE_TV_DATA_SERVICE</code>)\nSwitch the input mode on an external TV. (<code>KEYCODE_TV_INPUT</code>)\nSwitch to component input #1. (<code>KEYCODE_TV_INPUT_COMPONENT_1</code>…\nSwitch to component input #2. (<code>KEYCODE_TV_INPUT_COMPONENT_2</code>…\nSwitch to composite input #1. (<code>KEYCODE_TV_INPUT_COMPOSITE_1</code>…\nSwitch to composite input #2. (<code>KEYCODE_TV_INPUT_COMPOSITE_2</code>…\nSwitch to HDMI input #1. (<code>KEYCODE_TV_INPUT_HDMI_1</code>)\nSwitch to HDMI input #2. (<code>KEYCODE_TV_INPUT_HDMI_2</code>)\nSwitch to HDMI input #3. (<code>KEYCODE_TV_INPUT_HDMI_3</code>)\nSwitch to HDMI input #4. (<code>KEYCODE_TV_INPUT_HDMI_4</code>)\nSwitch to VGA input #1. (<code>KEYCODE_TV_INPUT_VGA_1</code>)\nMedia context menu. (<code>KEYCODE_TV_MEDIA_CONTEXT_MENU</code>)\nToggle network. (<code>KEYCODE_TV_NETWORK</code>)\nNumber entry. (<code>KEYCODE_TV_NUMBER_ENTRY</code>)\nToggle the power on an external TV. (<code>KEYCODE_TV_POWER</code>)\nRadio. (<code>KEYCODE_TV_RADIO_SERVICE</code>)\nSatellite. (<code>KEYCODE_TV_SATELLITE</code>)\nBroadcast Satellite. (<code>KEYCODE_TV_SATELLITE_BS</code>)\nCommunication Satellite. (<code>KEYCODE_TV_SATELLITE_CS</code>)\nToggle between available satellites. (…\nAnalog Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_ANALOG</code>)\nDigital Terrestrial. (<code>KEYCODE_TV_TERRESTRIAL_DIGITAL</code>)\nTimer programming. (<code>KEYCODE_TV_TIMER_PROGRAMMING</code>)\nTab or ⇥\nThe Horizontal Tabulation <code>Tab</code> key.\nToggle display of teletext, if available (<code>VK_TELETEXT</code>, …\nLegacy under-clock key.\nFound on Sun’s USB keyboard.\nUndo the last action. (<code>APPCOMMAND_UNDO</code>)\nImplementer did not identify system or scancode.\nThis variant is used when the key cannot be translated to …\nThis variant is used when the key cannot be translated to …\nAdvance video mode to next available mode. (…\n“Voice Dial” key.\nWakes up the device if it is not already awake.\nThe WakeUp key. (<code>KEYCODE_WAKEUP</code>)\nA Windows “scancode”.\nCause device to identify itself in some manner, e.g., …\nAn XKB “keycode”.\nThe Zenkaku (Full-Width) Characters key.\nThe Zenkaku/Hankaku (full-width/half-width) toggle key. (…\nThe ZoomIn key. (<code>KEYCODE_ZOOM_IN</code>)\nThe ZoomOut key. (<code>KEYCODE_ZOOM_OUT</code>)\nToggle between fullscreen and scaled content, or alter …\nIterate over all identified values.\nIterate over all values from <code>Alt</code> to <code>F35</code>.\nReturns a new read-only variable that animates the caret …\nReturns a variable that defines the system config for the …\nReturns a read-only variable that tracks the <code>KeyCode</code> of …\n600ms, 100ms.\nThe <code>target</code>.\nBroadcast to all.\nDevice that generated the event.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGets the named key, or <code>Char</code> or <code>Str</code>.\nGets the characters to insert in a typed text.\nDelay before each repeat event after the first.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the key is for an audio control as defined by w3.\nIf the key is for an audio control as defined by w3.\nReturns <code>true</code> if the character is the backspace and <code>CTRL</code> is …\nIf the key is for a browser control.\nIf the key is for a browser control.\nIf the key if for IME composition actions as defined by w3.\nIf the key if for IME composition actions as defined by w3.\nReturns <code>true</code> if the character is delete and <code>CTRL</code> is not …\nIf the key is for an general device action as defined by w3…\nIf the key is for an general device action as defined by w3…\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nIf the key is for an edit action as defined by w3.\nIf the key is for an edit action as defined by w3.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nIf the key is one of the general purpose function keys.\nIf the key is one of the general purpose function keys.\nIf the key is for launching an application.\nIf the key is for launching an application.\nReturns <code>true</code> if the character is a line-break and <code>CTRL</code> is …\nIf the key is for a media controller as defined by w3.\nIf the key is from a mobile phone as defined by w3.\nIf the keycode represents a known and identified modifier.\nIf the key is a modifier as defined by w3.\nIf the key is for an multimedia control as defined by w3.\nIf the key is for an multimedia control as defined by w3.\nIf the key is for a speech correction control as defined …\nReturns <code>true</code> if the character is a tab space and <code>CTRL</code> is …\nIf the key is from a TV control as defined by w3.\nIf the key is for an general UI action as defined by w3.\nIf the key is for an general UI action as defined by w3.\nIf key-code is fully unidentified (…\nIf the key is a white space as defined by w3.\nSemantic key.\nPhysical key.\nThe location of the key on the keyboard.\nSemantic key modified by the current active modifiers.\nReturns a read-only variable that tracks the <code>Key</code> …\nReturns a read-only variable that tracks the currently …\nWhat modifier keys where pressed when this event happened.\nCurrent modifiers state.\nGets the variant name.\nGets the variant name.\nGets the key as a static str.\nGets the variant name.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nNotifies keyboard input event.\nDoes a key-down, key-up and updates.\nDoes a modifiers changed, key-down, key-up, reset …\nPrevious modifiers state.\nReturns a variable that defines key press repeat start …\nNumber of repeats generated by holding the key pressed.\nGets the modified key for Numpad keys and the unmodified …\nDelay before repeat starts.\nIf the key was pressed or released.\nReturns a read-only variable that tracks the operating …\nReturns a read-only variable that tracks the operating …\nThe focused element at the time of the key input.\nText typed.\nInstant the event happened.\nInstant the event happened.\nWindow that received the event.\nBack button.\nSettings that define the mouse button pressed repeat.\nState a <code>MouseButton</code> has entered.\nDefines how click events are generated for a widget.\nRepresents mouse gestures that can initiate a click.\nForward button.\nLeft button.\nAmount in lines or rows to scroll in the horizontal and …\nMouse service.\nMouse click event, any <code>click_count</code>.\nThe top-most hovered widget changed or pointer capture …\nMouse down or up event.\nMouse move event.\nMouse wheel scroll event.\nMiddle button.\nDescribes a button of a mouse controller.\n<code>MOUSE_CLICK_EVENT</code> arguments.\n<code>MOUSE_HOVERED_EVENT</code> arguments.\n<code>MOUSE_INPUT_EVENT</code> arguments.\nApplication extension that provides mouse events and …\n<code>MOUSE_MOVE_EVENT</code> arguments.\nMouse cursor position.\nDescribes a difference in the mouse scroll wheel state.\n<code>MOUSE_WHEEL_EVENT</code> arguments.\nSystem settings needed for implementing double/triple …\nAny other button.\nAmount in pixels to scroll in the horizontal and vertical …\nWidget is clicked when a mouse button is pressed on it.\nWidget is clicked when the same mouse button is pressed …\nThe button was pressed.\nWidget is clicked when a mouse button is released on it, …\nThe button was released.\nRight button.\nMouse config builder methods.\nMouse config methods.\nMaximum (x, y) distance in pixels.\nWhich mouse button generated the event.\nWhich mouse button generated the event.\nReturns a read-only variable that tracks the buttons that …\nCurrent pointer capture.\nCurrent pointer capture.\nCurrent pointer capture.\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nCount of clicks within the double-click interval. Number <code>1</code> …\nGets the click mode of the widget.\nPositions of the cursor in between the previous event and …\n<code>500ms</code> and <code>4, 4</code>.\nFirst <code>PressRelease</code>, double <code>Press</code> and no repeat.\n600ms, 100ms.\nThe <code>target</code> and <code>capture</code>.\nThe <code>target</code>, and <code>capture</code>.\nThe <code>target</code>.\nThe <code>target</code>, <code>prev_target</code> and <code>capture</code>.\nThe <code>target</code>.\nGets the pixel delta, line delta is converted using the …\nWheel motion delta, value is in pixels if the <em>wheel</em> is a …\nId of device that generated the event.\nId of device that generated the event.\nId of device that generated the event.\nId of device that generated the event.\nId of device that generated the event.\nGesture that causes the subsequent clicks, if done within …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nHit-test result for the mouse point in the window.\nHit-test result for the mouse point in the window.\nHit-test result for the mouse point in the window, at the …\nHit-test result for the mouse point in the window.\nHit-test result for the mouse point in the window, at the …\nVariable that gets the current hovered window and widgets.\nDelay before each repeat event after the first.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nEvent caused by a pointer capture change.\nIf <code>MOUSE_CLICK_EVENT</code> will notify because of this input.\nIf the <code>button</code> is the context (right).\nIf the <code>button</code> is the context (right).\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nIf the <code>click_count</code> is <code>2</code>.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nIf the <code>state</code> is pressed.\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered, but now is.\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered or was enabled, …\nReturns <code>true</code> if the <code>WIDGET</code> was not hovered or was …\nReturns <code>true</code> if the <code>WIDGET</code> was hovered, but now isn’t.\nReturns <code>true</code> if the <code>WIDGET</code> was hovered and disabled, but …\nReturns <code>true</code> if the <code>WIDGET</code> was hovered and enabled, but …\nEvent caused by the mouse position moving over/out of the …\nIf the <code>state</code> is released.\nIf the <code>widget_id</code> is in the <code>target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>target</code> and is allowed by …\nIf the <code>button</code> is the primary.\nIf the <code>button</code> is the primary.\nIf the event was generated by holding the button pressed …\nIf the modifiers allow the event to be used for scrolling.\nGets the sign status of x and y.\nGets the sign status of x and y.\nIf the <code>click_count</code> is <code>1</code>.\nIf the <code>click_count</code> is <code>3</code>.\nEvent caused by the widget moving under/out of the mouse …\nIf the modifiers allow the event to be used for zooming.\nClick on press+release or repeat.\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this event happened.\nVariable that defines the click-count increment time and …\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nTouch state if the device that generated the event is a …\nVariable that gets current hovered window and cursor point …\nPosition of the mouse in the window’s content area.\nPosition of the mouse in the window’s content area.\nPosition of the mouse in the coordinates of <code>target</code>.\nPosition of the mouse in the window.\nPosition of the mouse in the coordinates of <code>target</code>.\nMouse position in the window.\nGets position in the widget inner bounds.\nGets position in the widget inner bounds.\nGets position in the widget inner bounds.\nGets position in the widget inner bounds.\nGets position in the widget inner bounds.\nClick on <code>ClickTrigger::Press</code>.\nPrevious pointer capture.\nPrevious top-most hit before the mouse moved.\nClick on release.\nClick on press and repeat.\nIf a mouse button is held pressed after a delay generate …\nVariable that gets and sets the config for …\nReturns the delta for a scrolling operation, depending on …\nSets the click mode of the widget.\nSwaps the delta axis if <code>modifiers</code> contains <code>SHIFT</code>.\nGesture that causes the <em>first</em> click, that is a click that …\nDelay before repeat starts.\nThe state the <code>button</code> was changed to.\nVariable that tracks the system click-count increment time …\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the widget that got clicked.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the widget that got scrolled.\nMaximum time interval between clicks.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nTimestamp of the mouse move.\nReturns <code>true</code> if the widget was disabled in <code>prev_target</code>.\nReturns <code>true</code> if the widget was enabled in <code>prev_target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>prev_target</code> and is …\nId of window that received the event.\nId of window that received the event.\nId of window that received the event.\nId of window that received the event.\nId of window that received the event.\nWindow the mouse is hovering.\nReturns the delta for a zoom-in/out operation, depending …\nInformation about mouse and touch capture in a mouse or …\nMouse and touch capture mode.\nMouse and touch capture service.\nMouse and touch capture changed event.\n<code>POINTER_CAPTURE_EVENT</code> arguments.\nApplication extension that provides mouse and touch …\nMouse and touch events inside the widget sub-tree …\nMouse and touch events redirected to the widget.\nMouse and touch captured by the window only.\nIf the widget is allowed by the current capture.\nSet a widget to be the root of a capture subtree.\nSet a widget to redirect all mouse and touch events to.\nVariable that gets the current capture target and mode.\n<code>CaptureMode::Window</code>\nThe <code>prev_capture</code> and <code>new_capture</code> paths start with the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert <code>true</code> to <code>CaptureMode::Widget</code> and <code>false</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIf the <code>widget_id</code> got pointer capture with this update.\nIf the <code>widget_id</code> lost pointer capture with this update.\nIf the same widget has pointer capture, but the capture …\nIf the same widget has pointer capture, but the widget …\nCapture mode, see <code>allows</code> for more details.\nNew args from values that convert into the argument types.\nnew mouse and capture target and mode.\nArguments for event that happened now (<code>INSTANT.now</code>).\nPrevious mouse and touch capture target and mode.\nRelease the current mouse and touch capture back to window.\nWidget that is capturing all mouse and touch events. The …\nInstant the event happened.\nCan translate, scale-square and rotate.\nOn iOS, the force is calibrated so that the same number …\nThe system cancelled tracking for the touch.\nA finger was lifted from the screen.\nA finger moved on the screen.\nIf the platform reports the force as normalized, we have …\nCan rotate.\nCan scale in both dimensions the same amount.\nCan scale in the X dimension.\nCan scale in the Y dimension.\nA finger touched the screen.\nTouch service.\nTouch made first contact or lost contact with a widget.\nTouch contact started or ended.\nTouch contact pressed without moving for more then the …\nTouch contact moved.\nTouch tap.\nTwo point touch transform.\nCan translate in both dimensions.\nCan translate in the X dimension.\nCan translate in the y dimension.\nSystem settings needed to implementing touch gestures.\nDescribes the force of a touch event.\nIdentifier for a continuous touch contact.\nArguments for <code>TOUCH_INPUT_EVENT</code>.\nArguments for <code>TOUCH_LONG_PRESS_EVENT</code>.\nApplication extension that provides touch events and …\nIdentify the moves of one touch contact in <code>TouchMoveArgs</code>.\nArguments for <code>TOUCH_MOVE_EVENT</code>.\nDescribes touch-screen input state.\nActive touch positions.\nArguments for <code>TOUCH_TAP_EVENT</code>.\nArguments for <code>TOUCH_TRANSFORM_EVENT</code>.\nInfo useful for touch gestures computed from two touch …\nDefines the different transforms that a touch transform …\nIdentify a new touch contact or a contact update.\nArguments for <code>TOUCHED_EVENT</code>.\nGet a flags value with all known bits set.\nAngle of the line.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCurrent pointer capture.\nCurrent pointer capture.\nCurrent pointer capture.\nCurrent pointer capture.\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nIf <code>capture</code> is <code>None</code> or <code>allows</code> the <code>WIDGET</code> to receive this …\nMiddle of the line between the two points.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nEach <code>TouchMove::target</code> and <code>capture</code>.\nThe <code>target</code> and <code>capture</code>.\nThe <code>prev_target</code>, <code>target</code> and <code>capture</code>.\nThe <code>target</code>.\nThe <code>target</code>.\nThe <code>target</code> and <code>capture</code>.\nDeviation from the points to the center.\nDeviation from the points.x to the center.x.\nDeviation from the points.y to the center.y.\nId of device that generated all touches in this event.\nId of device that generated the event.\nId of device that generated the event.\nId of device that generated the event.\nId of device that generated the event.\nId of the device that generated the touch events.\nThe intersection of a source flags value with the …\nMaximum (x, y) distance that a subsequent touch click is …\nMaximum time between taps that generates a double click.\nGet a flags value with all bits unset.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nInfo collected when the second touch point started.\nTouch pressure force and angle.\nTouch pressure force and angle.\nTouch pressure force and angle.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nHit-test result for the latest touch point in the window.\nHit-test result for the touch point in the window.\nHit-test result for the touch point in the window.\nHit-test result for the touch point in the window.\nHit-test result for the touch point in the window.\nHit-test result for the center point between the first …\nCompute the final offset and duration for a <em>fling</em> …\nCompute the final offset and duration for a <em>fling</em> …\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nIf the <code>phase</code> is cancel.\nEvent caused by a pointer capture change.\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nReturns <code>true</code> if the widget is disabled in <code>target</code>.\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nIf the <code>widget_id</code> is in the <code>target</code> is disabled.\nWhether all bits in this flags value are unset.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nReturns <code>true</code> if the widget is enabled in <code>target</code>.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nIf the <code>widget_id</code> is in the <code>target</code> is enabled.\nIf the <code>phase</code> is end.\nIf the transform is only a translate calculated from a …\nIf the <code>phase</code> is start.\nIf the <code>phase</code> is cancel.\nIf the <code>phase</code> is end.\nReturns <code>true</code> if the <code>WIDGET</code> was not touched, but now is.\nReturns <code>true</code> if the <code>WIDGET</code> was not touched or was enabled, …\nReturns <code>true</code> if the <code>WIDGET</code> was not touched or was …\nReturns <code>true</code> if the <code>WIDGET</code> was touched, but now isn’t.\nReturns <code>true</code> if the <code>WIDGET</code> was touched and disabled, but …\nReturns <code>true</code> if the <code>WIDGET</code> was touched and enabled, but …\nEvent caused by the touch position moving over/out of the …\nIf the <code>phase</code> is start.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>target</code> and is allowed by …\nEvent caused by the widget moving under/out of the mouse …\nYield a set of contained flags values.\nYield a set of contained named flags values.\nLatest update of the two points.\nGets the <code>first_info</code> and <code>latest_info</code> in the <code>WIDGET</code> inner …\nComputes the transform between the <code>local_info</code> values, …\nFling velocity ceiling, in dip per seconds.\nMinimum velocity that can be considered a fling gesture, …\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this event happened.\nWhat modifier keys where pressed when this touch started.\nWhat modifier keys where pressed when this event happened.\nCoalesced moves of the touch since last event.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nCompute the line info, from round pixels.\nCompute the line info, from device independent pixels.\nCompute the line info.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nTouch phase.\nTouch phase that caused the contact gain or loss with the …\nGesture phase.\nTouch phase for the <code>id</code>.\nLatest position.\nLatest touch contact position.\nCenter of the touch in the window’s content area.\nCenter of the touch in the window’s content area.\nCenter of the touch in the window’s content area.\nCenter of the touch in the window’s content area.\nTouch center, relative to the window top-left in device …\nVariable that tracks all current active touches.\nPrevious pointer capture.\nPrevious top-most hit before the touch moved.\nThe intersection of a source flags value with the …\nComputes the rotation to transform from <code>first_info</code> to …\nComputes the rotation to transform from <code>self</code> to <code>other</code>.\nComputes the scale to transform from <code>first_info</code> to …\nComputes the scale to transform from <code>self</code> to <code>other</code>.\nScale factor used in the computed pixel values.\nComputes the scale-y to transform from <code>first_info</code> to …\nComputes the scale-y to transform from <code>self</code> to <code>other</code>.\nComputes the scale-y to transform from <code>first_info</code> to …\nComputes the scale-y to transform from <code>self</code> to <code>other</code>.\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nTouch start timestamp.\nTimestamp of when the touch started.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nRead-only variable that tracks the system touch config.\nMaximum (x, y) distance between a touch start and end that …\nCount of taps within the double-tap interval. Number <code>1</code> is …\nMaximum time between start and end in the <code>tap_area</code> that …\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nFull path to the top-most hit in <code>hits</code>.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nUnique ID of the touch, among other active touches.\nIdentify the touch contact or <em>finger</em>.\nIdentify the touch contact or <em>finger</em>.\nIdentify the touch contact or <em>finger</em>.\nIdentify the touch contact or <em>finger</em>.\nIdentify the touch contact or <em>finger</em>.\nIdentify a continuous touch contact or <em>finger</em>.\nVariable that defines the touch config for the app.\nTest mode, generates touch events for a single touch …\nHandle across the lifetime of <code>touch</code>.\nPropagation handle for the <code>touch</code> lifetime.\nHandle across the lifetime of <code>touch</code>.\nAll touch contacts that moved since last event.\nThe two touch contact points.\nComputes the transform from <code>first_info</code> to <code>latest_info</code>.\nComputes the transform from <code>self</code> to <code>other</code>.\nComputes the translation to transform from <code>first_info</code> to …\nComputes the translation to transform from <code>self</code> to <code>other</code>.\nCompute the final offset and duration for a <em>fling</em> …\nCompute the final offset and duration for a <em>fling</em> …\nAverage velocity.\nComputes the translation-x to transform from <code>first_info</code> to …\nComputes the translation-x to transform from <code>self</code> to <code>other</code>.\nComputes the translation-y to transform from <code>first_info</code> to …\nComputes the translation-y to transform from <code>self</code> to <code>other</code>.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nLatest move timestamp.\nVelocity in device independent pixels per second.\nVelocity in device independent pixels per second.\nVelocity of the <code>latest_info</code> touch points.\nReturns <code>true</code> if the widget was disabled in <code>prev_target</code>.\nReturns <code>true</code> if the widget was enabled in <code>prev_target</code>.\nReturns <code>true</code> if the <code>WIDGET</code> is in <code>prev_target</code> and is …\nTouched window.\nId of window that received all touches in this event.\nId of window that received the event.\nId of window that received the event.\nId of window that received the event.\nId of window that received the event.\nId of window that received the touch events.\nThe altitude (in radians) of the stylus.\nThe force of the touch, where a value of 1.0 represents …\nThe maximum possible force for a touch.")