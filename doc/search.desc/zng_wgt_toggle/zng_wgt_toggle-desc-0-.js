searchState.loadedDescShard("zng_wgt_toggle", 0, "Toggle widget, properties and commands.\nSpacing between the checkmark and the content.\nSpacing between the arrow symbol and the content.\nCannot deselect item because the selection cannot be empty.\nW  Checkmark toggle style.\nW  Popup toggle style.\nCannot select item because of a selector specific reason.\nIf <code>value</code> is deselected when the widget that has the value …\nIf <code>value</code> deselects the previously selected value when the …\nW  Default toggle style.\nThe toggle button checked state.\nIf toggle button cycles between <code>None</code>, <code>Some(false)</code> and …\nW  Toggle light style.\nSpacing between the radio and the content.\nW  Radio toggle style.\nCannot (de)select item because the selection is read-only.\nIf <code>value</code> scrolls into view when selected.\nContextual <code>Selector</code>.\nIf <code>value</code> is selected when the widget that has the value is …\nIf <code>value</code> selects the new value when the variable changes …\nContextual style variable.\nSpacing between the switch and the content.\nRepresents the contextual selector behavior of <code>value</code> …\nError for <code>Selector</code> operations.\nRepresents a <code>Selector</code> implementation.\nW  Switch toggle style.\nW  A toggle button that flips a <code>bool</code> or <code>Option&lt;bool&gt;</code> …\nCannot select item because it is not of type that the …\nRepresents the “check list” selection of bitflags.\nP  Spacing between the checkmark and the content.\nP  Spacing between the checkmark and the content.\nP  Toggle cycles between <code>true</code> and <code>false</code>, updating the …\nP  Toggle cycles between <code>true</code> and <code>false</code>, updating the …\nP  Toggle cycles between <code>Some(true)</code> and <code>Some(false)</code> and …\nP  Toggle cycles between <code>Some(true)</code> and <code>Some(false)</code> and …\nP  Popup open when the toggle button is checked.\nP  Popup open when the toggle button is checked.\nCommands that control toggle.\nP  Spacing between the arrow symbol and the content.\nP  Spacing between the arrow symbol and the content.\nNew custom error from string.\nRemove the <code>value</code> from the selection, returns <code>Ok(())</code> if the …\nRemove the <code>value</code> from the selection, returns <code>Ok(())</code> if the …\nP  If <code>value</code> is deselected when the widget that has the …\nP  If <code>value</code> is deselected when the widget that has the …\nP  If <code>value</code> deselects the previously selected value when …\nP  If <code>value</code> deselects the previously selected value when …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nP  If the toggle is checked from any of the three primary …\nP  If the toggle is checked from any of the three primary …\nReturns <code>true</code> if the <code>value</code> is selected.\nReturns <code>true</code> if the <code>value</code> is selected.\nNew custom selector.\nRepresents no selector and the inability to select any …\nP  Spacing between the radio and the content.\nP  Spacing between the radio and the content.\nP  If the widget scrolls into view when the <code>value</code> selected.\nP  If the widget scrolls into view when the <code>value</code> selected.\nInsert the <code>value</code> in the selection, returns <code>Ok(())</code> if the …\nInsert the <code>value</code> in the selection, returns <code>Ok(())</code> if the …\nP  If <code>value</code> is selected when the widget that has the value …\nP  If <code>value</code> is selected when the widget that has the value …\nP  If <code>value</code> selects the new value when the variable …\nP  If <code>value</code> selects the new value when the variable …\nP  Sets the contextual selector that all inner widgets …\nP  Sets the contextual selector that all inner widgets …\nRepresents the “radio” selection of a single item.\nRepresents the “radio” selection of a single item that …\nP  Extends or replaces the widget style.\nP  Extends or replaces the widget style.\nAdd the selector subscriptions in the <code>WIDGET</code>.\nAdd the selector subscriptions in <code>WIDGET</code>.\nP  Spacing between the switch and the content.\nP  Spacing between the switch and the content.\nP  Enables <code>None</code> as an input value.\nP  Enables <code>None</code> as an input value.\nP  Values that is selected in the contextual <code>selector</code>.\nP  Values that is selected in the contextual <code>selector</code>.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nStart building a new instance.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nGets the widget type info.\nRepresents the <strong>select</strong> action.\nRepresents a select operation that can be send to <code>selector</code> …\nRepresents the <strong>toggle</strong> action.\nRun the operation.\nDeselect the <code>value</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nNew (de)select operation.\nSelect the <code>value</code>.")