searchState.loadedDescShard("zng_ext_window", 0, "App window and monitors manager.\nAll subsequent frames rendered will be captured and …\nAll subsequent frames rendered will be captured and …\nApi Error.\nExtension trait, adds <code>run_window</code> to <code>AppExtended</code>.\nWindow auto-size config.\nClose button.\nUses the content desired width and height.\nUses the content desired height.\nUses the content desired width.\nOperation canceled, no window closed.\nCentralizes the window in the monitor screen, defined by …\nCentralizes the window in the parent window, defined by …\nResponse message of <code>close</code> and <code>close_together</code>.\nOperation completed, all requested windows closed.\nActivate critical focus request.\nWindow custom cursor.\nWindow cursor source.\nDoes not automatically adjust size.\nPrefer the best dedicated GPU, probably the best …\nResolves to <code>position</code>.\nThe operating system’s default icon.\nWindows can handle event updates in parallel.\nWindow has exclusive access to the monitor’s video …\nA window frame has finished rendering.\nAllow fullscreen windowed or exclusive video.\nEnable fullscreen, but only windowed not exclusive video.\nRepresents a focus request indicator.\nFrame image capture mode in a window.\n<code>FRAME_IMAGE_READY_EVENT</code> args.\nWindow is chromeless and completely fills the screen, …\nWindow extension methods for <code>HeadlessApp</code>.\n“Monitor” configuration used by windows in headless …\nDon’t show cursor.\nInput Method Editor event targeting a text input widget.\nPlatform dependent named cursor icon.\nImage is requested from <code>IMAGES</code>.\nArguments for <code>IME_EVENT</code>.\nCustom cursor image, with fallback.\nActivate informational focus request.\nPrefer the integrated GPU (provided by the CPU), probably …\nWindows can layout in parallel.\nDefault value, matches with the largest size, greatest …\nEnable maximize.\nMaximize/restore button.\nEnable minimize.\nMinimize button.\nMonitors service.\nMonitors added, removed or modified event.\nWindow fills the screen, but not the parts reserved by the …\nWindow is only visible as an icon in the taskbar.\nAll information about a monitor that <code>MONITORS</code> can provide.\nA selector that returns a <code>MonitorInfo</code>.\n<code>MONITORS_CHANGED_EVENT</code> args.\nUI node that presents a <code>WindowRoot</code> as embedded content.\nExtension methods for widget info about a node that hosts …\nThe next rendered frame will be captured and available in …\nThe next rendered frame will be captured and available in …\nWindow is visible, but does not fill the screen.\nWindow is not open in the view-process.\nArguments for the <code>WINDOWS.register_open_nested_handler</code> …\nDefines what window operations can run in parallel, …\nThe parent window monitor, or <code>Primary</code> if the window has no …\nThe primary monitor, if there is any monitor.\nCustom query closure.\nWindows with pending render or render update generate …\nRender backend preference.\nUse a software render fallback, this has the best …\nFrames are not automatically captured, but you can use …\nWindow startup position.\nWindows can init, deinit, update and rebuild info in …\nExclusive video mode info.\nError calling a view-process API extension associated with …\nView-process is not running.\nWindows service.\nWindow moved, resized or other state changed.\nWindow closed event.\nWindow close requested event.\nExtensions methods for <code>WINDOW</code> contexts of windows open by …\nWindow focused widget hook.\nWindow focus/blur event.\nWindow finished loading and has opened in the view-process.\nNew window has inited.\nIME extension methods for <code>WidgetInfoBuilder</code>.\nIME extension methods for <code>WidgetInfo</code>.\nWindow chrome buttons.\n<code>WINDOW_CHANGED_EVENT</code> args.\n<code>WINDOW_CLOSE_EVENT</code> args.\n<code>WINDOW_CLOSE_REQUESTED_EVENT</code> args.\n<code>WINDOW_FOCUS_CHANGED_EVENT</code> args.\nWindow icon.\nRepresents a handle that stops the window from loading …\nApplication extension that manages windows.\nError when a <code>WindowId</code> is not opened by the <code>WINDOWS</code> service.\nWindow is not open in the <code>WINDOWS</code> service.\nWindow must be headed to call window extensions.\n<code>WINDOW_OPEN_EVENT</code> args.\nWindow root node and values.\nArguments for <code>WINDOWS.register_root_extender</code>.\nWindow state.\nMask of allowed <code>WindowState</code> states of a window.\nVariables that configure the opening or open window.\nOverride the preferred accent color.\nIf an accessibility service has requested info from this …\nActual accent color to use.\nActual color scheme to use.\nWindow custom cursor image.\nWindow icon image.\nCurrent monitor hosting the window.\nWindow actual position on the monitor.\nWindow actual size on the screen.\nWindow <code>actual_size</code>, converted to pixels given the …\nAdded monitors.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nGet a flags value with all known bits set.\nDefines if the window should always stay on top of other …\nDefines if and how the window size is controlled by the …\nThe point in the window content that does not move when …\nIterate over all available monitors.\nThe bit depth of this video mode. This is generally 24 …\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nGet the underlying bits value.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nCause the headless window to think focus moved away from …\nMove the window to the front of the operating system Z …\nMove the window to the front of the operating system Z …\nMove the window to the front of the operating system Z …\nIf the app or operating system caused the change.\nWindow children.\nDefines if the window chrome is visible.\nStarts closing a window, the operation can be canceled by …\nStarts closing the window, the operation can be canceled …\nStarts closing the window, the operation can be canceled …\nStarts closing all open windows together, the operation …\nStarts closing multiple windows together, the operation …\nSends a close request.\nGets the previous focused window if it was closed.\nIf the focus changed because the previously focused window …\nCommands that control the scoped window.\nOverride the preferred color scheme.\nIf the text must be actually inserted.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nWhether all set bits in a source flags value are also set …\nNew window context.\nWindow cursor icon and visibility.\nHandle expiration deadline.\n<code>WindowIcon::Default</code>\nNew <code>(11608, 8708)</code> at <code>None</code> scale.\nIs all by default.\n<code>RenderMode::Integrated</code>.\nDefines the render mode of windows opened by this service.\nTarget.\nBroadcast to all widgets.\nBroadcast to all widgets.\nBroadcast to all widgets.\nBroadcast to all widgets.\nBroadcast to all widgets.\nBroadcast to all widgets.\nBroadcast to all widgets.\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nGets the monitor area in device independent pixels.\nOpen a new headless window and update the app until the …\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nGet a flags value with all bits unset.\nEnable accessibility info.\nEnable accessibility info.\nDefines the enabled state of the window chrome buttons.\nReturns <code>true</code> if <code>new_state</code> is one of the fullscreen states …\nReturns <code>true</code> if <code>new_state</code> is <code>state</code> and <code>prev_state</code> is not.\nReturns <code>true</code> only if both are <code>MonitorQuery::Primary</code>.\nDefines if app process exit should be requested when the …\nReturns <code>true</code> if <code>prev_state</code> is one of the fullscreen states …\nReturns <code>true</code> if <code>prev_state</code> is <code>state</code> and <code>new_state</code> is not.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nBogus metadata for the <code>MonitorId::fallback</code>.\nIcon to use if the image cannot be displayed.\nReturns fallbacks that view-process implementers will try …\nRequest operating system focus for the window.\nDefines the active user attention required indicator.\nFocus a window if it is open or opening, otherwise opens …\nCause the headless window to think it is focused in the …\nReturns a shared reference to the focused window’s info.\nGets the id of the window that is focused in the operating …\nRoot font size.\nDefines if and how the frame pixels are captured for the …\nFrame that finished rendering.\nGenerate an image from the current rendered frame of the …\nGenerate an image from the current rendered frame of the …\nGenerate an image from the current rendered frame of the …\nThe frame pixels if it was requested when the frame …\nGenerate an image from a rectangular selection of the …\nGenerate an image from a selection of the current rendered …\nGenerate an image from a selection of the current rendered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns <code>AutoSize::CONTENT</code> if <code>content</code> is <code>true</code>, otherwise\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nSame as conversion from <code>&amp;str</code>.\nFrom encoded data of known format.\nFrom encoded data of <code>Unknown</code> format.\nFrom encoded data of <code>Unknown</code> format.\nFrom encoded data of known format.\nFrom encoded data of <code>Unknown</code> format.\nFrom encoded data of known format.\nSee <code>ImageSource</code> conversion from <code>&amp;str</code>\nFrom encoded data of known format.\nReturns the argument unchanged.\nFrom encoded data of <code>Unknown</code> format.\nSame as conversion from <code>&amp;str</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts <code>true</code> to <code>CursorIcon::Default</code> and <code>false</code> to …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value exactly.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nConvert from a bits value, unsetting any unknown bits.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nThe bitwise or (<code>|</code>) of the bits in each flags value.\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nGet a flags value with the bits of a flag with the given …\nWindow actual position on the virtual screen that …\nGets only headed windows that will close.\nGets only headless windows that will close.\nSetup a var that is controlled by the focus service and …\nCustom icon image click point, when the image data does …\nPixel in the source image that is the exact mouse position.\nGet the icon, image fallback or <code>None</code> if is hidden.\nWindow icon.\nUnique ID.\nIME exclusion area in the window space.\nCustom icon image source.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nThe bitwise and (<code>&amp;</code>) of the bits in two flags values.\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nWhether any set bits in a source flags value are also set …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nWhether all known bits in this flags value are set.\nIf <code>window_id</code> lost focus.\nIf <code>window_id</code> lost focus because it was closed.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nWhether all bits in this flags value are unset.\nIf <code>window_id</code> got focus.\nGets if the window is focused in the operating system.\nReturns <code>true</code> if <code>self</code> matches <code>Fullscreen</code> or <code>Exclusive</code>.\nReturns <code>true</code> if the window is open and has no pending …\nReturns <code>true</code> if the window is open and loaded.\nReturns <code>true</code> if the window is open and loaded.\nIf the window has finished loading.\nReturns <code>true</code> if the window is not open or has pending …\nReturns <code>true</code> if this event represents a window move.\nReturns <code>true</code> if the window is open.\nReturns <code>true</code> if the window is open.\nReturns <code>true</code> if the window is open.\nIf the window is open.\nReturns <code>true</code> if the <code>window_id</code> is associated with a pending …\nIf this monitor is the primary screen.\nReturns <code>true</code> if this event represents a window resize.\nReturns <code>true</code> if this event represents a window state …\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nYield a set of contained named flags values.\nGets a handle that stops the window from loading while the …\nGets a handle that stops the window from loading while the …\nGets a handle that stops the window from loading while the …\nMaximal window width and height constraint on the <code>size</code>.\nMinimal window width and height constraint on the <code>size</code>.\nDefines the <code>parent</code> connection.\nGet the window mode.\nModified monitors.\nGet monitor info.\nWindow monitor.\nDefines if the user can move the window using the window …\nName of the monitor.\nShow a native file dialog for the window.\nShow a native message dialog for the window.\nInstantiate a node that layouts and renders the window …\nGets the parent actual window and widget that hosts …\nGets the widget in <code>parent</code> that hosts the window, if it is …\nGets the hosted window ID if the widget hosts a nested …\nGets the hosted window info tree if the widget hosts a …\nGets the hosted window info tree if the widget hosts a …\nNew window from a <code>root</code> node that forms the window root …\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew args from values that convert into the argument types.\nNew with custom size at <code>None</code> scale.\nNew query.\nNew args from values that convert into the argument types.\nNew window from a <code>child</code> node that becomes the child of the …\nNewly focused window.\nNew with default size <code>(11608, 8708)</code> and custom scale.\nNew with custom size and scale.\nReturns the new window state if it has changed.\nNew test window.\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nThe bitwise negation (<code>!</code>) of the bits in a flags value, …\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nArguments for event that happened now (<code>INSTANT.now</code>).\nRequests a new window.\nRequests a new headless window.\nRequests a new headless window with pre-defined ID.\nRequests a new window with pre-defined ID.\nOpen a new headless window and returns the new window ID.\nDefines what window operations can run in parallel, …\nDefines the parent window.\nTop-left offset of the monitor region in the virtual …\nWindow top-left offset on the <code>monitor</code> when the window is …\nNew window position if it was moved.\nPixel-per-inch config var.\nPixel-per-inches used for the headless layout and …\nPreviously focused window.\nReturns the previous window state if it has changed.\nCaret/selection within the <code>txt</code> when it is preview.\nGets the monitor info marked as primary.\nGets the monitor area in pixels.\nThe refresh rate of this video mode, in millihertz.\nRegister the closure <code>handler</code> to be called for every new …\nRegister the closure <code>extender</code> to be called with the root …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nRemoved monitors.\nNew window icon from a closure that generates a new icon …\nWindow actual render mode.\nDefines if the user can resize the window using the window …\nWindow restore position and size when restoring to <code>Normal</code>.\nWindow restore state.\nThe window root content, extender must wrap this node with …\nRuns the application event loop and requests a new window.\nOpen a new headless window and update the app until the …\nPadding that must be applied to the window content so that …\nThe monitor scale factor.\nCurrent scale factor of the current monitor hosting the …\nThe scale factor used for the headless layout and …\nRuns the query.\nRuns the query. Falls back to <code>Primary</code>, or the largest or …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nCall <code>insert</code> when <code>value</code> is <code>true</code> or <code>remove</code> when <code>value</code> is …\nSet a custom <code>ime_area</code>.\nWidth/height of the monitor region in the virtual screen, …\nWindow width and height on the screen when the window is …\nNew window size if it was resized.\nSize of the imaginary monitor screen that contains the …\nResolution of this video mode.\nCursor image source.\nWindow screen state.\nWindow state change, if it has changed the values are …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe intersection of a source flags value with the …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nVariable that tracks the OS window manager configuration …\nAttempt to set a system wide shutdown warning associated …\nThe enabled text input widget.\nDefines if the window is visible in the task-bar.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nInstant the event happened.\nWindow title text.\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe bitwise exclusive-or (<code>^</code>) of the bits in two flags …\nThe text, preview or actual insert.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nThe bitwise or (<code>|</code>) of the bits in two flags values.\nWindow vars.\nReturns a shared reference the variables that control the …\nClone a reference to the variables that get and set window …\nClone a reference to the variables that get and set window …\nVideo mode for exclusive fullscreen.\nExclusive fullscreen video modes.\nAvailable video modes in the current monitor.\nAdd a view-process extension payload to the window request …\nCall a render extension with serialized payload for the …\nCall a view-process render extension with custom encoded …\nCall a headed window extension with serialized payload.\nCall a view-process headed window extension with custom …\nDefines if the window is visible on the screen and in the …\nWait until the window is loaded or closed.\nSearch for the widget info in all windows.\nReturns a shared reference to the latest widget tree info …\nReturns shared references to the widget trees of each open …\nCopy the current frame pixels of the window.\nId of window that has opened.\nWindow that has moved, resized or has a state change.\nWindow ID.\nIDs of windows that have closed.\nWindows closing, headed and headless.\nReturns <code>self</code> plus <code>fallbacks</code>.\nAll directions.\nRepresents the <strong>close IME</strong> action.\nRepresents the window <strong>close</strong> action.\nRepresents the window <strong>drag-move</strong> and <strong>drag-resize</strong> actions.\nRepresents the window <strong>toggle fullscreen</strong> action.\nThe east border will be moved.\nRepresents the window <strong>toggle fullscreen</strong> action.\nRepresents the window <strong>maximize</strong> action.\nRepresents the window <strong>minimize</strong> action.\nThe north border will be moved.\nThe north-east corner will be moved.\nThe north-west corner will be moved.\nRepresents the window <strong>open title bar context menu</strong> action.\nRepresents the window <strong>restore</strong> action.\nDefines the orientation that a window resize will be …\nThe south border will be moved.\nThe south-east corner will be moved.\nThe south-west corner will be moved.\nThe west border will be moved.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGets if this resize represents a single direction.\nGets if this resize represents two directions.")